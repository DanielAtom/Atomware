// dear imgui: Platform Binding for Windows (standard windows API for 32 and 64 bits applications)
// This needs to be used along with a Renderer (e.g. DirectX11, OpenGL3, Vulkan..)

// Implemented features:
//  [X] Platform: Clipboard support (for Win32 this is actually part of core imgui)
//  [X] Platform: Mouse cursor shape and visibility. Disable with 'io.ConfigFlags |= ImGuiConfigFlags_NoMouseCursorChange'.
//  [X] Platform: Keyboard arrays indexed using VK_* Virtual Key Codes, e.g. ImGui::IsKeyPressed(VK_SPACE).
//  [X] Platform: Gamepad support. Enabled with 'io.ConfigFlags |= ImGuiConfigFlags_NavEnableGamepad'.

#include "imgui.h"
#include "imgui_impl_win32.h"
#ifndef WIN32_LEAN_AND_MEAN
#define WIN32_LEAN_AND_MEAN
#endif
#include <windows.h>
#include <XInput.h>
#include <tchar.h>

// CHANGELOG
// (minor and older changes stripped away, please see git history for details)
//  2019-05-11: Inputs: Don't filter value from WM_CHAR before calling AddInputCharacter().
//  2019-01-17: Misc: Using GetForegroundWindow()+IsChild() instead of GetActiveWindow() to be compatible with windows created in a different thread or parent.
//  2019-01-17: Inputs: Added support for mouse buttons 4 and 5 via WM_XBUTTON* messages.
//  2019-01-15: Inputs: Added support for XInput gamepads (if ImGuiConfigFlags_NavEnableGamepad is set by user application).
//  2018-11-30: Misc: Setting up io.BackendPlatformName so it can be displayed in the About Window.
//  2018-06-29: Inputs: Added support for the ImGuiMouseCursor_Hand cursor.
//  2018-06-10: Inputs: Fixed handling of mouse wheel messages to support fine position messages (typically sent by track-pads).
//  2018-06-08: Misc: Extracted imgui_impl_win32.cpp/.h away from the old combined DX9/DX10/DX11/DX12 examples.
//  2018-03-20: Misc: Setup io.BackendFlags ImGuiBackendFlags_HasMouseCursors and ImGuiBackendFlags_HasSetMousePos flags + honor ImGuiConfigFlags_NoMouseCursorChange flag.
//  2018-02-20: Inputs: Added support for mouse cursors (ImGui::GetMouseCursor() value and WM_SETCURSOR message handling).
//  2018-02-06: Inputs: Added mapping for ImGuiKey_Space.
//  2018-02-06: Inputs: Honoring the io.WantSetMousePos by repositioning the mouse (when using navigation and ImGuiConfigFlags_NavMoveMouse is set).
//  2018-02-06: Misc: Removed call to ImGui::Shutdown() which is not available from 1.60 WIP, user needs to call CreateContext/DestroyContext themselves.
//  2018-01-20: Inputs: Added Horizontal Mouse Wheel support.
//  2018-01-08: Inputs: Added mapping for ImGuiKey_Insert.
//  2018-01-05: Inputs: Added WM_LBUTTONDBLCLK double-click handlers for window classes with the CS_DBLCLKS flag.
//  2017-10-23: Inputs: Added WM_SYSKEYDOWN / WM_SYSKEYUP handlers so e.g. the VK_MENU key can be read.
//  2017-10-23: Inputs: Using Win32 ::SetCapture/::GetCapture() to retrieve mouse positions outside the client area when dragging.
//  2016-11-12: Inputs: Only call Win32 ::SetCursor(NULL) when io.MouseDrawCursor is set.

// Win32 Data
static HWND                 g_hWnd = 0;
static INT64                g_Time = 0;
static INT64                g_TicksPerSecond = 0;
static ImGuiMouseCursor     g_LastMouseCursor = ImGuiMouseCursor_COUNT;
static bool                 g_HasGamepad = false;
static bool                 g_WantUpdateHasGamepad = true;

// Functions
bool    ImGui_ImplWin32_Init(void* hwnd)
{
    if (!::QueryPerformanceFrequency((LARGE_INTEGER*)& g_TicksPerSecond))
        return false;
    if (!::QueryPerformanceCounter((LARGE_INTEGER*)& g_Time))
        return false;

    // Setup back-end capabilities flags
    g_hWnd = (HWND)hwnd;
    ImGuiIO& io = ImGui::GetIO();
    io.BackendFlags |= ImGuiBackendFlags_HasMouseCursors;         // We can honor GetMouseCursor() values (optional)
    io.BackendFlags |= ImGuiBackendFlags_HasSetMousePos;          // We can honor io.WantSetMousePos requests (optional, rarely used)
    io.BackendPlatformName = "imgui_impl_win32";
    io.ImeWindowHandle = hwnd;

    // Keyboard mapping. ImGui will use those indices to peek into the io.KeysDown[] array that we will update during the application lifetime.
    io.KeyMap[ImGuiKey_Tab] = VK_TAB;
    io.KeyMap[ImGuiKey_LeftArrow] = VK_LEFT;
    io.KeyMap[ImGuiKey_RightArrow] = VK_RIGHT;
    io.KeyMap[ImGuiKey_UpArrow] = VK_UP;
    io.KeyMap[ImGuiKey_DownArrow] = VK_DOWN;
    io.KeyMap[ImGuiKey_PageUp] = VK_PRIOR;
    io.KeyMap[ImGuiKey_PageDown] = VK_NEXT;
    io.KeyMap[ImGuiKey_Home] = VK_HOME;
    io.KeyMap[ImGuiKey_End] = VK_END;
    io.KeyMap[ImGuiKey_Insert] = VK_INSERT;
    io.KeyMap[ImGuiKey_Delete] = VK_DELETE;
    io.KeyMap[ImGuiKey_Backspace] = VK_BACK;
    io.KeyMap[ImGuiKey_Space] = VK_SPACE;
    io.KeyMap[ImGuiKey_Enter] = VK_RETURN;
    io.KeyMap[ImGuiKey_Escape] = VK_ESCAPE;
    io.KeyMap[ImGuiKey_A] = 'A';
    io.KeyMap[ImGuiKey_C] = 'C';
    io.KeyMap[ImGuiKey_V] = 'V';
    io.KeyMap[ImGuiKey_X] = 'X';
    io.KeyMap[ImGuiKey_Y] = 'Y';
    io.KeyMap[ImGuiKey_Z] = 'Z';

    return true;
}

void    ImGui_ImplWin32_Shutdown()
{
    g_hWnd = (HWND)0;
}

static bool ImGui_ImplWin32_UpdateMouseCursor()
{
    ImGuiIO& io = ImGui::GetIO();
    if (io.ConfigFlags & ImGuiConfigFlags_NoMouseCursorChange)
        return false;

    ImGuiMouseCursor imgui_cursor = ImGui::GetMouseCursor();
    if (imgui_cursor == ImGuiMouseCursor_None || io.MouseDrawCursor)
    {
        // Hide OS mouse cursor if imgui is drawing it or if it wants no cursor
        ::SetCursor(NULL);
    } else
    {
        // Show OS mouse cursor
        LPTSTR win32_cursor = IDC_ARROW;
        switch (imgui_cursor)
        {
        case ImGuiMouseCursor_Arrow:        win32_cursor = IDC_ARROW; break;
        case ImGuiMouseCursor_TextInput:    win32_cursor = IDC_IBEAM; break;
        case ImGuiMouseCursor_ResizeAll:    win32_cursor = IDC_SIZEALL; break;
        case ImGuiMouseCursor_ResizeEW:     win32_cursor = IDC_SIZEWE; break;
        case ImGuiMouseCursor_ResizeNS:     win32_cursor = IDC_SIZENS; break;
        case ImGuiMouseCursor_ResizeNESW:   win32_cursor = IDC_SIZENESW; break;
        case ImGuiMouseCursor_ResizeNWSE:   win32_cursor = IDC_SIZENWSE; break;
        case ImGuiMouseCursor_Hand:         win32_cursor = IDC_HAND; break;
        }
        ::SetCursor(::LoadCursor(NULL, win32_cursor));
    }
    return true;
}

static void ImGui_ImplWin32_UpdateMousePos()
{
    ImGuiIO& io = ImGui::GetIO();

    // Set OS mouse position if requested (rarely used, only when ImGuiConfigFlags_NavEnableSetMousePos is enabled by user)
    if (io.WantSetMousePos)
    {
        POINT pos = { (int)io.MousePos.x, (int)io.MousePos.y };
        ::ClientToScreen(g_hWnd, &pos);
        ::SetCursorPos(pos.x, pos.y);
    }

    // Set mouse position
    io.MousePos = ImVec2(-FLT_MAX, -FLT_MAX);
    POINT pos;
    if (HWND active_window = ::GetForegroundWindow())
        if (active_window == g_hWnd || ::IsChild(active_window, g_hWnd))
            if (::GetCursorPos(&pos) && ::ScreenToClient(g_hWnd, &pos))
                io.MousePos = ImVec2((float)pos.x, (float)pos.y);
}

#ifdef _MSC_VER
// #pragma comment(lib, "xinput")
#endif

// Gamepad navigation mapping
static void ImGui_ImplWin32_UpdateGamepads()
{
    ImGuiIO& io = ImGui::GetIO();
    memset(io.NavInputs, 0, sizeof(io.NavInputs));
    if ((io.ConfigFlags & ImGuiConfigFlags_NavEnableGamepad) == 0)
        return;

    // Calling XInputGetState() every frame on disconnected gamepads is unfortunately too slow.
    // Instead we refresh gamepad availability by calling XInputGetCapabilities() _only_ after receiving WM_DEVICECHANGE.
    if (g_WantUpdateHasGamepad)
    {
        XINPUT_CAPABILITIES caps;
        g_HasGamepad = (XInputGetCapabilities(0, XINPUT_FLAG_GAMEPAD, &caps) == ERROR_SUCCESS);
        g_WantUpdateHasGamepad = false;
    }

    XINPUT_STATE xinput_state;
    io.BackendFlags &= ~ImGuiBackendFlags_HasGamepad;
    if (g_HasGamepad && XInputGetState(0, &xinput_state) == ERROR_SUCCESS)
    {
        const XINPUT_GAMEPAD& gamepad = xinput_state.Gamepad;
        io.BackendFlags |= ImGuiBackendFlags_HasGamepad;

#define MAP_BUTTON(NAV_NO, BUTTON_ENUM)     { io.NavInputs[NAV_NO] = (gamepad.wButtons & BUTTON_ENUM) ? 1.0f : 0.0f; }
#define MAP_ANALOG(NAV_NO, VALUE, V0, V1)   { float vn = (float)(VALUE - V0) / (float)(V1 - V0); if (vn > 1.0f) vn = 1.0f; if (vn > 0.0f && io.NavInputs[NAV_NO] < vn) io.NavInputs[NAV_NO] = vn; }
        MAP_BUTTON(ImGuiNavInput_Activate, XINPUT_GAMEPAD_A);              // Cross / A
        MAP_BUTTON(ImGuiNavInput_Cancel, XINPUT_GAMEPAD_B);              // Circle / B
        MAP_BUTTON(ImGuiNavInput_Menu, XINPUT_GAMEPAD_X);              // Square / X
        MAP_BUTTON(ImGuiNavInput_Input, XINPUT_GAMEPAD_Y);              // Triangle / Y
        MAP_BUTTON(ImGuiNavInput_DpadLeft, XINPUT_GAMEPAD_DPAD_LEFT);      // D-Pad Left
        MAP_BUTTON(ImGuiNavInput_DpadRight, XINPUT_GAMEPAD_DPAD_RIGHT);     // D-Pad Right
        MAP_BUTTON(ImGuiNavInput_DpadUp, XINPUT_GAMEPAD_DPAD_UP);        // D-Pad Up
        MAP_BUTTON(ImGuiNavInput_DpadDown, XINPUT_GAMEPAD_DPAD_DOWN);      // D-Pad Down
        MAP_BUTTON(ImGuiNavInput_FocusPrev, XINPUT_GAMEPAD_LEFT_SHOULDER);  // L1 / LB
        MAP_BUTTON(ImGuiNavInput_FocusNext, XINPUT_GAMEPAD_RIGHT_SHOULDER); // R1 / RB
        MAP_BUTTON(ImGuiNavInput_TweakSlow, XINPUT_GAMEPAD_LEFT_SHOULDER);  // L1 / LB
        MAP_BUTTON(ImGuiNavInput_TweakFast, XINPUT_GAMEPAD_RIGHT_SHOULDER); // R1 / RB
        MAP_ANALOG(ImGuiNavInput_LStickLeft, gamepad.sThumbLX, -XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE, -32768);
        MAP_ANALOG(ImGuiNavInput_LStickRight, gamepad.sThumbLX, +XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE, +32767);
        MAP_ANALOG(ImGuiNavInput_LStickUp, gamepad.sThumbLY, +XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE, +32767);
        MAP_ANALOG(ImGuiNavInput_LStickDown, gamepad.sThumbLY, -XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE, -32767);
#undef MAP_BUTTON
#undef MAP_ANALOG
    }
}

void    ImGui_ImplWin32_NewFrame()
{
    ImGuiIO& io = ImGui::GetIO();
    IM_ASSERT(io.Fonts->IsBuilt() && "Font atlas not built! It is generally built by the renderer back-end. Missing call to renderer _NewFrame() function? e.g. ImGui_ImplOpenGL3_NewFrame().");

    // Setup display size (every frame to accommodate for window resizing)
    RECT rect;
    ::GetClientRect(g_hWnd, &rect);
    io.DisplaySize = ImVec2((float)(rect.right - rect.left), (float)(rect.bottom - rect.top));

    // Setup time step
    INT64 current_time;
    ::QueryPerformanceCounter((LARGE_INTEGER*)& current_time);
    io.DeltaTime = (float)(current_time - g_Time) / g_TicksPerSecond;
    g_Time = current_time;

    // Read keyboard modifiers inputs
    io.KeyCtrl = (::GetKeyState(VK_CONTROL) & 0x8000) != 0;
    io.KeyShift = (::GetKeyState(VK_SHIFT) & 0x8000) != 0;
    io.KeyAlt = (::GetKeyState(VK_MENU) & 0x8000) != 0;
    io.KeySuper = false;
    // io.KeysDown[], io.MousePos, io.MouseDown[], io.MouseWheel: filled by the WndProc handler below.

    // Update OS mouse position
    ImGui_ImplWin32_UpdateMousePos();

    // Update OS mouse cursor with the cursor requested by imgui
    ImGuiMouseCursor mouse_cursor = io.MouseDrawCursor ? ImGuiMouseCursor_None : ImGui::GetMouseCursor();
    if (g_LastMouseCursor != mouse_cursor)
    {
        g_LastMouseCursor = mouse_cursor;
        ImGui_ImplWin32_UpdateMouseCursor();
    }

    // Update game controllers (if enabled and available)
    // ImGui_ImplWin32_UpdateGamepads();
}

// Allow compilation with old Windows SDK. MinGW doesn't have default _WIN32_WINNT/WINVER versions.
#ifndef WM_MOUSEHWHEEL
#define WM_MOUSEHWHEEL 0x020E
#endif
#ifndef DBT_DEVNODES_CHANGED
#define DBT_DEVNODES_CHANGED 0x0007
#endif

// Process Win32 mouse/keyboard inputs.
// You can read the io.WantCaptureMouse, io.WantCaptureKeyboard flags to tell if dear imgui wants to use your inputs.
// - When io.WantCaptureMouse is true, do not dispatch mouse input data to your main application.
// - When io.WantCaptureKeyboard is true, do not dispatch keyboard input data to your main application.
// Generally you may always pass all inputs to dear imgui, and hide them from your application based on those two flags.
// PS: In this Win32 handler, we use the capture API (GetCapture/SetCapture/ReleaseCapture) to be able to read mouse coordinates when dragging mouse outside of our window bounds.
// PS: We treat DBLCLK messages as regular mouse down messages, so this code will work on windows classes that have the CS_DBLCLKS flag set. Our own example app code doesn't set this flag.
IMGUI_IMPL_API LRESULT ImGui_ImplWin32_WndProcHandler(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)
{
    if (ImGui::GetCurrentContext() == NULL)
        return 0;

    ImGuiIO& io = ImGui::GetIO();
    switch (msg)
    {
    case WM_LBUTTONDOWN: case WM_LBUTTONDBLCLK:
    case WM_RBUTTONDOWN: case WM_RBUTTONDBLCLK:
    case WM_MBUTTONDOWN: case WM_MBUTTONDBLCLK:
    case WM_XBUTTONDOWN: case WM_XBUTTONDBLCLK:
    {
        int button = 0;
        if (msg == WM_LBUTTONDOWN || msg == WM_LBUTTONDBLCLK) { button = 0; }
        if (msg == WM_RBUTTONDOWN || msg == WM_RBUTTONDBLCLK) { button = 1; }
        if (msg == WM_MBUTTONDOWN || msg == WM_MBUTTONDBLCLK) { button = 2; }
        if (msg == WM_XBUTTONDOWN || msg == WM_XBUTTONDBLCLK) { button = (GET_XBUTTON_WPARAM(wParam) == XBUTTON1) ? 3 : 4; }
        if (!ImGui::IsAnyMouseDown() && ::GetCapture() == NULL)
            ::SetCapture(hwnd);
        io.MouseDown[button] = true;
        return 0;
    }
    case WM_LBUTTONUP:
    case WM_RBUTTONUP:
    case WM_MBUTTONUP:
    case WM_XBUTTONUP:
    {
        int button = 0;
        if (msg == WM_LBUTTONUP) { button = 0; }
        if (msg == WM_RBUTTONUP) { button = 1; }
        if (msg == WM_MBUTTONUP) { button = 2; }
        if (msg == WM_XBUTTONUP) { button = (GET_XBUTTON_WPARAM(wParam) == XBUTTON1) ? 3 : 4; }
        io.MouseDown[button] = false;
        if (!ImGui::IsAnyMouseDown() && ::GetCapture() == hwnd)
            ::ReleaseCapture();
        return 0;
    }
    case WM_MOUSEWHEEL:
        io.MouseWheel += (float)GET_WHEEL_DELTA_WPARAM(wParam) / (float)WHEEL_DELTA;
        return 0;
    case WM_MOUSEHWHEEL:
        io.MouseWheelH += (float)GET_WHEEL_DELTA_WPARAM(wParam) / (float)WHEEL_DELTA;
        return 0;
    case WM_KEYDOWN:
    case WM_SYSKEYDOWN:
        if (wParam < 256)
            io.KeysDown[wParam] = 1;
        return 0;
    case WM_KEYUP:
    case WM_SYSKEYUP:
        if (wParam < 256)
            io.KeysDown[wParam] = 0;
        return 0;
    case WM_CHAR:
        // You can also use ToAscii()+GetKeyboardState() to retrieve characters.
        if (wchar_t w; MultiByteToWideChar(CP_ACP, MB_PRECOMPOSED, (char*)&wParam, 1, &w, 1) == 1)
            io.AddInputCharacter((unsigned int)w);
        return 0;
    case WM_SETCURSOR:
        if (LOWORD(lParam) == HTCLIENT && ImGui_ImplWin32_UpdateMouseCursor())
            return 1;
        return 0;
    case WM_DEVICECHANGE:
        if ((UINT)wParam == DBT_DEVNODES_CHANGED)
            g_WantUpdateHasGamepad = true;
        return 0;
    case WM_ACTIVATEAPP:
        if (hwnd == g_hWnd && wParam == FALSE) {
            memset(io.MouseDown, 0, sizeof(io.MouseDown));
            memset(io.KeysDown, 0, sizeof(io.KeysDown));
        }
        return 0;
    }
    return 0;
}

// Junk Code By Peatreat & Thaisen's Gen
void bkHtaBNdGtHRFCeXQqav27045693() {     int uflQMQuOZfBsTPXyhpNo57072092 = -101855195;    int uflQMQuOZfBsTPXyhpNo11592152 = -604968877;    int uflQMQuOZfBsTPXyhpNo93831780 = -831594114;    int uflQMQuOZfBsTPXyhpNo36191381 = -659397894;    int uflQMQuOZfBsTPXyhpNo52369560 = -192526542;    int uflQMQuOZfBsTPXyhpNo2888421 = 78113550;    int uflQMQuOZfBsTPXyhpNo31727926 = -654490527;    int uflQMQuOZfBsTPXyhpNo10330915 = -229887122;    int uflQMQuOZfBsTPXyhpNo41815509 = -699063097;    int uflQMQuOZfBsTPXyhpNo34787524 = -707897107;    int uflQMQuOZfBsTPXyhpNo46600913 = -796186408;    int uflQMQuOZfBsTPXyhpNo59628600 = -381902082;    int uflQMQuOZfBsTPXyhpNo19338220 = -552559181;    int uflQMQuOZfBsTPXyhpNo34855326 = -799164915;    int uflQMQuOZfBsTPXyhpNo64630647 = -482127165;    int uflQMQuOZfBsTPXyhpNo6874604 = -549693612;    int uflQMQuOZfBsTPXyhpNo77380317 = 83866619;    int uflQMQuOZfBsTPXyhpNo24033232 = -964018321;    int uflQMQuOZfBsTPXyhpNo90062115 = -836354516;    int uflQMQuOZfBsTPXyhpNo97021309 = -56491719;    int uflQMQuOZfBsTPXyhpNo59421805 = -278463282;    int uflQMQuOZfBsTPXyhpNo71694783 = -300589670;    int uflQMQuOZfBsTPXyhpNo98364014 = -588396862;    int uflQMQuOZfBsTPXyhpNo65798468 = -651454926;    int uflQMQuOZfBsTPXyhpNo45934429 = -255781558;    int uflQMQuOZfBsTPXyhpNo92884265 = -587373131;    int uflQMQuOZfBsTPXyhpNo58921534 = -351230097;    int uflQMQuOZfBsTPXyhpNo86843895 = 52955551;    int uflQMQuOZfBsTPXyhpNo19321472 = -802924884;    int uflQMQuOZfBsTPXyhpNo49000096 = -225304091;    int uflQMQuOZfBsTPXyhpNo30279791 = -849016249;    int uflQMQuOZfBsTPXyhpNo41511251 = -396999467;    int uflQMQuOZfBsTPXyhpNo67342916 = -777595912;    int uflQMQuOZfBsTPXyhpNo74771820 = -845945646;    int uflQMQuOZfBsTPXyhpNo94273359 = -6153415;    int uflQMQuOZfBsTPXyhpNo55101281 = -158565725;    int uflQMQuOZfBsTPXyhpNo48698191 = -35076527;    int uflQMQuOZfBsTPXyhpNo4329094 = -830744391;    int uflQMQuOZfBsTPXyhpNo43897647 = -842351267;    int uflQMQuOZfBsTPXyhpNo58056541 = -120789499;    int uflQMQuOZfBsTPXyhpNo85739219 = -39432687;    int uflQMQuOZfBsTPXyhpNo18352727 = -235663315;    int uflQMQuOZfBsTPXyhpNo4845983 = -985204715;    int uflQMQuOZfBsTPXyhpNo41326597 = -113475634;    int uflQMQuOZfBsTPXyhpNo78441594 = -5957038;    int uflQMQuOZfBsTPXyhpNo73935211 = -57493334;    int uflQMQuOZfBsTPXyhpNo80478320 = -120127154;    int uflQMQuOZfBsTPXyhpNo55891592 = 53958468;    int uflQMQuOZfBsTPXyhpNo40493194 = -589336954;    int uflQMQuOZfBsTPXyhpNo31583091 = -195320188;    int uflQMQuOZfBsTPXyhpNo71061546 = -534459543;    int uflQMQuOZfBsTPXyhpNo11545537 = -735205562;    int uflQMQuOZfBsTPXyhpNo2015837 = 68690789;    int uflQMQuOZfBsTPXyhpNo38639990 = -438500781;    int uflQMQuOZfBsTPXyhpNo67623887 = -914665460;    int uflQMQuOZfBsTPXyhpNo85377309 = -801265525;    int uflQMQuOZfBsTPXyhpNo13228137 = 83427985;    int uflQMQuOZfBsTPXyhpNo28033312 = -80139189;    int uflQMQuOZfBsTPXyhpNo90256952 = -303616337;    int uflQMQuOZfBsTPXyhpNo59485294 = -605153412;    int uflQMQuOZfBsTPXyhpNo43966886 = -570656354;    int uflQMQuOZfBsTPXyhpNo44884031 = -607446078;    int uflQMQuOZfBsTPXyhpNo91009442 = -426962239;    int uflQMQuOZfBsTPXyhpNo92815412 = -373759007;    int uflQMQuOZfBsTPXyhpNo4507734 = -858880859;    int uflQMQuOZfBsTPXyhpNo5089662 = -299186942;    int uflQMQuOZfBsTPXyhpNo92285683 = -604306170;    int uflQMQuOZfBsTPXyhpNo44566400 = -706613536;    int uflQMQuOZfBsTPXyhpNo40581966 = -693011501;    int uflQMQuOZfBsTPXyhpNo9529367 = -223561440;    int uflQMQuOZfBsTPXyhpNo58176412 = -414617086;    int uflQMQuOZfBsTPXyhpNo73051223 = -85388990;    int uflQMQuOZfBsTPXyhpNo80135585 = -21667055;    int uflQMQuOZfBsTPXyhpNo32005575 = -615565018;    int uflQMQuOZfBsTPXyhpNo11282090 = 82940968;    int uflQMQuOZfBsTPXyhpNo41069079 = 57200032;    int uflQMQuOZfBsTPXyhpNo66848801 = -315384956;    int uflQMQuOZfBsTPXyhpNo57037417 = -374921229;    int uflQMQuOZfBsTPXyhpNo87356874 = -545497888;    int uflQMQuOZfBsTPXyhpNo71999217 = -98288224;    int uflQMQuOZfBsTPXyhpNo12405946 = -367245978;    int uflQMQuOZfBsTPXyhpNo3029942 = -305188566;    int uflQMQuOZfBsTPXyhpNo46350701 = -357707495;    int uflQMQuOZfBsTPXyhpNo87738381 = -507604696;    int uflQMQuOZfBsTPXyhpNo77938550 = -690844548;    int uflQMQuOZfBsTPXyhpNo18734254 = -13810687;    int uflQMQuOZfBsTPXyhpNo39495415 = -365690256;    int uflQMQuOZfBsTPXyhpNo28702927 = -239095131;    int uflQMQuOZfBsTPXyhpNo7147933 = -931280186;    int uflQMQuOZfBsTPXyhpNo8896051 = -204887891;    int uflQMQuOZfBsTPXyhpNo41873144 = -141993711;    int uflQMQuOZfBsTPXyhpNo20664879 = -954937339;    int uflQMQuOZfBsTPXyhpNo14072142 = -427128054;    int uflQMQuOZfBsTPXyhpNo84412353 = -137197855;    int uflQMQuOZfBsTPXyhpNo14089655 = -550133146;    int uflQMQuOZfBsTPXyhpNo40855189 = -431986610;    int uflQMQuOZfBsTPXyhpNo27343284 = -808701077;    int uflQMQuOZfBsTPXyhpNo12030571 = -511445709;    int uflQMQuOZfBsTPXyhpNo36818864 = -254594776;    int uflQMQuOZfBsTPXyhpNo73351932 = -101855195;     uflQMQuOZfBsTPXyhpNo57072092 = uflQMQuOZfBsTPXyhpNo11592152;     uflQMQuOZfBsTPXyhpNo11592152 = uflQMQuOZfBsTPXyhpNo93831780;     uflQMQuOZfBsTPXyhpNo93831780 = uflQMQuOZfBsTPXyhpNo36191381;     uflQMQuOZfBsTPXyhpNo36191381 = uflQMQuOZfBsTPXyhpNo52369560;     uflQMQuOZfBsTPXyhpNo52369560 = uflQMQuOZfBsTPXyhpNo2888421;     uflQMQuOZfBsTPXyhpNo2888421 = uflQMQuOZfBsTPXyhpNo31727926;     uflQMQuOZfBsTPXyhpNo31727926 = uflQMQuOZfBsTPXyhpNo10330915;     uflQMQuOZfBsTPXyhpNo10330915 = uflQMQuOZfBsTPXyhpNo41815509;     uflQMQuOZfBsTPXyhpNo41815509 = uflQMQuOZfBsTPXyhpNo34787524;     uflQMQuOZfBsTPXyhpNo34787524 = uflQMQuOZfBsTPXyhpNo46600913;     uflQMQuOZfBsTPXyhpNo46600913 = uflQMQuOZfBsTPXyhpNo59628600;     uflQMQuOZfBsTPXyhpNo59628600 = uflQMQuOZfBsTPXyhpNo19338220;     uflQMQuOZfBsTPXyhpNo19338220 = uflQMQuOZfBsTPXyhpNo34855326;     uflQMQuOZfBsTPXyhpNo34855326 = uflQMQuOZfBsTPXyhpNo64630647;     uflQMQuOZfBsTPXyhpNo64630647 = uflQMQuOZfBsTPXyhpNo6874604;     uflQMQuOZfBsTPXyhpNo6874604 = uflQMQuOZfBsTPXyhpNo77380317;     uflQMQuOZfBsTPXyhpNo77380317 = uflQMQuOZfBsTPXyhpNo24033232;     uflQMQuOZfBsTPXyhpNo24033232 = uflQMQuOZfBsTPXyhpNo90062115;     uflQMQuOZfBsTPXyhpNo90062115 = uflQMQuOZfBsTPXyhpNo97021309;     uflQMQuOZfBsTPXyhpNo97021309 = uflQMQuOZfBsTPXyhpNo59421805;     uflQMQuOZfBsTPXyhpNo59421805 = uflQMQuOZfBsTPXyhpNo71694783;     uflQMQuOZfBsTPXyhpNo71694783 = uflQMQuOZfBsTPXyhpNo98364014;     uflQMQuOZfBsTPXyhpNo98364014 = uflQMQuOZfBsTPXyhpNo65798468;     uflQMQuOZfBsTPXyhpNo65798468 = uflQMQuOZfBsTPXyhpNo45934429;     uflQMQuOZfBsTPXyhpNo45934429 = uflQMQuOZfBsTPXyhpNo92884265;     uflQMQuOZfBsTPXyhpNo92884265 = uflQMQuOZfBsTPXyhpNo58921534;     uflQMQuOZfBsTPXyhpNo58921534 = uflQMQuOZfBsTPXyhpNo86843895;     uflQMQuOZfBsTPXyhpNo86843895 = uflQMQuOZfBsTPXyhpNo19321472;     uflQMQuOZfBsTPXyhpNo19321472 = uflQMQuOZfBsTPXyhpNo49000096;     uflQMQuOZfBsTPXyhpNo49000096 = uflQMQuOZfBsTPXyhpNo30279791;     uflQMQuOZfBsTPXyhpNo30279791 = uflQMQuOZfBsTPXyhpNo41511251;     uflQMQuOZfBsTPXyhpNo41511251 = uflQMQuOZfBsTPXyhpNo67342916;     uflQMQuOZfBsTPXyhpNo67342916 = uflQMQuOZfBsTPXyhpNo74771820;     uflQMQuOZfBsTPXyhpNo74771820 = uflQMQuOZfBsTPXyhpNo94273359;     uflQMQuOZfBsTPXyhpNo94273359 = uflQMQuOZfBsTPXyhpNo55101281;     uflQMQuOZfBsTPXyhpNo55101281 = uflQMQuOZfBsTPXyhpNo48698191;     uflQMQuOZfBsTPXyhpNo48698191 = uflQMQuOZfBsTPXyhpNo4329094;     uflQMQuOZfBsTPXyhpNo4329094 = uflQMQuOZfBsTPXyhpNo43897647;     uflQMQuOZfBsTPXyhpNo43897647 = uflQMQuOZfBsTPXyhpNo58056541;     uflQMQuOZfBsTPXyhpNo58056541 = uflQMQuOZfBsTPXyhpNo85739219;     uflQMQuOZfBsTPXyhpNo85739219 = uflQMQuOZfBsTPXyhpNo18352727;     uflQMQuOZfBsTPXyhpNo18352727 = uflQMQuOZfBsTPXyhpNo4845983;     uflQMQuOZfBsTPXyhpNo4845983 = uflQMQuOZfBsTPXyhpNo41326597;     uflQMQuOZfBsTPXyhpNo41326597 = uflQMQuOZfBsTPXyhpNo78441594;     uflQMQuOZfBsTPXyhpNo78441594 = uflQMQuOZfBsTPXyhpNo73935211;     uflQMQuOZfBsTPXyhpNo73935211 = uflQMQuOZfBsTPXyhpNo80478320;     uflQMQuOZfBsTPXyhpNo80478320 = uflQMQuOZfBsTPXyhpNo55891592;     uflQMQuOZfBsTPXyhpNo55891592 = uflQMQuOZfBsTPXyhpNo40493194;     uflQMQuOZfBsTPXyhpNo40493194 = uflQMQuOZfBsTPXyhpNo31583091;     uflQMQuOZfBsTPXyhpNo31583091 = uflQMQuOZfBsTPXyhpNo71061546;     uflQMQuOZfBsTPXyhpNo71061546 = uflQMQuOZfBsTPXyhpNo11545537;     uflQMQuOZfBsTPXyhpNo11545537 = uflQMQuOZfBsTPXyhpNo2015837;     uflQMQuOZfBsTPXyhpNo2015837 = uflQMQuOZfBsTPXyhpNo38639990;     uflQMQuOZfBsTPXyhpNo38639990 = uflQMQuOZfBsTPXyhpNo67623887;     uflQMQuOZfBsTPXyhpNo67623887 = uflQMQuOZfBsTPXyhpNo85377309;     uflQMQuOZfBsTPXyhpNo85377309 = uflQMQuOZfBsTPXyhpNo13228137;     uflQMQuOZfBsTPXyhpNo13228137 = uflQMQuOZfBsTPXyhpNo28033312;     uflQMQuOZfBsTPXyhpNo28033312 = uflQMQuOZfBsTPXyhpNo90256952;     uflQMQuOZfBsTPXyhpNo90256952 = uflQMQuOZfBsTPXyhpNo59485294;     uflQMQuOZfBsTPXyhpNo59485294 = uflQMQuOZfBsTPXyhpNo43966886;     uflQMQuOZfBsTPXyhpNo43966886 = uflQMQuOZfBsTPXyhpNo44884031;     uflQMQuOZfBsTPXyhpNo44884031 = uflQMQuOZfBsTPXyhpNo91009442;     uflQMQuOZfBsTPXyhpNo91009442 = uflQMQuOZfBsTPXyhpNo92815412;     uflQMQuOZfBsTPXyhpNo92815412 = uflQMQuOZfBsTPXyhpNo4507734;     uflQMQuOZfBsTPXyhpNo4507734 = uflQMQuOZfBsTPXyhpNo5089662;     uflQMQuOZfBsTPXyhpNo5089662 = uflQMQuOZfBsTPXyhpNo92285683;     uflQMQuOZfBsTPXyhpNo92285683 = uflQMQuOZfBsTPXyhpNo44566400;     uflQMQuOZfBsTPXyhpNo44566400 = uflQMQuOZfBsTPXyhpNo40581966;     uflQMQuOZfBsTPXyhpNo40581966 = uflQMQuOZfBsTPXyhpNo9529367;     uflQMQuOZfBsTPXyhpNo9529367 = uflQMQuOZfBsTPXyhpNo58176412;     uflQMQuOZfBsTPXyhpNo58176412 = uflQMQuOZfBsTPXyhpNo73051223;     uflQMQuOZfBsTPXyhpNo73051223 = uflQMQuOZfBsTPXyhpNo80135585;     uflQMQuOZfBsTPXyhpNo80135585 = uflQMQuOZfBsTPXyhpNo32005575;     uflQMQuOZfBsTPXyhpNo32005575 = uflQMQuOZfBsTPXyhpNo11282090;     uflQMQuOZfBsTPXyhpNo11282090 = uflQMQuOZfBsTPXyhpNo41069079;     uflQMQuOZfBsTPXyhpNo41069079 = uflQMQuOZfBsTPXyhpNo66848801;     uflQMQuOZfBsTPXyhpNo66848801 = uflQMQuOZfBsTPXyhpNo57037417;     uflQMQuOZfBsTPXyhpNo57037417 = uflQMQuOZfBsTPXyhpNo87356874;     uflQMQuOZfBsTPXyhpNo87356874 = uflQMQuOZfBsTPXyhpNo71999217;     uflQMQuOZfBsTPXyhpNo71999217 = uflQMQuOZfBsTPXyhpNo12405946;     uflQMQuOZfBsTPXyhpNo12405946 = uflQMQuOZfBsTPXyhpNo3029942;     uflQMQuOZfBsTPXyhpNo3029942 = uflQMQuOZfBsTPXyhpNo46350701;     uflQMQuOZfBsTPXyhpNo46350701 = uflQMQuOZfBsTPXyhpNo87738381;     uflQMQuOZfBsTPXyhpNo87738381 = uflQMQuOZfBsTPXyhpNo77938550;     uflQMQuOZfBsTPXyhpNo77938550 = uflQMQuOZfBsTPXyhpNo18734254;     uflQMQuOZfBsTPXyhpNo18734254 = uflQMQuOZfBsTPXyhpNo39495415;     uflQMQuOZfBsTPXyhpNo39495415 = uflQMQuOZfBsTPXyhpNo28702927;     uflQMQuOZfBsTPXyhpNo28702927 = uflQMQuOZfBsTPXyhpNo7147933;     uflQMQuOZfBsTPXyhpNo7147933 = uflQMQuOZfBsTPXyhpNo8896051;     uflQMQuOZfBsTPXyhpNo8896051 = uflQMQuOZfBsTPXyhpNo41873144;     uflQMQuOZfBsTPXyhpNo41873144 = uflQMQuOZfBsTPXyhpNo20664879;     uflQMQuOZfBsTPXyhpNo20664879 = uflQMQuOZfBsTPXyhpNo14072142;     uflQMQuOZfBsTPXyhpNo14072142 = uflQMQuOZfBsTPXyhpNo84412353;     uflQMQuOZfBsTPXyhpNo84412353 = uflQMQuOZfBsTPXyhpNo14089655;     uflQMQuOZfBsTPXyhpNo14089655 = uflQMQuOZfBsTPXyhpNo40855189;     uflQMQuOZfBsTPXyhpNo40855189 = uflQMQuOZfBsTPXyhpNo27343284;     uflQMQuOZfBsTPXyhpNo27343284 = uflQMQuOZfBsTPXyhpNo12030571;     uflQMQuOZfBsTPXyhpNo12030571 = uflQMQuOZfBsTPXyhpNo36818864;     uflQMQuOZfBsTPXyhpNo36818864 = uflQMQuOZfBsTPXyhpNo73351932;     uflQMQuOZfBsTPXyhpNo73351932 = uflQMQuOZfBsTPXyhpNo57072092;}
// Junk Finished

// Junk Code By Peatreat & Thaisen's Gen
void dGVwlYaytSyzpIGHbxpG51145479() {     int RXRoOpRkvsZZvxkFfzqg59991039 = -423127946;    int RXRoOpRkvsZZvxkFfzqg42915788 = -7633935;    int RXRoOpRkvsZZvxkFfzqg5764068 = -319619344;    int RXRoOpRkvsZZvxkFfzqg32550921 = -849231163;    int RXRoOpRkvsZZvxkFfzqg50097298 = -157311127;    int RXRoOpRkvsZZvxkFfzqg92179463 = -992010060;    int RXRoOpRkvsZZvxkFfzqg79051786 = -33171603;    int RXRoOpRkvsZZvxkFfzqg20714540 = -606675800;    int RXRoOpRkvsZZvxkFfzqg78291842 = -955067757;    int RXRoOpRkvsZZvxkFfzqg48622385 = -445052394;    int RXRoOpRkvsZZvxkFfzqg29919509 = -359820509;    int RXRoOpRkvsZZvxkFfzqg12036936 = -633344670;    int RXRoOpRkvsZZvxkFfzqg95974741 = -746919224;    int RXRoOpRkvsZZvxkFfzqg69054038 = -784587946;    int RXRoOpRkvsZZvxkFfzqg40839463 = -911521086;    int RXRoOpRkvsZZvxkFfzqg84914866 = -468169221;    int RXRoOpRkvsZZvxkFfzqg21241556 = -21638519;    int RXRoOpRkvsZZvxkFfzqg5946897 = -565006294;    int RXRoOpRkvsZZvxkFfzqg31708867 = -594251881;    int RXRoOpRkvsZZvxkFfzqg94926290 = -691589717;    int RXRoOpRkvsZZvxkFfzqg47848840 = -763738265;    int RXRoOpRkvsZZvxkFfzqg20527919 = -293552771;    int RXRoOpRkvsZZvxkFfzqg33484332 = -466902836;    int RXRoOpRkvsZZvxkFfzqg74576587 = -478903791;    int RXRoOpRkvsZZvxkFfzqg70271186 = -683040573;    int RXRoOpRkvsZZvxkFfzqg76419799 = -245472136;    int RXRoOpRkvsZZvxkFfzqg22082824 = -443665658;    int RXRoOpRkvsZZvxkFfzqg41963671 = -671765624;    int RXRoOpRkvsZZvxkFfzqg84469075 = -33270857;    int RXRoOpRkvsZZvxkFfzqg73450421 = -54161263;    int RXRoOpRkvsZZvxkFfzqg44766510 = 34993692;    int RXRoOpRkvsZZvxkFfzqg59473131 = -484721803;    int RXRoOpRkvsZZvxkFfzqg36905484 = -751731640;    int RXRoOpRkvsZZvxkFfzqg75404000 = -865469290;    int RXRoOpRkvsZZvxkFfzqg30572388 = -7207031;    int RXRoOpRkvsZZvxkFfzqg60728213 = -170392494;    int RXRoOpRkvsZZvxkFfzqg73754452 = -341148404;    int RXRoOpRkvsZZvxkFfzqg16472721 = -621161047;    int RXRoOpRkvsZZvxkFfzqg24892454 = -778982473;    int RXRoOpRkvsZZvxkFfzqg56960519 = -260482432;    int RXRoOpRkvsZZvxkFfzqg73014533 = -32824058;    int RXRoOpRkvsZZvxkFfzqg95001984 = -854675780;    int RXRoOpRkvsZZvxkFfzqg39262934 = -924933501;    int RXRoOpRkvsZZvxkFfzqg57385178 = -761766622;    int RXRoOpRkvsZZvxkFfzqg66396450 = -637977552;    int RXRoOpRkvsZZvxkFfzqg27574366 = -802391009;    int RXRoOpRkvsZZvxkFfzqg10785838 = -784844084;    int RXRoOpRkvsZZvxkFfzqg334437 = -619289208;    int RXRoOpRkvsZZvxkFfzqg93817507 = -525114414;    int RXRoOpRkvsZZvxkFfzqg87768493 = -576328102;    int RXRoOpRkvsZZvxkFfzqg5495194 = -483170889;    int RXRoOpRkvsZZvxkFfzqg68947934 = -788671985;    int RXRoOpRkvsZZvxkFfzqg10505093 = 72888520;    int RXRoOpRkvsZZvxkFfzqg25996507 = -719587954;    int RXRoOpRkvsZZvxkFfzqg3296639 = -180810940;    int RXRoOpRkvsZZvxkFfzqg39463121 = -29575176;    int RXRoOpRkvsZZvxkFfzqg9431457 = -540731100;    int RXRoOpRkvsZZvxkFfzqg31187480 = -840715553;    int RXRoOpRkvsZZvxkFfzqg62279734 = -66190590;    int RXRoOpRkvsZZvxkFfzqg73677499 = -911838991;    int RXRoOpRkvsZZvxkFfzqg70096639 = -448344402;    int RXRoOpRkvsZZvxkFfzqg37088116 = -361405980;    int RXRoOpRkvsZZvxkFfzqg36245464 = -473404944;    int RXRoOpRkvsZZvxkFfzqg4841421 = -800906495;    int RXRoOpRkvsZZvxkFfzqg3855875 = -380046087;    int RXRoOpRkvsZZvxkFfzqg70446378 = -875098706;    int RXRoOpRkvsZZvxkFfzqg75131452 = -881613030;    int RXRoOpRkvsZZvxkFfzqg20570741 = -881449935;    int RXRoOpRkvsZZvxkFfzqg38481650 = -677380915;    int RXRoOpRkvsZZvxkFfzqg80111250 = -641128593;    int RXRoOpRkvsZZvxkFfzqg11160415 = -27020818;    int RXRoOpRkvsZZvxkFfzqg4768836 = -400477473;    int RXRoOpRkvsZZvxkFfzqg81054443 = -786023821;    int RXRoOpRkvsZZvxkFfzqg74748347 = -233769450;    int RXRoOpRkvsZZvxkFfzqg21911758 = -558765659;    int RXRoOpRkvsZZvxkFfzqg52846856 = -909062486;    int RXRoOpRkvsZZvxkFfzqg81264985 = -368619270;    int RXRoOpRkvsZZvxkFfzqg76099153 = -705136215;    int RXRoOpRkvsZZvxkFfzqg8180137 = -840926239;    int RXRoOpRkvsZZvxkFfzqg42696820 = -880649565;    int RXRoOpRkvsZZvxkFfzqg65633961 = -460628053;    int RXRoOpRkvsZZvxkFfzqg21748387 = -824376451;    int RXRoOpRkvsZZvxkFfzqg48146163 = -46651210;    int RXRoOpRkvsZZvxkFfzqg96700581 = -456942756;    int RXRoOpRkvsZZvxkFfzqg67955228 = -570990374;    int RXRoOpRkvsZZvxkFfzqg75818576 = -176334324;    int RXRoOpRkvsZZvxkFfzqg48968038 = -457610324;    int RXRoOpRkvsZZvxkFfzqg10908977 = 67856313;    int RXRoOpRkvsZZvxkFfzqg72107362 = -584658350;    int RXRoOpRkvsZZvxkFfzqg91109267 = -977631856;    int RXRoOpRkvsZZvxkFfzqg51296757 = -629661394;    int RXRoOpRkvsZZvxkFfzqg42566972 = -500432851;    int RXRoOpRkvsZZvxkFfzqg54192986 = -454970457;    int RXRoOpRkvsZZvxkFfzqg51214955 = -867143482;    int RXRoOpRkvsZZvxkFfzqg86863879 = -812138030;    int RXRoOpRkvsZZvxkFfzqg35926418 = -671418079;    int RXRoOpRkvsZZvxkFfzqg58756520 = -281270837;    int RXRoOpRkvsZZvxkFfzqg34421513 = -24027007;    int RXRoOpRkvsZZvxkFfzqg53529303 = -281720536;    int RXRoOpRkvsZZvxkFfzqg95950072 = -423127946;     RXRoOpRkvsZZvxkFfzqg59991039 = RXRoOpRkvsZZvxkFfzqg42915788;     RXRoOpRkvsZZvxkFfzqg42915788 = RXRoOpRkvsZZvxkFfzqg5764068;     RXRoOpRkvsZZvxkFfzqg5764068 = RXRoOpRkvsZZvxkFfzqg32550921;     RXRoOpRkvsZZvxkFfzqg32550921 = RXRoOpRkvsZZvxkFfzqg50097298;     RXRoOpRkvsZZvxkFfzqg50097298 = RXRoOpRkvsZZvxkFfzqg92179463;     RXRoOpRkvsZZvxkFfzqg92179463 = RXRoOpRkvsZZvxkFfzqg79051786;     RXRoOpRkvsZZvxkFfzqg79051786 = RXRoOpRkvsZZvxkFfzqg20714540;     RXRoOpRkvsZZvxkFfzqg20714540 = RXRoOpRkvsZZvxkFfzqg78291842;     RXRoOpRkvsZZvxkFfzqg78291842 = RXRoOpRkvsZZvxkFfzqg48622385;     RXRoOpRkvsZZvxkFfzqg48622385 = RXRoOpRkvsZZvxkFfzqg29919509;     RXRoOpRkvsZZvxkFfzqg29919509 = RXRoOpRkvsZZvxkFfzqg12036936;     RXRoOpRkvsZZvxkFfzqg12036936 = RXRoOpRkvsZZvxkFfzqg95974741;     RXRoOpRkvsZZvxkFfzqg95974741 = RXRoOpRkvsZZvxkFfzqg69054038;     RXRoOpRkvsZZvxkFfzqg69054038 = RXRoOpRkvsZZvxkFfzqg40839463;     RXRoOpRkvsZZvxkFfzqg40839463 = RXRoOpRkvsZZvxkFfzqg84914866;     RXRoOpRkvsZZvxkFfzqg84914866 = RXRoOpRkvsZZvxkFfzqg21241556;     RXRoOpRkvsZZvxkFfzqg21241556 = RXRoOpRkvsZZvxkFfzqg5946897;     RXRoOpRkvsZZvxkFfzqg5946897 = RXRoOpRkvsZZvxkFfzqg31708867;     RXRoOpRkvsZZvxkFfzqg31708867 = RXRoOpRkvsZZvxkFfzqg94926290;     RXRoOpRkvsZZvxkFfzqg94926290 = RXRoOpRkvsZZvxkFfzqg47848840;     RXRoOpRkvsZZvxkFfzqg47848840 = RXRoOpRkvsZZvxkFfzqg20527919;     RXRoOpRkvsZZvxkFfzqg20527919 = RXRoOpRkvsZZvxkFfzqg33484332;     RXRoOpRkvsZZvxkFfzqg33484332 = RXRoOpRkvsZZvxkFfzqg74576587;     RXRoOpRkvsZZvxkFfzqg74576587 = RXRoOpRkvsZZvxkFfzqg70271186;     RXRoOpRkvsZZvxkFfzqg70271186 = RXRoOpRkvsZZvxkFfzqg76419799;     RXRoOpRkvsZZvxkFfzqg76419799 = RXRoOpRkvsZZvxkFfzqg22082824;     RXRoOpRkvsZZvxkFfzqg22082824 = RXRoOpRkvsZZvxkFfzqg41963671;     RXRoOpRkvsZZvxkFfzqg41963671 = RXRoOpRkvsZZvxkFfzqg84469075;     RXRoOpRkvsZZvxkFfzqg84469075 = RXRoOpRkvsZZvxkFfzqg73450421;     RXRoOpRkvsZZvxkFfzqg73450421 = RXRoOpRkvsZZvxkFfzqg44766510;     RXRoOpRkvsZZvxkFfzqg44766510 = RXRoOpRkvsZZvxkFfzqg59473131;     RXRoOpRkvsZZvxkFfzqg59473131 = RXRoOpRkvsZZvxkFfzqg36905484;     RXRoOpRkvsZZvxkFfzqg36905484 = RXRoOpRkvsZZvxkFfzqg75404000;     RXRoOpRkvsZZvxkFfzqg75404000 = RXRoOpRkvsZZvxkFfzqg30572388;     RXRoOpRkvsZZvxkFfzqg30572388 = RXRoOpRkvsZZvxkFfzqg60728213;     RXRoOpRkvsZZvxkFfzqg60728213 = RXRoOpRkvsZZvxkFfzqg73754452;     RXRoOpRkvsZZvxkFfzqg73754452 = RXRoOpRkvsZZvxkFfzqg16472721;     RXRoOpRkvsZZvxkFfzqg16472721 = RXRoOpRkvsZZvxkFfzqg24892454;     RXRoOpRkvsZZvxkFfzqg24892454 = RXRoOpRkvsZZvxkFfzqg56960519;     RXRoOpRkvsZZvxkFfzqg56960519 = RXRoOpRkvsZZvxkFfzqg73014533;     RXRoOpRkvsZZvxkFfzqg73014533 = RXRoOpRkvsZZvxkFfzqg95001984;     RXRoOpRkvsZZvxkFfzqg95001984 = RXRoOpRkvsZZvxkFfzqg39262934;     RXRoOpRkvsZZvxkFfzqg39262934 = RXRoOpRkvsZZvxkFfzqg57385178;     RXRoOpRkvsZZvxkFfzqg57385178 = RXRoOpRkvsZZvxkFfzqg66396450;     RXRoOpRkvsZZvxkFfzqg66396450 = RXRoOpRkvsZZvxkFfzqg27574366;     RXRoOpRkvsZZvxkFfzqg27574366 = RXRoOpRkvsZZvxkFfzqg10785838;     RXRoOpRkvsZZvxkFfzqg10785838 = RXRoOpRkvsZZvxkFfzqg334437;     RXRoOpRkvsZZvxkFfzqg334437 = RXRoOpRkvsZZvxkFfzqg93817507;     RXRoOpRkvsZZvxkFfzqg93817507 = RXRoOpRkvsZZvxkFfzqg87768493;     RXRoOpRkvsZZvxkFfzqg87768493 = RXRoOpRkvsZZvxkFfzqg5495194;     RXRoOpRkvsZZvxkFfzqg5495194 = RXRoOpRkvsZZvxkFfzqg68947934;     RXRoOpRkvsZZvxkFfzqg68947934 = RXRoOpRkvsZZvxkFfzqg10505093;     RXRoOpRkvsZZvxkFfzqg10505093 = RXRoOpRkvsZZvxkFfzqg25996507;     RXRoOpRkvsZZvxkFfzqg25996507 = RXRoOpRkvsZZvxkFfzqg3296639;     RXRoOpRkvsZZvxkFfzqg3296639 = RXRoOpRkvsZZvxkFfzqg39463121;     RXRoOpRkvsZZvxkFfzqg39463121 = RXRoOpRkvsZZvxkFfzqg9431457;     RXRoOpRkvsZZvxkFfzqg9431457 = RXRoOpRkvsZZvxkFfzqg31187480;     RXRoOpRkvsZZvxkFfzqg31187480 = RXRoOpRkvsZZvxkFfzqg62279734;     RXRoOpRkvsZZvxkFfzqg62279734 = RXRoOpRkvsZZvxkFfzqg73677499;     RXRoOpRkvsZZvxkFfzqg73677499 = RXRoOpRkvsZZvxkFfzqg70096639;     RXRoOpRkvsZZvxkFfzqg70096639 = RXRoOpRkvsZZvxkFfzqg37088116;     RXRoOpRkvsZZvxkFfzqg37088116 = RXRoOpRkvsZZvxkFfzqg36245464;     RXRoOpRkvsZZvxkFfzqg36245464 = RXRoOpRkvsZZvxkFfzqg4841421;     RXRoOpRkvsZZvxkFfzqg4841421 = RXRoOpRkvsZZvxkFfzqg3855875;     RXRoOpRkvsZZvxkFfzqg3855875 = RXRoOpRkvsZZvxkFfzqg70446378;     RXRoOpRkvsZZvxkFfzqg70446378 = RXRoOpRkvsZZvxkFfzqg75131452;     RXRoOpRkvsZZvxkFfzqg75131452 = RXRoOpRkvsZZvxkFfzqg20570741;     RXRoOpRkvsZZvxkFfzqg20570741 = RXRoOpRkvsZZvxkFfzqg38481650;     RXRoOpRkvsZZvxkFfzqg38481650 = RXRoOpRkvsZZvxkFfzqg80111250;     RXRoOpRkvsZZvxkFfzqg80111250 = RXRoOpRkvsZZvxkFfzqg11160415;     RXRoOpRkvsZZvxkFfzqg11160415 = RXRoOpRkvsZZvxkFfzqg4768836;     RXRoOpRkvsZZvxkFfzqg4768836 = RXRoOpRkvsZZvxkFfzqg81054443;     RXRoOpRkvsZZvxkFfzqg81054443 = RXRoOpRkvsZZvxkFfzqg74748347;     RXRoOpRkvsZZvxkFfzqg74748347 = RXRoOpRkvsZZvxkFfzqg21911758;     RXRoOpRkvsZZvxkFfzqg21911758 = RXRoOpRkvsZZvxkFfzqg52846856;     RXRoOpRkvsZZvxkFfzqg52846856 = RXRoOpRkvsZZvxkFfzqg81264985;     RXRoOpRkvsZZvxkFfzqg81264985 = RXRoOpRkvsZZvxkFfzqg76099153;     RXRoOpRkvsZZvxkFfzqg76099153 = RXRoOpRkvsZZvxkFfzqg8180137;     RXRoOpRkvsZZvxkFfzqg8180137 = RXRoOpRkvsZZvxkFfzqg42696820;     RXRoOpRkvsZZvxkFfzqg42696820 = RXRoOpRkvsZZvxkFfzqg65633961;     RXRoOpRkvsZZvxkFfzqg65633961 = RXRoOpRkvsZZvxkFfzqg21748387;     RXRoOpRkvsZZvxkFfzqg21748387 = RXRoOpRkvsZZvxkFfzqg48146163;     RXRoOpRkvsZZvxkFfzqg48146163 = RXRoOpRkvsZZvxkFfzqg96700581;     RXRoOpRkvsZZvxkFfzqg96700581 = RXRoOpRkvsZZvxkFfzqg67955228;     RXRoOpRkvsZZvxkFfzqg67955228 = RXRoOpRkvsZZvxkFfzqg75818576;     RXRoOpRkvsZZvxkFfzqg75818576 = RXRoOpRkvsZZvxkFfzqg48968038;     RXRoOpRkvsZZvxkFfzqg48968038 = RXRoOpRkvsZZvxkFfzqg10908977;     RXRoOpRkvsZZvxkFfzqg10908977 = RXRoOpRkvsZZvxkFfzqg72107362;     RXRoOpRkvsZZvxkFfzqg72107362 = RXRoOpRkvsZZvxkFfzqg91109267;     RXRoOpRkvsZZvxkFfzqg91109267 = RXRoOpRkvsZZvxkFfzqg51296757;     RXRoOpRkvsZZvxkFfzqg51296757 = RXRoOpRkvsZZvxkFfzqg42566972;     RXRoOpRkvsZZvxkFfzqg42566972 = RXRoOpRkvsZZvxkFfzqg54192986;     RXRoOpRkvsZZvxkFfzqg54192986 = RXRoOpRkvsZZvxkFfzqg51214955;     RXRoOpRkvsZZvxkFfzqg51214955 = RXRoOpRkvsZZvxkFfzqg86863879;     RXRoOpRkvsZZvxkFfzqg86863879 = RXRoOpRkvsZZvxkFfzqg35926418;     RXRoOpRkvsZZvxkFfzqg35926418 = RXRoOpRkvsZZvxkFfzqg58756520;     RXRoOpRkvsZZvxkFfzqg58756520 = RXRoOpRkvsZZvxkFfzqg34421513;     RXRoOpRkvsZZvxkFfzqg34421513 = RXRoOpRkvsZZvxkFfzqg53529303;     RXRoOpRkvsZZvxkFfzqg53529303 = RXRoOpRkvsZZvxkFfzqg95950072;     RXRoOpRkvsZZvxkFfzqg95950072 = RXRoOpRkvsZZvxkFfzqg59991039;}
// Junk Finished

// Junk Code By Peatreat & Thaisen's Gen
void YxFmUNugimPniYhmicjt27487796() {     int zMFIjAsBZXaSCbsEqIXn92251848 = 1224292;    int zMFIjAsBZXaSCbsEqIXn44138224 = -681250820;    int zMFIjAsBZXaSCbsEqIXn39040647 = -422478727;    int zMFIjAsBZXaSCbsEqIXn74059034 = -669466873;    int zMFIjAsBZXaSCbsEqIXn35214816 = -807044687;    int zMFIjAsBZXaSCbsEqIXn26276176 = -959985330;    int zMFIjAsBZXaSCbsEqIXn76544087 = -217613436;    int zMFIjAsBZXaSCbsEqIXn43469835 = -340824706;    int zMFIjAsBZXaSCbsEqIXn51643286 = -831371158;    int zMFIjAsBZXaSCbsEqIXn36130300 = -617919202;    int zMFIjAsBZXaSCbsEqIXn91309549 = -948024752;    int zMFIjAsBZXaSCbsEqIXn33190377 = -304501828;    int zMFIjAsBZXaSCbsEqIXn24636790 = 46599317;    int zMFIjAsBZXaSCbsEqIXn73249936 = -214135819;    int zMFIjAsBZXaSCbsEqIXn79500368 = -53877857;    int zMFIjAsBZXaSCbsEqIXn4991038 = -49456893;    int zMFIjAsBZXaSCbsEqIXn27102727 = -37573097;    int zMFIjAsBZXaSCbsEqIXn90567600 = -573899692;    int zMFIjAsBZXaSCbsEqIXn12076107 = -262943570;    int zMFIjAsBZXaSCbsEqIXn6118326 = -296345861;    int zMFIjAsBZXaSCbsEqIXn60809545 = 49199519;    int zMFIjAsBZXaSCbsEqIXn86261555 = -465222448;    int zMFIjAsBZXaSCbsEqIXn3539237 = -236523507;    int zMFIjAsBZXaSCbsEqIXn93155277 = -594872273;    int zMFIjAsBZXaSCbsEqIXn58926245 = -761088754;    int zMFIjAsBZXaSCbsEqIXn45931829 = -813492625;    int zMFIjAsBZXaSCbsEqIXn47204909 = -441723157;    int zMFIjAsBZXaSCbsEqIXn24704746 = -400330019;    int zMFIjAsBZXaSCbsEqIXn30152639 = -715328928;    int zMFIjAsBZXaSCbsEqIXn34818521 = -100054738;    int zMFIjAsBZXaSCbsEqIXn85593912 = -819655916;    int zMFIjAsBZXaSCbsEqIXn17647408 = -635968738;    int zMFIjAsBZXaSCbsEqIXn8975113 = -980849975;    int zMFIjAsBZXaSCbsEqIXn10954044 = -98144982;    int zMFIjAsBZXaSCbsEqIXn71205218 = -420627793;    int zMFIjAsBZXaSCbsEqIXn49190076 = -182758460;    int zMFIjAsBZXaSCbsEqIXn66960596 = -558280451;    int zMFIjAsBZXaSCbsEqIXn45741538 = -622727275;    int zMFIjAsBZXaSCbsEqIXn62667568 = -372566459;    int zMFIjAsBZXaSCbsEqIXn32634092 = -491998688;    int zMFIjAsBZXaSCbsEqIXn88072230 = -830140448;    int zMFIjAsBZXaSCbsEqIXn28865913 = -798091258;    int zMFIjAsBZXaSCbsEqIXn84996284 = -337038489;    int zMFIjAsBZXaSCbsEqIXn26167356 = -895047082;    int zMFIjAsBZXaSCbsEqIXn42415299 = -334611074;    int zMFIjAsBZXaSCbsEqIXn15235655 = -500996199;    int zMFIjAsBZXaSCbsEqIXn42659945 = -714771837;    int zMFIjAsBZXaSCbsEqIXn54546652 = -349167946;    int zMFIjAsBZXaSCbsEqIXn60358759 = -38891766;    int zMFIjAsBZXaSCbsEqIXn55571834 = -261352023;    int zMFIjAsBZXaSCbsEqIXn84998886 = -463865122;    int zMFIjAsBZXaSCbsEqIXn99026084 = -155064434;    int zMFIjAsBZXaSCbsEqIXn39367041 = -987169715;    int zMFIjAsBZXaSCbsEqIXn33375990 = -871713481;    int zMFIjAsBZXaSCbsEqIXn66678251 = -192914784;    int zMFIjAsBZXaSCbsEqIXn5990294 = -533553260;    int zMFIjAsBZXaSCbsEqIXn40598987 = -344727313;    int zMFIjAsBZXaSCbsEqIXn45885370 = -827606454;    int zMFIjAsBZXaSCbsEqIXn15132790 = -908378119;    int zMFIjAsBZXaSCbsEqIXn89282987 = -993552062;    int zMFIjAsBZXaSCbsEqIXn79071266 = -418262173;    int zMFIjAsBZXaSCbsEqIXn51839341 = -817283418;    int zMFIjAsBZXaSCbsEqIXn13317197 = -625495778;    int zMFIjAsBZXaSCbsEqIXn16824765 = -631316421;    int zMFIjAsBZXaSCbsEqIXn50536387 = -798263286;    int zMFIjAsBZXaSCbsEqIXn73662141 = -212056014;    int zMFIjAsBZXaSCbsEqIXn24215264 = -323651853;    int zMFIjAsBZXaSCbsEqIXn13682747 = -855255702;    int zMFIjAsBZXaSCbsEqIXn2044719 = -793508026;    int zMFIjAsBZXaSCbsEqIXn30310293 = -871119397;    int zMFIjAsBZXaSCbsEqIXn38030442 = -491176443;    int zMFIjAsBZXaSCbsEqIXn81361189 = -414845823;    int zMFIjAsBZXaSCbsEqIXn27900033 = -101333234;    int zMFIjAsBZXaSCbsEqIXn79442014 = -770944883;    int zMFIjAsBZXaSCbsEqIXn18046095 = -466205413;    int zMFIjAsBZXaSCbsEqIXn31943633 = -152709224;    int zMFIjAsBZXaSCbsEqIXn1265271 = -28183960;    int zMFIjAsBZXaSCbsEqIXn77371880 = -341476425;    int zMFIjAsBZXaSCbsEqIXn50739978 = -160261199;    int zMFIjAsBZXaSCbsEqIXn43690591 = -160092556;    int zMFIjAsBZXaSCbsEqIXn3271884 = 1279211;    int zMFIjAsBZXaSCbsEqIXn92658256 = 7444788;    int zMFIjAsBZXaSCbsEqIXn64345987 = -261438254;    int zMFIjAsBZXaSCbsEqIXn74580805 = -353976905;    int zMFIjAsBZXaSCbsEqIXn49819635 = -636189617;    int zMFIjAsBZXaSCbsEqIXn86567828 = -564591483;    int zMFIjAsBZXaSCbsEqIXn78280367 = -648799024;    int zMFIjAsBZXaSCbsEqIXn75599123 = -9136495;    int zMFIjAsBZXaSCbsEqIXn44275793 = -905230198;    int zMFIjAsBZXaSCbsEqIXn65214925 = -887074533;    int zMFIjAsBZXaSCbsEqIXn8591089 = -838031147;    int zMFIjAsBZXaSCbsEqIXn21075226 = -730673997;    int zMFIjAsBZXaSCbsEqIXn30608749 = -714349156;    int zMFIjAsBZXaSCbsEqIXn73384580 = -379014398;    int zMFIjAsBZXaSCbsEqIXn53562826 = 26263485;    int zMFIjAsBZXaSCbsEqIXn36232889 = 87142969;    int zMFIjAsBZXaSCbsEqIXn15548716 = -72595480;    int zMFIjAsBZXaSCbsEqIXn68171519 = -705722069;    int zMFIjAsBZXaSCbsEqIXn75630969 = 3216203;    int zMFIjAsBZXaSCbsEqIXn68753158 = 1224292;     zMFIjAsBZXaSCbsEqIXn92251848 = zMFIjAsBZXaSCbsEqIXn44138224;     zMFIjAsBZXaSCbsEqIXn44138224 = zMFIjAsBZXaSCbsEqIXn39040647;     zMFIjAsBZXaSCbsEqIXn39040647 = zMFIjAsBZXaSCbsEqIXn74059034;     zMFIjAsBZXaSCbsEqIXn74059034 = zMFIjAsBZXaSCbsEqIXn35214816;     zMFIjAsBZXaSCbsEqIXn35214816 = zMFIjAsBZXaSCbsEqIXn26276176;     zMFIjAsBZXaSCbsEqIXn26276176 = zMFIjAsBZXaSCbsEqIXn76544087;     zMFIjAsBZXaSCbsEqIXn76544087 = zMFIjAsBZXaSCbsEqIXn43469835;     zMFIjAsBZXaSCbsEqIXn43469835 = zMFIjAsBZXaSCbsEqIXn51643286;     zMFIjAsBZXaSCbsEqIXn51643286 = zMFIjAsBZXaSCbsEqIXn36130300;     zMFIjAsBZXaSCbsEqIXn36130300 = zMFIjAsBZXaSCbsEqIXn91309549;     zMFIjAsBZXaSCbsEqIXn91309549 = zMFIjAsBZXaSCbsEqIXn33190377;     zMFIjAsBZXaSCbsEqIXn33190377 = zMFIjAsBZXaSCbsEqIXn24636790;     zMFIjAsBZXaSCbsEqIXn24636790 = zMFIjAsBZXaSCbsEqIXn73249936;     zMFIjAsBZXaSCbsEqIXn73249936 = zMFIjAsBZXaSCbsEqIXn79500368;     zMFIjAsBZXaSCbsEqIXn79500368 = zMFIjAsBZXaSCbsEqIXn4991038;     zMFIjAsBZXaSCbsEqIXn4991038 = zMFIjAsBZXaSCbsEqIXn27102727;     zMFIjAsBZXaSCbsEqIXn27102727 = zMFIjAsBZXaSCbsEqIXn90567600;     zMFIjAsBZXaSCbsEqIXn90567600 = zMFIjAsBZXaSCbsEqIXn12076107;     zMFIjAsBZXaSCbsEqIXn12076107 = zMFIjAsBZXaSCbsEqIXn6118326;     zMFIjAsBZXaSCbsEqIXn6118326 = zMFIjAsBZXaSCbsEqIXn60809545;     zMFIjAsBZXaSCbsEqIXn60809545 = zMFIjAsBZXaSCbsEqIXn86261555;     zMFIjAsBZXaSCbsEqIXn86261555 = zMFIjAsBZXaSCbsEqIXn3539237;     zMFIjAsBZXaSCbsEqIXn3539237 = zMFIjAsBZXaSCbsEqIXn93155277;     zMFIjAsBZXaSCbsEqIXn93155277 = zMFIjAsBZXaSCbsEqIXn58926245;     zMFIjAsBZXaSCbsEqIXn58926245 = zMFIjAsBZXaSCbsEqIXn45931829;     zMFIjAsBZXaSCbsEqIXn45931829 = zMFIjAsBZXaSCbsEqIXn47204909;     zMFIjAsBZXaSCbsEqIXn47204909 = zMFIjAsBZXaSCbsEqIXn24704746;     zMFIjAsBZXaSCbsEqIXn24704746 = zMFIjAsBZXaSCbsEqIXn30152639;     zMFIjAsBZXaSCbsEqIXn30152639 = zMFIjAsBZXaSCbsEqIXn34818521;     zMFIjAsBZXaSCbsEqIXn34818521 = zMFIjAsBZXaSCbsEqIXn85593912;     zMFIjAsBZXaSCbsEqIXn85593912 = zMFIjAsBZXaSCbsEqIXn17647408;     zMFIjAsBZXaSCbsEqIXn17647408 = zMFIjAsBZXaSCbsEqIXn8975113;     zMFIjAsBZXaSCbsEqIXn8975113 = zMFIjAsBZXaSCbsEqIXn10954044;     zMFIjAsBZXaSCbsEqIXn10954044 = zMFIjAsBZXaSCbsEqIXn71205218;     zMFIjAsBZXaSCbsEqIXn71205218 = zMFIjAsBZXaSCbsEqIXn49190076;     zMFIjAsBZXaSCbsEqIXn49190076 = zMFIjAsBZXaSCbsEqIXn66960596;     zMFIjAsBZXaSCbsEqIXn66960596 = zMFIjAsBZXaSCbsEqIXn45741538;     zMFIjAsBZXaSCbsEqIXn45741538 = zMFIjAsBZXaSCbsEqIXn62667568;     zMFIjAsBZXaSCbsEqIXn62667568 = zMFIjAsBZXaSCbsEqIXn32634092;     zMFIjAsBZXaSCbsEqIXn32634092 = zMFIjAsBZXaSCbsEqIXn88072230;     zMFIjAsBZXaSCbsEqIXn88072230 = zMFIjAsBZXaSCbsEqIXn28865913;     zMFIjAsBZXaSCbsEqIXn28865913 = zMFIjAsBZXaSCbsEqIXn84996284;     zMFIjAsBZXaSCbsEqIXn84996284 = zMFIjAsBZXaSCbsEqIXn26167356;     zMFIjAsBZXaSCbsEqIXn26167356 = zMFIjAsBZXaSCbsEqIXn42415299;     zMFIjAsBZXaSCbsEqIXn42415299 = zMFIjAsBZXaSCbsEqIXn15235655;     zMFIjAsBZXaSCbsEqIXn15235655 = zMFIjAsBZXaSCbsEqIXn42659945;     zMFIjAsBZXaSCbsEqIXn42659945 = zMFIjAsBZXaSCbsEqIXn54546652;     zMFIjAsBZXaSCbsEqIXn54546652 = zMFIjAsBZXaSCbsEqIXn60358759;     zMFIjAsBZXaSCbsEqIXn60358759 = zMFIjAsBZXaSCbsEqIXn55571834;     zMFIjAsBZXaSCbsEqIXn55571834 = zMFIjAsBZXaSCbsEqIXn84998886;     zMFIjAsBZXaSCbsEqIXn84998886 = zMFIjAsBZXaSCbsEqIXn99026084;     zMFIjAsBZXaSCbsEqIXn99026084 = zMFIjAsBZXaSCbsEqIXn39367041;     zMFIjAsBZXaSCbsEqIXn39367041 = zMFIjAsBZXaSCbsEqIXn33375990;     zMFIjAsBZXaSCbsEqIXn33375990 = zMFIjAsBZXaSCbsEqIXn66678251;     zMFIjAsBZXaSCbsEqIXn66678251 = zMFIjAsBZXaSCbsEqIXn5990294;     zMFIjAsBZXaSCbsEqIXn5990294 = zMFIjAsBZXaSCbsEqIXn40598987;     zMFIjAsBZXaSCbsEqIXn40598987 = zMFIjAsBZXaSCbsEqIXn45885370;     zMFIjAsBZXaSCbsEqIXn45885370 = zMFIjAsBZXaSCbsEqIXn15132790;     zMFIjAsBZXaSCbsEqIXn15132790 = zMFIjAsBZXaSCbsEqIXn89282987;     zMFIjAsBZXaSCbsEqIXn89282987 = zMFIjAsBZXaSCbsEqIXn79071266;     zMFIjAsBZXaSCbsEqIXn79071266 = zMFIjAsBZXaSCbsEqIXn51839341;     zMFIjAsBZXaSCbsEqIXn51839341 = zMFIjAsBZXaSCbsEqIXn13317197;     zMFIjAsBZXaSCbsEqIXn13317197 = zMFIjAsBZXaSCbsEqIXn16824765;     zMFIjAsBZXaSCbsEqIXn16824765 = zMFIjAsBZXaSCbsEqIXn50536387;     zMFIjAsBZXaSCbsEqIXn50536387 = zMFIjAsBZXaSCbsEqIXn73662141;     zMFIjAsBZXaSCbsEqIXn73662141 = zMFIjAsBZXaSCbsEqIXn24215264;     zMFIjAsBZXaSCbsEqIXn24215264 = zMFIjAsBZXaSCbsEqIXn13682747;     zMFIjAsBZXaSCbsEqIXn13682747 = zMFIjAsBZXaSCbsEqIXn2044719;     zMFIjAsBZXaSCbsEqIXn2044719 = zMFIjAsBZXaSCbsEqIXn30310293;     zMFIjAsBZXaSCbsEqIXn30310293 = zMFIjAsBZXaSCbsEqIXn38030442;     zMFIjAsBZXaSCbsEqIXn38030442 = zMFIjAsBZXaSCbsEqIXn81361189;     zMFIjAsBZXaSCbsEqIXn81361189 = zMFIjAsBZXaSCbsEqIXn27900033;     zMFIjAsBZXaSCbsEqIXn27900033 = zMFIjAsBZXaSCbsEqIXn79442014;     zMFIjAsBZXaSCbsEqIXn79442014 = zMFIjAsBZXaSCbsEqIXn18046095;     zMFIjAsBZXaSCbsEqIXn18046095 = zMFIjAsBZXaSCbsEqIXn31943633;     zMFIjAsBZXaSCbsEqIXn31943633 = zMFIjAsBZXaSCbsEqIXn1265271;     zMFIjAsBZXaSCbsEqIXn1265271 = zMFIjAsBZXaSCbsEqIXn77371880;     zMFIjAsBZXaSCbsEqIXn77371880 = zMFIjAsBZXaSCbsEqIXn50739978;     zMFIjAsBZXaSCbsEqIXn50739978 = zMFIjAsBZXaSCbsEqIXn43690591;     zMFIjAsBZXaSCbsEqIXn43690591 = zMFIjAsBZXaSCbsEqIXn3271884;     zMFIjAsBZXaSCbsEqIXn3271884 = zMFIjAsBZXaSCbsEqIXn92658256;     zMFIjAsBZXaSCbsEqIXn92658256 = zMFIjAsBZXaSCbsEqIXn64345987;     zMFIjAsBZXaSCbsEqIXn64345987 = zMFIjAsBZXaSCbsEqIXn74580805;     zMFIjAsBZXaSCbsEqIXn74580805 = zMFIjAsBZXaSCbsEqIXn49819635;     zMFIjAsBZXaSCbsEqIXn49819635 = zMFIjAsBZXaSCbsEqIXn86567828;     zMFIjAsBZXaSCbsEqIXn86567828 = zMFIjAsBZXaSCbsEqIXn78280367;     zMFIjAsBZXaSCbsEqIXn78280367 = zMFIjAsBZXaSCbsEqIXn75599123;     zMFIjAsBZXaSCbsEqIXn75599123 = zMFIjAsBZXaSCbsEqIXn44275793;     zMFIjAsBZXaSCbsEqIXn44275793 = zMFIjAsBZXaSCbsEqIXn65214925;     zMFIjAsBZXaSCbsEqIXn65214925 = zMFIjAsBZXaSCbsEqIXn8591089;     zMFIjAsBZXaSCbsEqIXn8591089 = zMFIjAsBZXaSCbsEqIXn21075226;     zMFIjAsBZXaSCbsEqIXn21075226 = zMFIjAsBZXaSCbsEqIXn30608749;     zMFIjAsBZXaSCbsEqIXn30608749 = zMFIjAsBZXaSCbsEqIXn73384580;     zMFIjAsBZXaSCbsEqIXn73384580 = zMFIjAsBZXaSCbsEqIXn53562826;     zMFIjAsBZXaSCbsEqIXn53562826 = zMFIjAsBZXaSCbsEqIXn36232889;     zMFIjAsBZXaSCbsEqIXn36232889 = zMFIjAsBZXaSCbsEqIXn15548716;     zMFIjAsBZXaSCbsEqIXn15548716 = zMFIjAsBZXaSCbsEqIXn68171519;     zMFIjAsBZXaSCbsEqIXn68171519 = zMFIjAsBZXaSCbsEqIXn75630969;     zMFIjAsBZXaSCbsEqIXn75630969 = zMFIjAsBZXaSCbsEqIXn68753158;     zMFIjAsBZXaSCbsEqIXn68753158 = zMFIjAsBZXaSCbsEqIXn92251848;}
// Junk Finished

// Junk Code By Peatreat & Thaisen's Gen
void iZHHoDXmvZkPfCNMPTSB51587582() {     int hEWBEHSHtaVxcrnNVhqb95170795 = -320048459;    int hEWBEHSHtaVxcrnNVhqb75461860 = -83915878;    int hEWBEHSHtaVxcrnNVhqb50972934 = 89496044;    int hEWBEHSHtaVxcrnNVhqb70418574 = -859300141;    int hEWBEHSHtaVxcrnNVhqb32942554 = -771829272;    int hEWBEHSHtaVxcrnNVhqb15567219 = -930108940;    int hEWBEHSHtaVxcrnNVhqb23867948 = -696294513;    int hEWBEHSHtaVxcrnNVhqb53853461 = -717613384;    int hEWBEHSHtaVxcrnNVhqb88119620 = 12624182;    int hEWBEHSHtaVxcrnNVhqb49965161 = -355074489;    int hEWBEHSHtaVxcrnNVhqb74628145 = -511658853;    int hEWBEHSHtaVxcrnNVhqb85598712 = -555944417;    int hEWBEHSHtaVxcrnNVhqb1273311 = -147760727;    int hEWBEHSHtaVxcrnNVhqb7448649 = -199558850;    int hEWBEHSHtaVxcrnNVhqb55709184 = -483271778;    int hEWBEHSHtaVxcrnNVhqb83031300 = 32067498;    int hEWBEHSHtaVxcrnNVhqb70963965 = -143078236;    int hEWBEHSHtaVxcrnNVhqb72481265 = -174887665;    int hEWBEHSHtaVxcrnNVhqb53722858 = -20840935;    int hEWBEHSHtaVxcrnNVhqb4023308 = -931443858;    int hEWBEHSHtaVxcrnNVhqb49236580 = -436075464;    int hEWBEHSHtaVxcrnNVhqb35094691 = -458185549;    int hEWBEHSHtaVxcrnNVhqb38659554 = -115029481;    int hEWBEHSHtaVxcrnNVhqb1933396 = -422321138;    int hEWBEHSHtaVxcrnNVhqb83263003 = -88347769;    int hEWBEHSHtaVxcrnNVhqb29467362 = -471591631;    int hEWBEHSHtaVxcrnNVhqb10366199 = -534158718;    int hEWBEHSHtaVxcrnNVhqb79824521 = -25051194;    int hEWBEHSHtaVxcrnNVhqb95300242 = 54325099;    int hEWBEHSHtaVxcrnNVhqb59268846 = 71088090;    int hEWBEHSHtaVxcrnNVhqb80633 = 64354024;    int hEWBEHSHtaVxcrnNVhqb35609288 = -723691075;    int hEWBEHSHtaVxcrnNVhqb78537679 = -954985704;    int hEWBEHSHtaVxcrnNVhqb11586224 = -117668625;    int hEWBEHSHtaVxcrnNVhqb7504247 = -421681410;    int hEWBEHSHtaVxcrnNVhqb54817007 = -194585228;    int hEWBEHSHtaVxcrnNVhqb92016857 = -864352327;    int hEWBEHSHtaVxcrnNVhqb57885165 = -413143931;    int hEWBEHSHtaVxcrnNVhqb43662374 = -309197666;    int hEWBEHSHtaVxcrnNVhqb31538071 = -631691621;    int hEWBEHSHtaVxcrnNVhqb75347544 = -823531819;    int hEWBEHSHtaVxcrnNVhqb5515171 = -317103723;    int hEWBEHSHtaVxcrnNVhqb19413236 = -276767275;    int hEWBEHSHtaVxcrnNVhqb42225937 = -443338070;    int hEWBEHSHtaVxcrnNVhqb30370155 = -966631589;    int hEWBEHSHtaVxcrnNVhqb68874809 = -145893873;    int hEWBEHSHtaVxcrnNVhqb72967462 = -279488767;    int hEWBEHSHtaVxcrnNVhqb98989496 = 77584378;    int hEWBEHSHtaVxcrnNVhqb13683073 = 25330774;    int hEWBEHSHtaVxcrnNVhqb11757237 = -642359937;    int hEWBEHSHtaVxcrnNVhqb19432534 = -412576467;    int hEWBEHSHtaVxcrnNVhqb56428481 = -208530857;    int hEWBEHSHtaVxcrnNVhqb47856298 = -982971985;    int hEWBEHSHtaVxcrnNVhqb20732507 = -52800653;    int hEWBEHSHtaVxcrnNVhqb2351002 = -559060264;    int hEWBEHSHtaVxcrnNVhqb60076105 = -861862911;    int hEWBEHSHtaVxcrnNVhqb36802307 = -968886398;    int hEWBEHSHtaVxcrnNVhqb49039538 = -488182818;    int hEWBEHSHtaVxcrnNVhqb87155571 = -670952373;    int hEWBEHSHtaVxcrnNVhqb3475193 = -200237642;    int hEWBEHSHtaVxcrnNVhqb5201020 = -295950222;    int hEWBEHSHtaVxcrnNVhqb44043427 = -571243319;    int hEWBEHSHtaVxcrnNVhqb58553218 = -671938483;    int hEWBEHSHtaVxcrnNVhqb28850774 = 41536091;    int hEWBEHSHtaVxcrnNVhqb49884528 = -319428514;    int hEWBEHSHtaVxcrnNVhqb39018857 = -787967779;    int hEWBEHSHtaVxcrnNVhqb7061033 = -600958714;    int hEWBEHSHtaVxcrnNVhqb89687087 = 69907898;    int hEWBEHSHtaVxcrnNVhqb99944401 = -777877441;    int hEWBEHSHtaVxcrnNVhqb892177 = -188686551;    int hEWBEHSHtaVxcrnNVhqb91014443 = -103580175;    int hEWBEHSHtaVxcrnNVhqb13078801 = -729934305;    int hEWBEHSHtaVxcrnNVhqb28818891 = -865690000;    int hEWBEHSHtaVxcrnNVhqb22184788 = -389149315;    int hEWBEHSHtaVxcrnNVhqb28675763 = -7912040;    int hEWBEHSHtaVxcrnNVhqb43721410 = -18971742;    int hEWBEHSHtaVxcrnNVhqb15681456 = -81418274;    int hEWBEHSHtaVxcrnNVhqb96433617 = -671691411;    int hEWBEHSHtaVxcrnNVhqb71563240 = -455689550;    int hEWBEHSHtaVxcrnNVhqb14388194 = -942453897;    int hEWBEHSHtaVxcrnNVhqb56499899 = -92102865;    int hEWBEHSHtaVxcrnNVhqb11376702 = -511743096;    int hEWBEHSHtaVxcrnNVhqb66141448 = 49618032;    int hEWBEHSHtaVxcrnNVhqb83543005 = -303314965;    int hEWBEHSHtaVxcrnNVhqb39836313 = -516335443;    int hEWBEHSHtaVxcrnNVhqb43652152 = -727115120;    int hEWBEHSHtaVxcrnNVhqb87752990 = -740719091;    int hEWBEHSHtaVxcrnNVhqb57805173 = -802185051;    int hEWBEHSHtaVxcrnNVhqb9235222 = -558608361;    int hEWBEHSHtaVxcrnNVhqb47428142 = -559818499;    int hEWBEHSHtaVxcrnNVhqb18014701 = -225698830;    int hEWBEHSHtaVxcrnNVhqb42977319 = -276169510;    int hEWBEHSHtaVxcrnNVhqb70729593 = -742191559;    int hEWBEHSHtaVxcrnNVhqb40187182 = -8960025;    int hEWBEHSHtaVxcrnNVhqb26337051 = -235741399;    int hEWBEHSHtaVxcrnNVhqb31304118 = -152288500;    int hEWBEHSHtaVxcrnNVhqb46961953 = -645165240;    int hEWBEHSHtaVxcrnNVhqb90562462 = -218303367;    int hEWBEHSHtaVxcrnNVhqb92341408 = -23909557;    int hEWBEHSHtaVxcrnNVhqb91351297 = -320048459;     hEWBEHSHtaVxcrnNVhqb95170795 = hEWBEHSHtaVxcrnNVhqb75461860;     hEWBEHSHtaVxcrnNVhqb75461860 = hEWBEHSHtaVxcrnNVhqb50972934;     hEWBEHSHtaVxcrnNVhqb50972934 = hEWBEHSHtaVxcrnNVhqb70418574;     hEWBEHSHtaVxcrnNVhqb70418574 = hEWBEHSHtaVxcrnNVhqb32942554;     hEWBEHSHtaVxcrnNVhqb32942554 = hEWBEHSHtaVxcrnNVhqb15567219;     hEWBEHSHtaVxcrnNVhqb15567219 = hEWBEHSHtaVxcrnNVhqb23867948;     hEWBEHSHtaVxcrnNVhqb23867948 = hEWBEHSHtaVxcrnNVhqb53853461;     hEWBEHSHtaVxcrnNVhqb53853461 = hEWBEHSHtaVxcrnNVhqb88119620;     hEWBEHSHtaVxcrnNVhqb88119620 = hEWBEHSHtaVxcrnNVhqb49965161;     hEWBEHSHtaVxcrnNVhqb49965161 = hEWBEHSHtaVxcrnNVhqb74628145;     hEWBEHSHtaVxcrnNVhqb74628145 = hEWBEHSHtaVxcrnNVhqb85598712;     hEWBEHSHtaVxcrnNVhqb85598712 = hEWBEHSHtaVxcrnNVhqb1273311;     hEWBEHSHtaVxcrnNVhqb1273311 = hEWBEHSHtaVxcrnNVhqb7448649;     hEWBEHSHtaVxcrnNVhqb7448649 = hEWBEHSHtaVxcrnNVhqb55709184;     hEWBEHSHtaVxcrnNVhqb55709184 = hEWBEHSHtaVxcrnNVhqb83031300;     hEWBEHSHtaVxcrnNVhqb83031300 = hEWBEHSHtaVxcrnNVhqb70963965;     hEWBEHSHtaVxcrnNVhqb70963965 = hEWBEHSHtaVxcrnNVhqb72481265;     hEWBEHSHtaVxcrnNVhqb72481265 = hEWBEHSHtaVxcrnNVhqb53722858;     hEWBEHSHtaVxcrnNVhqb53722858 = hEWBEHSHtaVxcrnNVhqb4023308;     hEWBEHSHtaVxcrnNVhqb4023308 = hEWBEHSHtaVxcrnNVhqb49236580;     hEWBEHSHtaVxcrnNVhqb49236580 = hEWBEHSHtaVxcrnNVhqb35094691;     hEWBEHSHtaVxcrnNVhqb35094691 = hEWBEHSHtaVxcrnNVhqb38659554;     hEWBEHSHtaVxcrnNVhqb38659554 = hEWBEHSHtaVxcrnNVhqb1933396;     hEWBEHSHtaVxcrnNVhqb1933396 = hEWBEHSHtaVxcrnNVhqb83263003;     hEWBEHSHtaVxcrnNVhqb83263003 = hEWBEHSHtaVxcrnNVhqb29467362;     hEWBEHSHtaVxcrnNVhqb29467362 = hEWBEHSHtaVxcrnNVhqb10366199;     hEWBEHSHtaVxcrnNVhqb10366199 = hEWBEHSHtaVxcrnNVhqb79824521;     hEWBEHSHtaVxcrnNVhqb79824521 = hEWBEHSHtaVxcrnNVhqb95300242;     hEWBEHSHtaVxcrnNVhqb95300242 = hEWBEHSHtaVxcrnNVhqb59268846;     hEWBEHSHtaVxcrnNVhqb59268846 = hEWBEHSHtaVxcrnNVhqb80633;     hEWBEHSHtaVxcrnNVhqb80633 = hEWBEHSHtaVxcrnNVhqb35609288;     hEWBEHSHtaVxcrnNVhqb35609288 = hEWBEHSHtaVxcrnNVhqb78537679;     hEWBEHSHtaVxcrnNVhqb78537679 = hEWBEHSHtaVxcrnNVhqb11586224;     hEWBEHSHtaVxcrnNVhqb11586224 = hEWBEHSHtaVxcrnNVhqb7504247;     hEWBEHSHtaVxcrnNVhqb7504247 = hEWBEHSHtaVxcrnNVhqb54817007;     hEWBEHSHtaVxcrnNVhqb54817007 = hEWBEHSHtaVxcrnNVhqb92016857;     hEWBEHSHtaVxcrnNVhqb92016857 = hEWBEHSHtaVxcrnNVhqb57885165;     hEWBEHSHtaVxcrnNVhqb57885165 = hEWBEHSHtaVxcrnNVhqb43662374;     hEWBEHSHtaVxcrnNVhqb43662374 = hEWBEHSHtaVxcrnNVhqb31538071;     hEWBEHSHtaVxcrnNVhqb31538071 = hEWBEHSHtaVxcrnNVhqb75347544;     hEWBEHSHtaVxcrnNVhqb75347544 = hEWBEHSHtaVxcrnNVhqb5515171;     hEWBEHSHtaVxcrnNVhqb5515171 = hEWBEHSHtaVxcrnNVhqb19413236;     hEWBEHSHtaVxcrnNVhqb19413236 = hEWBEHSHtaVxcrnNVhqb42225937;     hEWBEHSHtaVxcrnNVhqb42225937 = hEWBEHSHtaVxcrnNVhqb30370155;     hEWBEHSHtaVxcrnNVhqb30370155 = hEWBEHSHtaVxcrnNVhqb68874809;     hEWBEHSHtaVxcrnNVhqb68874809 = hEWBEHSHtaVxcrnNVhqb72967462;     hEWBEHSHtaVxcrnNVhqb72967462 = hEWBEHSHtaVxcrnNVhqb98989496;     hEWBEHSHtaVxcrnNVhqb98989496 = hEWBEHSHtaVxcrnNVhqb13683073;     hEWBEHSHtaVxcrnNVhqb13683073 = hEWBEHSHtaVxcrnNVhqb11757237;     hEWBEHSHtaVxcrnNVhqb11757237 = hEWBEHSHtaVxcrnNVhqb19432534;     hEWBEHSHtaVxcrnNVhqb19432534 = hEWBEHSHtaVxcrnNVhqb56428481;     hEWBEHSHtaVxcrnNVhqb56428481 = hEWBEHSHtaVxcrnNVhqb47856298;     hEWBEHSHtaVxcrnNVhqb47856298 = hEWBEHSHtaVxcrnNVhqb20732507;     hEWBEHSHtaVxcrnNVhqb20732507 = hEWBEHSHtaVxcrnNVhqb2351002;     hEWBEHSHtaVxcrnNVhqb2351002 = hEWBEHSHtaVxcrnNVhqb60076105;     hEWBEHSHtaVxcrnNVhqb60076105 = hEWBEHSHtaVxcrnNVhqb36802307;     hEWBEHSHtaVxcrnNVhqb36802307 = hEWBEHSHtaVxcrnNVhqb49039538;     hEWBEHSHtaVxcrnNVhqb49039538 = hEWBEHSHtaVxcrnNVhqb87155571;     hEWBEHSHtaVxcrnNVhqb87155571 = hEWBEHSHtaVxcrnNVhqb3475193;     hEWBEHSHtaVxcrnNVhqb3475193 = hEWBEHSHtaVxcrnNVhqb5201020;     hEWBEHSHtaVxcrnNVhqb5201020 = hEWBEHSHtaVxcrnNVhqb44043427;     hEWBEHSHtaVxcrnNVhqb44043427 = hEWBEHSHtaVxcrnNVhqb58553218;     hEWBEHSHtaVxcrnNVhqb58553218 = hEWBEHSHtaVxcrnNVhqb28850774;     hEWBEHSHtaVxcrnNVhqb28850774 = hEWBEHSHtaVxcrnNVhqb49884528;     hEWBEHSHtaVxcrnNVhqb49884528 = hEWBEHSHtaVxcrnNVhqb39018857;     hEWBEHSHtaVxcrnNVhqb39018857 = hEWBEHSHtaVxcrnNVhqb7061033;     hEWBEHSHtaVxcrnNVhqb7061033 = hEWBEHSHtaVxcrnNVhqb89687087;     hEWBEHSHtaVxcrnNVhqb89687087 = hEWBEHSHtaVxcrnNVhqb99944401;     hEWBEHSHtaVxcrnNVhqb99944401 = hEWBEHSHtaVxcrnNVhqb892177;     hEWBEHSHtaVxcrnNVhqb892177 = hEWBEHSHtaVxcrnNVhqb91014443;     hEWBEHSHtaVxcrnNVhqb91014443 = hEWBEHSHtaVxcrnNVhqb13078801;     hEWBEHSHtaVxcrnNVhqb13078801 = hEWBEHSHtaVxcrnNVhqb28818891;     hEWBEHSHtaVxcrnNVhqb28818891 = hEWBEHSHtaVxcrnNVhqb22184788;     hEWBEHSHtaVxcrnNVhqb22184788 = hEWBEHSHtaVxcrnNVhqb28675763;     hEWBEHSHtaVxcrnNVhqb28675763 = hEWBEHSHtaVxcrnNVhqb43721410;     hEWBEHSHtaVxcrnNVhqb43721410 = hEWBEHSHtaVxcrnNVhqb15681456;     hEWBEHSHtaVxcrnNVhqb15681456 = hEWBEHSHtaVxcrnNVhqb96433617;     hEWBEHSHtaVxcrnNVhqb96433617 = hEWBEHSHtaVxcrnNVhqb71563240;     hEWBEHSHtaVxcrnNVhqb71563240 = hEWBEHSHtaVxcrnNVhqb14388194;     hEWBEHSHtaVxcrnNVhqb14388194 = hEWBEHSHtaVxcrnNVhqb56499899;     hEWBEHSHtaVxcrnNVhqb56499899 = hEWBEHSHtaVxcrnNVhqb11376702;     hEWBEHSHtaVxcrnNVhqb11376702 = hEWBEHSHtaVxcrnNVhqb66141448;     hEWBEHSHtaVxcrnNVhqb66141448 = hEWBEHSHtaVxcrnNVhqb83543005;     hEWBEHSHtaVxcrnNVhqb83543005 = hEWBEHSHtaVxcrnNVhqb39836313;     hEWBEHSHtaVxcrnNVhqb39836313 = hEWBEHSHtaVxcrnNVhqb43652152;     hEWBEHSHtaVxcrnNVhqb43652152 = hEWBEHSHtaVxcrnNVhqb87752990;     hEWBEHSHtaVxcrnNVhqb87752990 = hEWBEHSHtaVxcrnNVhqb57805173;     hEWBEHSHtaVxcrnNVhqb57805173 = hEWBEHSHtaVxcrnNVhqb9235222;     hEWBEHSHtaVxcrnNVhqb9235222 = hEWBEHSHtaVxcrnNVhqb47428142;     hEWBEHSHtaVxcrnNVhqb47428142 = hEWBEHSHtaVxcrnNVhqb18014701;     hEWBEHSHtaVxcrnNVhqb18014701 = hEWBEHSHtaVxcrnNVhqb42977319;     hEWBEHSHtaVxcrnNVhqb42977319 = hEWBEHSHtaVxcrnNVhqb70729593;     hEWBEHSHtaVxcrnNVhqb70729593 = hEWBEHSHtaVxcrnNVhqb40187182;     hEWBEHSHtaVxcrnNVhqb40187182 = hEWBEHSHtaVxcrnNVhqb26337051;     hEWBEHSHtaVxcrnNVhqb26337051 = hEWBEHSHtaVxcrnNVhqb31304118;     hEWBEHSHtaVxcrnNVhqb31304118 = hEWBEHSHtaVxcrnNVhqb46961953;     hEWBEHSHtaVxcrnNVhqb46961953 = hEWBEHSHtaVxcrnNVhqb90562462;     hEWBEHSHtaVxcrnNVhqb90562462 = hEWBEHSHtaVxcrnNVhqb92341408;     hEWBEHSHtaVxcrnNVhqb92341408 = hEWBEHSHtaVxcrnNVhqb91351297;     hEWBEHSHtaVxcrnNVhqb91351297 = hEWBEHSHtaVxcrnNVhqb95170795;}
// Junk Finished

// Junk Code By Peatreat & Thaisen's Gen
void qlEQFzOMjmMqlnHbjobA27929899() {     int VuPFRCaUCRIQjWhiuKiQ27431605 = -995696222;    int VuPFRCaUCRIQjWhiuKiQ76684295 = -757532763;    int VuPFRCaUCRIQjWhiuKiQ84249513 = -13363339;    int VuPFRCaUCRIQjWhiuKiQ11926688 = -679535851;    int VuPFRCaUCRIQjWhiuKiQ18060073 = -321562832;    int VuPFRCaUCRIQjWhiuKiQ49663931 = -898084210;    int VuPFRCaUCRIQjWhiuKiQ21360249 = -880736346;    int VuPFRCaUCRIQjWhiuKiQ76608756 = -451762289;    int VuPFRCaUCRIQjWhiuKiQ61471063 = -963679220;    int VuPFRCaUCRIQjWhiuKiQ37473076 = -527941296;    int VuPFRCaUCRIQjWhiuKiQ36018186 = 136904;    int VuPFRCaUCRIQjWhiuKiQ6752154 = -227101575;    int VuPFRCaUCRIQjWhiuKiQ29935359 = -454242186;    int VuPFRCaUCRIQjWhiuKiQ11644548 = -729106723;    int VuPFRCaUCRIQjWhiuKiQ94370089 = -725628548;    int VuPFRCaUCRIQjWhiuKiQ3107472 = -649220174;    int VuPFRCaUCRIQjWhiuKiQ76825137 = -159012814;    int VuPFRCaUCRIQjWhiuKiQ57101969 = -183781063;    int VuPFRCaUCRIQjWhiuKiQ34090098 = -789532624;    int VuPFRCaUCRIQjWhiuKiQ15215343 = -536200002;    int VuPFRCaUCRIQjWhiuKiQ62197285 = -723137680;    int VuPFRCaUCRIQjWhiuKiQ828327 = -629855226;    int VuPFRCaUCRIQjWhiuKiQ8714459 = -984650152;    int VuPFRCaUCRIQjWhiuKiQ20512086 = -538289620;    int VuPFRCaUCRIQjWhiuKiQ71918061 = -166395950;    int VuPFRCaUCRIQjWhiuKiQ98979391 = 60387880;    int VuPFRCaUCRIQjWhiuKiQ35488284 = -532216217;    int VuPFRCaUCRIQjWhiuKiQ62565596 = -853615589;    int VuPFRCaUCRIQjWhiuKiQ40983806 = -627732972;    int VuPFRCaUCRIQjWhiuKiQ20636946 = 25194614;    int VuPFRCaUCRIQjWhiuKiQ40908035 = -790295584;    int VuPFRCaUCRIQjWhiuKiQ93783565 = -874938010;    int VuPFRCaUCRIQjWhiuKiQ50607309 = -84104039;    int VuPFRCaUCRIQjWhiuKiQ47136266 = -450344317;    int VuPFRCaUCRIQjWhiuKiQ48137077 = -835102171;    int VuPFRCaUCRIQjWhiuKiQ43278870 = -206951194;    int VuPFRCaUCRIQjWhiuKiQ85223000 = 18515625;    int VuPFRCaUCRIQjWhiuKiQ87153982 = -414710160;    int VuPFRCaUCRIQjWhiuKiQ81437488 = 97218348;    int VuPFRCaUCRIQjWhiuKiQ7211644 = -863207877;    int VuPFRCaUCRIQjWhiuKiQ90405242 = -520848209;    int VuPFRCaUCRIQjWhiuKiQ39379099 = -260519201;    int VuPFRCaUCRIQjWhiuKiQ65146586 = -788872264;    int VuPFRCaUCRIQjWhiuKiQ11008115 = -576618530;    int VuPFRCaUCRIQjWhiuKiQ6389004 = -663265111;    int VuPFRCaUCRIQjWhiuKiQ56536097 = -944499063;    int VuPFRCaUCRIQjWhiuKiQ4841570 = -209416520;    int VuPFRCaUCRIQjWhiuKiQ53201712 = -752294360;    int VuPFRCaUCRIQjWhiuKiQ80224324 = -588446578;    int VuPFRCaUCRIQjWhiuKiQ79560576 = -327383859;    int VuPFRCaUCRIQjWhiuKiQ98936226 = -393270700;    int VuPFRCaUCRIQjWhiuKiQ86506631 = -674923306;    int VuPFRCaUCRIQjWhiuKiQ76718246 = -943030220;    int VuPFRCaUCRIQjWhiuKiQ28111990 = -204926180;    int VuPFRCaUCRIQjWhiuKiQ65732614 = -571164108;    int VuPFRCaUCRIQjWhiuKiQ26603278 = -265840996;    int VuPFRCaUCRIQjWhiuKiQ67969837 = -772882612;    int VuPFRCaUCRIQjWhiuKiQ63737428 = -475073719;    int VuPFRCaUCRIQjWhiuKiQ40008626 = -413139902;    int VuPFRCaUCRIQjWhiuKiQ19080682 = -281950712;    int VuPFRCaUCRIQjWhiuKiQ14175647 = -265867993;    int VuPFRCaUCRIQjWhiuKiQ58794652 = 72879243;    int VuPFRCaUCRIQjWhiuKiQ35624951 = -824029318;    int VuPFRCaUCRIQjWhiuKiQ40834117 = -888873835;    int VuPFRCaUCRIQjWhiuKiQ96565040 = -737645713;    int VuPFRCaUCRIQjWhiuKiQ42234621 = -124925087;    int VuPFRCaUCRIQjWhiuKiQ56144845 = -42997537;    int VuPFRCaUCRIQjWhiuKiQ82799093 = 96102131;    int VuPFRCaUCRIQjWhiuKiQ63507470 = -894004552;    int VuPFRCaUCRIQjWhiuKiQ51091219 = -418677355;    int VuPFRCaUCRIQjWhiuKiQ17884471 = -567735800;    int VuPFRCaUCRIQjWhiuKiQ89671154 = -744302655;    int VuPFRCaUCRIQjWhiuKiQ75664480 = -180999412;    int VuPFRCaUCRIQjWhiuKiQ26878454 = -926324748;    int VuPFRCaUCRIQjWhiuKiQ24810100 = 84648207;    int VuPFRCaUCRIQjWhiuKiQ22818187 = -362618480;    int VuPFRCaUCRIQjWhiuKiQ35681741 = -840982963;    int VuPFRCaUCRIQjWhiuKiQ97706343 = -308031622;    int VuPFRCaUCRIQjWhiuKiQ14123082 = -875024510;    int VuPFRCaUCRIQjWhiuKiQ15381965 = -221896887;    int VuPFRCaUCRIQjWhiuKiQ94137822 = -730195601;    int VuPFRCaUCRIQjWhiuKiQ82286571 = -779921858;    int VuPFRCaUCRIQjWhiuKiQ82341272 = -165169012;    int VuPFRCaUCRIQjWhiuKiQ61423229 = -200349114;    int VuPFRCaUCRIQjWhiuKiQ21700720 = -581534686;    int VuPFRCaUCRIQjWhiuKiQ54401404 = -15372279;    int VuPFRCaUCRIQjWhiuKiQ17065319 = -931907791;    int VuPFRCaUCRIQjWhiuKiQ22495320 = -879177859;    int VuPFRCaUCRIQjWhiuKiQ81403652 = -879180210;    int VuPFRCaUCRIQjWhiuKiQ21533800 = -469261176;    int VuPFRCaUCRIQjWhiuKiQ75309033 = -434068583;    int VuPFRCaUCRIQjWhiuKiQ21485573 = -506410656;    int VuPFRCaUCRIQjWhiuKiQ47145356 = 98429742;    int VuPFRCaUCRIQjWhiuKiQ62356807 = -620830940;    int VuPFRCaUCRIQjWhiuKiQ93035997 = -497339884;    int VuPFRCaUCRIQjWhiuKiQ31610590 = -493727452;    int VuPFRCaUCRIQjWhiuKiQ3754149 = -436489884;    int VuPFRCaUCRIQjWhiuKiQ24312469 = -899998430;    int VuPFRCaUCRIQjWhiuKiQ14443075 = -838972818;    int VuPFRCaUCRIQjWhiuKiQ64154383 = -995696222;     VuPFRCaUCRIQjWhiuKiQ27431605 = VuPFRCaUCRIQjWhiuKiQ76684295;     VuPFRCaUCRIQjWhiuKiQ76684295 = VuPFRCaUCRIQjWhiuKiQ84249513;     VuPFRCaUCRIQjWhiuKiQ84249513 = VuPFRCaUCRIQjWhiuKiQ11926688;     VuPFRCaUCRIQjWhiuKiQ11926688 = VuPFRCaUCRIQjWhiuKiQ18060073;     VuPFRCaUCRIQjWhiuKiQ18060073 = VuPFRCaUCRIQjWhiuKiQ49663931;     VuPFRCaUCRIQjWhiuKiQ49663931 = VuPFRCaUCRIQjWhiuKiQ21360249;     VuPFRCaUCRIQjWhiuKiQ21360249 = VuPFRCaUCRIQjWhiuKiQ76608756;     VuPFRCaUCRIQjWhiuKiQ76608756 = VuPFRCaUCRIQjWhiuKiQ61471063;     VuPFRCaUCRIQjWhiuKiQ61471063 = VuPFRCaUCRIQjWhiuKiQ37473076;     VuPFRCaUCRIQjWhiuKiQ37473076 = VuPFRCaUCRIQjWhiuKiQ36018186;     VuPFRCaUCRIQjWhiuKiQ36018186 = VuPFRCaUCRIQjWhiuKiQ6752154;     VuPFRCaUCRIQjWhiuKiQ6752154 = VuPFRCaUCRIQjWhiuKiQ29935359;     VuPFRCaUCRIQjWhiuKiQ29935359 = VuPFRCaUCRIQjWhiuKiQ11644548;     VuPFRCaUCRIQjWhiuKiQ11644548 = VuPFRCaUCRIQjWhiuKiQ94370089;     VuPFRCaUCRIQjWhiuKiQ94370089 = VuPFRCaUCRIQjWhiuKiQ3107472;     VuPFRCaUCRIQjWhiuKiQ3107472 = VuPFRCaUCRIQjWhiuKiQ76825137;     VuPFRCaUCRIQjWhiuKiQ76825137 = VuPFRCaUCRIQjWhiuKiQ57101969;     VuPFRCaUCRIQjWhiuKiQ57101969 = VuPFRCaUCRIQjWhiuKiQ34090098;     VuPFRCaUCRIQjWhiuKiQ34090098 = VuPFRCaUCRIQjWhiuKiQ15215343;     VuPFRCaUCRIQjWhiuKiQ15215343 = VuPFRCaUCRIQjWhiuKiQ62197285;     VuPFRCaUCRIQjWhiuKiQ62197285 = VuPFRCaUCRIQjWhiuKiQ828327;     VuPFRCaUCRIQjWhiuKiQ828327 = VuPFRCaUCRIQjWhiuKiQ8714459;     VuPFRCaUCRIQjWhiuKiQ8714459 = VuPFRCaUCRIQjWhiuKiQ20512086;     VuPFRCaUCRIQjWhiuKiQ20512086 = VuPFRCaUCRIQjWhiuKiQ71918061;     VuPFRCaUCRIQjWhiuKiQ71918061 = VuPFRCaUCRIQjWhiuKiQ98979391;     VuPFRCaUCRIQjWhiuKiQ98979391 = VuPFRCaUCRIQjWhiuKiQ35488284;     VuPFRCaUCRIQjWhiuKiQ35488284 = VuPFRCaUCRIQjWhiuKiQ62565596;     VuPFRCaUCRIQjWhiuKiQ62565596 = VuPFRCaUCRIQjWhiuKiQ40983806;     VuPFRCaUCRIQjWhiuKiQ40983806 = VuPFRCaUCRIQjWhiuKiQ20636946;     VuPFRCaUCRIQjWhiuKiQ20636946 = VuPFRCaUCRIQjWhiuKiQ40908035;     VuPFRCaUCRIQjWhiuKiQ40908035 = VuPFRCaUCRIQjWhiuKiQ93783565;     VuPFRCaUCRIQjWhiuKiQ93783565 = VuPFRCaUCRIQjWhiuKiQ50607309;     VuPFRCaUCRIQjWhiuKiQ50607309 = VuPFRCaUCRIQjWhiuKiQ47136266;     VuPFRCaUCRIQjWhiuKiQ47136266 = VuPFRCaUCRIQjWhiuKiQ48137077;     VuPFRCaUCRIQjWhiuKiQ48137077 = VuPFRCaUCRIQjWhiuKiQ43278870;     VuPFRCaUCRIQjWhiuKiQ43278870 = VuPFRCaUCRIQjWhiuKiQ85223000;     VuPFRCaUCRIQjWhiuKiQ85223000 = VuPFRCaUCRIQjWhiuKiQ87153982;     VuPFRCaUCRIQjWhiuKiQ87153982 = VuPFRCaUCRIQjWhiuKiQ81437488;     VuPFRCaUCRIQjWhiuKiQ81437488 = VuPFRCaUCRIQjWhiuKiQ7211644;     VuPFRCaUCRIQjWhiuKiQ7211644 = VuPFRCaUCRIQjWhiuKiQ90405242;     VuPFRCaUCRIQjWhiuKiQ90405242 = VuPFRCaUCRIQjWhiuKiQ39379099;     VuPFRCaUCRIQjWhiuKiQ39379099 = VuPFRCaUCRIQjWhiuKiQ65146586;     VuPFRCaUCRIQjWhiuKiQ65146586 = VuPFRCaUCRIQjWhiuKiQ11008115;     VuPFRCaUCRIQjWhiuKiQ11008115 = VuPFRCaUCRIQjWhiuKiQ6389004;     VuPFRCaUCRIQjWhiuKiQ6389004 = VuPFRCaUCRIQjWhiuKiQ56536097;     VuPFRCaUCRIQjWhiuKiQ56536097 = VuPFRCaUCRIQjWhiuKiQ4841570;     VuPFRCaUCRIQjWhiuKiQ4841570 = VuPFRCaUCRIQjWhiuKiQ53201712;     VuPFRCaUCRIQjWhiuKiQ53201712 = VuPFRCaUCRIQjWhiuKiQ80224324;     VuPFRCaUCRIQjWhiuKiQ80224324 = VuPFRCaUCRIQjWhiuKiQ79560576;     VuPFRCaUCRIQjWhiuKiQ79560576 = VuPFRCaUCRIQjWhiuKiQ98936226;     VuPFRCaUCRIQjWhiuKiQ98936226 = VuPFRCaUCRIQjWhiuKiQ86506631;     VuPFRCaUCRIQjWhiuKiQ86506631 = VuPFRCaUCRIQjWhiuKiQ76718246;     VuPFRCaUCRIQjWhiuKiQ76718246 = VuPFRCaUCRIQjWhiuKiQ28111990;     VuPFRCaUCRIQjWhiuKiQ28111990 = VuPFRCaUCRIQjWhiuKiQ65732614;     VuPFRCaUCRIQjWhiuKiQ65732614 = VuPFRCaUCRIQjWhiuKiQ26603278;     VuPFRCaUCRIQjWhiuKiQ26603278 = VuPFRCaUCRIQjWhiuKiQ67969837;     VuPFRCaUCRIQjWhiuKiQ67969837 = VuPFRCaUCRIQjWhiuKiQ63737428;     VuPFRCaUCRIQjWhiuKiQ63737428 = VuPFRCaUCRIQjWhiuKiQ40008626;     VuPFRCaUCRIQjWhiuKiQ40008626 = VuPFRCaUCRIQjWhiuKiQ19080682;     VuPFRCaUCRIQjWhiuKiQ19080682 = VuPFRCaUCRIQjWhiuKiQ14175647;     VuPFRCaUCRIQjWhiuKiQ14175647 = VuPFRCaUCRIQjWhiuKiQ58794652;     VuPFRCaUCRIQjWhiuKiQ58794652 = VuPFRCaUCRIQjWhiuKiQ35624951;     VuPFRCaUCRIQjWhiuKiQ35624951 = VuPFRCaUCRIQjWhiuKiQ40834117;     VuPFRCaUCRIQjWhiuKiQ40834117 = VuPFRCaUCRIQjWhiuKiQ96565040;     VuPFRCaUCRIQjWhiuKiQ96565040 = VuPFRCaUCRIQjWhiuKiQ42234621;     VuPFRCaUCRIQjWhiuKiQ42234621 = VuPFRCaUCRIQjWhiuKiQ56144845;     VuPFRCaUCRIQjWhiuKiQ56144845 = VuPFRCaUCRIQjWhiuKiQ82799093;     VuPFRCaUCRIQjWhiuKiQ82799093 = VuPFRCaUCRIQjWhiuKiQ63507470;     VuPFRCaUCRIQjWhiuKiQ63507470 = VuPFRCaUCRIQjWhiuKiQ51091219;     VuPFRCaUCRIQjWhiuKiQ51091219 = VuPFRCaUCRIQjWhiuKiQ17884471;     VuPFRCaUCRIQjWhiuKiQ17884471 = VuPFRCaUCRIQjWhiuKiQ89671154;     VuPFRCaUCRIQjWhiuKiQ89671154 = VuPFRCaUCRIQjWhiuKiQ75664480;     VuPFRCaUCRIQjWhiuKiQ75664480 = VuPFRCaUCRIQjWhiuKiQ26878454;     VuPFRCaUCRIQjWhiuKiQ26878454 = VuPFRCaUCRIQjWhiuKiQ24810100;     VuPFRCaUCRIQjWhiuKiQ24810100 = VuPFRCaUCRIQjWhiuKiQ22818187;     VuPFRCaUCRIQjWhiuKiQ22818187 = VuPFRCaUCRIQjWhiuKiQ35681741;     VuPFRCaUCRIQjWhiuKiQ35681741 = VuPFRCaUCRIQjWhiuKiQ97706343;     VuPFRCaUCRIQjWhiuKiQ97706343 = VuPFRCaUCRIQjWhiuKiQ14123082;     VuPFRCaUCRIQjWhiuKiQ14123082 = VuPFRCaUCRIQjWhiuKiQ15381965;     VuPFRCaUCRIQjWhiuKiQ15381965 = VuPFRCaUCRIQjWhiuKiQ94137822;     VuPFRCaUCRIQjWhiuKiQ94137822 = VuPFRCaUCRIQjWhiuKiQ82286571;     VuPFRCaUCRIQjWhiuKiQ82286571 = VuPFRCaUCRIQjWhiuKiQ82341272;     VuPFRCaUCRIQjWhiuKiQ82341272 = VuPFRCaUCRIQjWhiuKiQ61423229;     VuPFRCaUCRIQjWhiuKiQ61423229 = VuPFRCaUCRIQjWhiuKiQ21700720;     VuPFRCaUCRIQjWhiuKiQ21700720 = VuPFRCaUCRIQjWhiuKiQ54401404;     VuPFRCaUCRIQjWhiuKiQ54401404 = VuPFRCaUCRIQjWhiuKiQ17065319;     VuPFRCaUCRIQjWhiuKiQ17065319 = VuPFRCaUCRIQjWhiuKiQ22495320;     VuPFRCaUCRIQjWhiuKiQ22495320 = VuPFRCaUCRIQjWhiuKiQ81403652;     VuPFRCaUCRIQjWhiuKiQ81403652 = VuPFRCaUCRIQjWhiuKiQ21533800;     VuPFRCaUCRIQjWhiuKiQ21533800 = VuPFRCaUCRIQjWhiuKiQ75309033;     VuPFRCaUCRIQjWhiuKiQ75309033 = VuPFRCaUCRIQjWhiuKiQ21485573;     VuPFRCaUCRIQjWhiuKiQ21485573 = VuPFRCaUCRIQjWhiuKiQ47145356;     VuPFRCaUCRIQjWhiuKiQ47145356 = VuPFRCaUCRIQjWhiuKiQ62356807;     VuPFRCaUCRIQjWhiuKiQ62356807 = VuPFRCaUCRIQjWhiuKiQ93035997;     VuPFRCaUCRIQjWhiuKiQ93035997 = VuPFRCaUCRIQjWhiuKiQ31610590;     VuPFRCaUCRIQjWhiuKiQ31610590 = VuPFRCaUCRIQjWhiuKiQ3754149;     VuPFRCaUCRIQjWhiuKiQ3754149 = VuPFRCaUCRIQjWhiuKiQ24312469;     VuPFRCaUCRIQjWhiuKiQ24312469 = VuPFRCaUCRIQjWhiuKiQ14443075;     VuPFRCaUCRIQjWhiuKiQ14443075 = VuPFRCaUCRIQjWhiuKiQ64154383;     VuPFRCaUCRIQjWhiuKiQ64154383 = VuPFRCaUCRIQjWhiuKiQ27431605;}
// Junk Finished
