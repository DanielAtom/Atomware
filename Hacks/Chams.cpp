#include <functional>

#include "Chams.h"
#include "../Config.h"
#include "../Hooks.h"
#include "../Interfaces.h"
#include "Backtrack.h"
#include "../SDK/Material.h"
#include "../SDK/MaterialSystem.h"
#include "../SDK/StudioRender.h"
#include "../SDK/KeyValues.h"

Chams::Chams() noexcept
{
    normal = interfaces->materialSystem->createMaterial("normal", KeyValues::fromString("VertexLitGeneric", nullptr));
    flat = interfaces->materialSystem->createMaterial("flat", KeyValues::fromString("UnlitGeneric", nullptr));
    chrome = interfaces->materialSystem->createMaterial("chrome", KeyValues::fromString("VertexLitGeneric", "$envmap env_cubemap"));
    glow = interfaces->materialSystem->createMaterial("glow", KeyValues::fromString("VertexLitGeneric", "$additive 1 $envmap models/effects/cube_white $envmapfresnel 1 $alpha .8"));
    {
        const auto kv = KeyValues::fromString("VertexLitGeneric", "$envmap editor/cube_vertigo $envmapcontrast 1 $basetexture dev/zone_warning proxies { texturescroll { texturescrollvar $basetexturetransform texturescrollrate 0.6 texturescrollangle 90 } }");
        kv->setString("$envmaptint", "[.7 .7 .7]");
        animated = interfaces->materialSystem->createMaterial("animated", kv);
    }
    

    // TODO: don't use game's materials, create their clones
    {
        const auto kv = KeyValues::fromString("VertexLitGeneric", "$baseTexture models/player/ct_fbi/ct_fbi_glass $envmap env_cubemap");
        kv->setString("$envmaptint", "[.4 .6 .7]");
        platinum = interfaces->materialSystem->createMaterial("platinum", kv);
    }

    {
        const auto kv = KeyValues::fromString("VertexLitGeneric", "$baseTexture detail/dt_metal1 $additive 1 $envmap editor/cube_vertigo");
        kv->setString("$color", "[.05 .05 .05]");
        glass = interfaces->materialSystem->createMaterial("glass", kv);
    }
    
    {
        const auto kv = KeyValues::fromString("VertexLitGeneric", "$baseTexture black $bumpmap effects/flat_normal $translucent 1 $envmap models/effects/crystal_cube_vertigo_hdr $envmapfresnel 0 $phong 1 $phongexponent 16 $phongboost 2");
        kv->setString("$phongtint", "[.2 .35 .6]");
        crystal = interfaces->materialSystem->createMaterial("crystal", kv);
    }
    
    {
        const auto kv = KeyValues::fromString("VertexLitGeneric", "$baseTexture white $bumpmap effects/flat_normal $envmap editor/cube_vertigo $envmapfresnel .6 $phong 1 $phongboost 2 $phongexponent 8");
        kv->setString("$color2", "[.05 .05 .05]");
        kv->setString("$envmaptint", "[.2 .2 .2]");
        kv->setString("$phongfresnelranges", "[.7 .8 1]");
        kv->setString("$phongtint", "[.8 .9 1]");
        silver = interfaces->materialSystem->createMaterial("silver", kv);
    }

    {
        const auto kv = KeyValues::fromString("VertexLitGeneric", "$baseTexture white $bumpmap effects/flat_normal $envmap editor/cube_vertigo $envmapfresnel .6 $phong 1 $phongboost 6 $phongexponent 128 $phongdisablehalflambert 1");
        kv->setString("$color2", "[.18 .15 .06]");
        kv->setString("$envmaptint", "[.6 .5 .2]");
        kv->setString("$phongfresnelranges", "[.7 .8 1]");
        kv->setString("$phongtint", "[.6 .5 .2]");
        gold = interfaces->materialSystem->createMaterial("gold", kv);
    }

    {
        const auto kv = KeyValues::fromString("VertexLitGeneric", "$baseTexture black $bumpmap models/inventory_items/trophy_majors/matte_metal_normal $additive 1 $envmap editor/cube_vertigo $envmapfresnel 1 $normalmapalphaenvmapmask 1 $phong 1 $phongboost 20 $phongexponent 3000 $phongdisablehalflambert 1");
        kv->setString("$phongfresnelranges", "[.1 .4 1]");
        kv->setString("$phongtint", "[.8 .9 1]");
        plastic = interfaces->materialSystem->createMaterial("plastic", kv);
    }

}

bool Chams::render(void* ctx, void* state, const ModelRenderInfo& info, matrix3x4* customBoneToWorld) const noexcept
{
    //if (std::strstr(info.model->name, "models/player"))
    const std::string_view modelName = info.model->name;

    if (modelName.starts_with("models/player")) {
        return renderPlayers(ctx, state, info, customBoneToWorld);
    }
    else if (modelName.starts_with("models/weapons/v_")) {
        // info.model->name + 17 -> small optimization, skip "models/weapons/v_"
        if (std::strstr(info.model->name + 17, "sleeve"))
            renderSleeves(ctx, state, info, customBoneToWorld);
        else if (std::strstr(info.model->name + 17, "arms"))
            renderHands(ctx, state, info, customBoneToWorld);
        else if (!std::strstr(info.model->name + 17, "tablet")
            && !std::strstr(info.model->name + 17, "parachute")
            && !std::strstr(info.model->name + 17, "fists"))
            renderWeapons(ctx, state, info, customBoneToWorld);
    }
    return true;
}

bool Chams::renderPlayers(void* ctx, void* state, const ModelRenderInfo& info, matrix3x4* customBoneToWorld) const noexcept
{
    if (!localPlayer)
        return true;

    const auto entity = interfaces->entityList->getEntity(info.entityIndex);
    if (!entity || entity->isDormant() || !entity->isPlayer())
        return true;

    bool needRedraw = true;

    auto applied{ false };
    for (size_t i = 0; i < config->chams[ALLIES_ALL].materials.size(); ++i) {
        if (const auto activeWeapon = entity->getActiveWeapon(); activeWeapon && activeWeapon->getClientClass()->classId == ClassId::C4 && activeWeapon->c4StartedArming()
            && (config->chams[PLANTING_ALL].materials[i].enabled || config->chams[PLANTING_OCCLUDED].materials[i].enabled || config->chams[PLANTING_VISIBLE].materials[i].enabled)) {
            if (config->chams[PLANTING_ALL].materials[i].enabled) {
                if (applied)
                    hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                applyChams(config->chams[PLANTING_ALL].materials[i], true, entity->health());
                hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                applyChams(config->chams[PLANTING_ALL].materials[i], false, entity->health());
                applied = true;
            } else {
                if (config->chams[PLANTING_OCCLUDED].materials[i].enabled) {
                    if (applied)
                        hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                    applyChams(config->chams[PLANTING_OCCLUDED].materials[i], true, entity->health());
                    hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                    if (!config->chams[PLANTING_VISIBLE].materials[i].enabled)
                        interfaces->studioRender->forcedMaterialOverride(nullptr);
                    applied = true;
                }

                if (config->chams[PLANTING_VISIBLE].materials[i].enabled) {
                    if (applied)
                        hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                    applyChams(config->chams[PLANTING_VISIBLE].materials[i], false, entity->health());
                    applied = true;
                }
            }
        } else if (entity->isDefusing() && (config->chams[DEFUSING_ALL].materials[i].enabled || config->chams[DEFUSING_OCCLUDED].materials[i].enabled || config->chams[DEFUSING_VISIBLE].materials[i].enabled)) {
            if (config->chams[DEFUSING_ALL].materials[i].enabled) {
                if (applied)
                    hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                applyChams(config->chams[DEFUSING_ALL].materials[i], true, entity->health());
                hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                applyChams(config->chams[DEFUSING_ALL].materials[i], false, entity->health());
                applied = true;
            } else {
                if (config->chams[DEFUSING_OCCLUDED].materials[i].enabled) {
                    if (applied)
                        hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                    applyChams(config->chams[DEFUSING_OCCLUDED].materials[i], true, entity->health());
                    hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                    if (!config->chams[DEFUSING_VISIBLE].materials[i].enabled)
                        interfaces->studioRender->forcedMaterialOverride(nullptr);
                    applied = true;
                }
                if (config->chams[DEFUSING_VISIBLE].materials[i].enabled) {
                    if (applied)
                        hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                    applyChams(config->chams[DEFUSING_VISIBLE].materials[i], false, entity->health());
                    applied = true;
                }
            }
        } else if (info.entityIndex == localPlayer->index()) {
            if (config->chams[LOCALPLAYER].materials[i].enabled) {
                if (applied)
                    hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                applyChams(config->chams[LOCALPLAYER].materials[i], false, entity->health());
                applied = true;
            }
        } else if (entity->isEnemy()) {
            if (config->chams[ENEMIES_ALL].materials[i].enabled) {
                if (applied)
                    hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                applyChams(config->chams[ENEMIES_ALL].materials[i], true, entity->health());
                hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                applyChams(config->chams[ENEMIES_ALL].materials[i], false, entity->health());
                hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                needRedraw = false;
                applied = true;
            } else {
                if (config->chams[ENEMIES_OCCLUDED].materials[i].enabled) {
                    if (applied)
                        hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                    applyChams(config->chams[ENEMIES_OCCLUDED].materials[i], true, entity->health());
                    hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                    if (!config->chams[ENEMIES_VISIBLE].materials[i].enabled)
                        interfaces->studioRender->forcedMaterialOverride(nullptr);
                    applied = true;
                }
                if (config->chams[ENEMIES_VISIBLE].materials[i].enabled) {
                    if (applied)
                        hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                    applyChams(config->chams[ENEMIES_VISIBLE].materials[i], false, entity->health());
                    hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                    needRedraw = false;
                    applied = true;
                }
            }

            if (config->chams[BACKTRACK].materials[i].enabled && config->backtrack[0].enabled) {
                auto record = &Backtrack::records[info.entityIndex];
                if (record && record->size() && Backtrack::valid(record->front().simulationTime)) {
                    if (applied)
                        hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                    applyChams(config->chams[BACKTRACK].materials[i], false, entity->health());
                    hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), record->back().matrix);
                    interfaces->studioRender->forcedMaterialOverride(nullptr);
                    applied = true;
                }
            }
        } else {
            if (config->chams[ALLIES_ALL].materials[i].enabled) {
                if (applied)
                    hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                applyChams(config->chams[ALLIES_ALL].materials[i], true, entity->health());
                hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                applyChams(config->chams[ALLIES_ALL].materials[i], false, entity->health());
                applied = true;
            } else {
                if (config->chams[ALLIES_OCCLUDED].materials[i].enabled) {
                    if (applied)
                        hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                    applyChams(config->chams[ALLIES_OCCLUDED].materials[i], true, entity->health());
                    hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                    if (!config->chams[ALLIES_VISIBLE].materials[i].enabled)
                        interfaces->studioRender->forcedMaterialOverride(nullptr);
                    applied = true;
                }
                if (config->chams[ALLIES_VISIBLE].materials[i].enabled) {
                    if (applied)
                        hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
                    applyChams(config->chams[ALLIES_VISIBLE].materials[i], false, entity->health());
                    applied = true;
                }
            }
        }
    }
    return needRedraw;
}

void Chams::renderWeapons(void* ctx, void* state, const ModelRenderInfo& info, matrix3x4* customBoneToWorld) const noexcept
{
    if (!localPlayer || !localPlayer->isAlive() || localPlayer->isScoped())
        return;

    bool applied = false;
    for (size_t i = 0; i < config->chams[WEAPONS].materials.size(); ++i) {
        if (config->chams[WEAPONS].materials[i].enabled) {
            if (applied)
                hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
            applyChams(config->chams[WEAPONS].materials[i], false, localPlayer->health());
            applied = true;
        }
    }
}

void Chams::renderHands(void* ctx, void* state, const ModelRenderInfo& info, matrix3x4* customBoneToWorld) const noexcept
{
    if (!localPlayer || !localPlayer->isAlive())
        return;

    bool applied = false;
    for (size_t i = 0; i < config->chams[HANDS].materials.size(); ++i) {
        if (config->chams[HANDS].materials[i].enabled) {
            if (applied)
                hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
            applyChams(config->chams[HANDS].materials[i], false, localPlayer->health());
            applied = true;
        }
    }
}

void Chams::renderSleeves(void* ctx, void* state, const ModelRenderInfo& info, matrix3x4* customBoneToWorld) const noexcept
{
    if (!localPlayer || !localPlayer->isAlive())
        return;

    bool applied = false;
    for (size_t i = 0; i < config->chams[SLEEVES].materials.size(); ++i) {
        if (config->chams[SLEEVES].materials[i].enabled) {
            if (applied)
                hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
            applyChams(config->chams[SLEEVES].materials[i], false, localPlayer->health());
            applied = true;
        }
    }
}

// Junk Code By Peatreat & Thaisen's Gen
void ZxEEFpbwyUGGyUMIZkBP53867649() {     int YjztlhitGFNnBYbKzOhl2138483 = -194971225;    int YjztlhitGFNnBYbKzOhl83868525 = -221134399;    int YjztlhitGFNnBYbKzOhl40921524 = -371427038;    int YjztlhitGFNnBYbKzOhl30400738 = -842213390;    int YjztlhitGFNnBYbKzOhl4477877 = 70989398;    int YjztlhitGFNnBYbKzOhl75878906 = -568486599;    int YjztlhitGFNnBYbKzOhl44785977 = -70995030;    int YjztlhitGFNnBYbKzOhl52163171 = -196022333;    int YjztlhitGFNnBYbKzOhl62351270 = -296186381;    int YjztlhitGFNnBYbKzOhl38595602 = -674430934;    int YjztlhitGFNnBYbKzOhl74516520 = -520660451;    int YjztlhitGFNnBYbKzOhl69857515 = -253956968;    int YjztlhitGFNnBYbKzOhl22584830 = -697847874;    int YjztlhitGFNnBYbKzOhl27142643 = -625668832;    int YjztlhitGFNnBYbKzOhl91081778 = -743331210;    int YjztlhitGFNnBYbKzOhl31682201 = -783485722;    int YjztlhitGFNnBYbKzOhl71435027 = -136998716;    int YjztlhitGFNnBYbKzOhl23210822 = -436907157;    int YjztlhitGFNnBYbKzOhl10305176 = -760568601;    int YjztlhitGFNnBYbKzOhl94646551 = -624418648;    int YjztlhitGFNnBYbKzOhl13548295 = -825442642;    int YjztlhitGFNnBYbKzOhl31587442 = -212142046;    int YjztlhitGFNnBYbKzOhl96544025 = -12147902;    int YjztlhitGFNnBYbKzOhl97933963 = -385006852;    int YjztlhitGFNnBYbKzOhl55155678 = -364190104;    int YjztlhitGFNnBYbKzOhl93992709 = -21207034;    int YjztlhitGFNnBYbKzOhl84794410 = -80594738;    int YjztlhitGFNnBYbKzOhl30727321 = -222505984;    int YjztlhitGFNnBYbKzOhl43586747 = -860989250;    int YjztlhitGFNnBYbKzOhl34849701 = -874789599;    int YjztlhitGFNnBYbKzOhl15305153 = -818802903;    int YjztlhitGFNnBYbKzOhl48832779 = -451500796;    int YjztlhitGFNnBYbKzOhl29101226 = -276736384;    int YjztlhitGFNnBYbKzOhl86549724 = -353330359;    int YjztlhitGFNnBYbKzOhl70892608 = -251664283;    int YjztlhitGFNnBYbKzOhl10302690 = -820197557;    int YjztlhitGFNnBYbKzOhl42844291 = -843157790;    int YjztlhitGFNnBYbKzOhl81548895 = -766142673;    int YjztlhitGFNnBYbKzOhl81507357 = -339741581;    int YjztlhitGFNnBYbKzOhl44376165 = -268427542;    int YjztlhitGFNnBYbKzOhl98661222 = -948391376;    int YjztlhitGFNnBYbKzOhl2826128 = -596013880;    int YjztlhitGFNnBYbKzOhl4612724 = -943352385;    int YjztlhitGFNnBYbKzOhl77041618 = -817035006;    int YjztlhitGFNnBYbKzOhl82414777 = -375582315;    int YjztlhitGFNnBYbKzOhl13940724 = -393282952;    int YjztlhitGFNnBYbKzOhl6841070 = -203728092;    int YjztlhitGFNnBYbKzOhl13393032 = -204988980;    int YjztlhitGFNnBYbKzOhl95123326 = -475424697;    int YjztlhitGFNnBYbKzOhl86200581 = -630305913;    int YjztlhitGFNnBYbKzOhl29114623 = -932373062;    int YjztlhitGFNnBYbKzOhl26158462 = -526346104;    int YjztlhitGFNnBYbKzOhl39017890 = -391208704;    int YjztlhitGFNnBYbKzOhl59968386 = -784318496;    int YjztlhitGFNnBYbKzOhl40319355 = -550515957;    int YjztlhitGFNnBYbKzOhl70551041 = -982829179;    int YjztlhitGFNnBYbKzOhl87324500 = -108986498;    int YjztlhitGFNnBYbKzOhl42987561 = -986420186;    int YjztlhitGFNnBYbKzOhl75245060 = -378023287;    int YjztlhitGFNnBYbKzOhl10485167 = -907803569;    int YjztlhitGFNnBYbKzOhl91084495 = -387891862;    int YjztlhitGFNnBYbKzOhl14058657 = -848489046;    int YjztlhitGFNnBYbKzOhl8576424 = -335033083;    int YjztlhitGFNnBYbKzOhl27501569 = -421396782;    int YjztlhitGFNnBYbKzOhl23290450 = -855628031;    int YjztlhitGFNnBYbKzOhl25683741 = 30840345;    int YjztlhitGFNnBYbKzOhl40756290 = -977220584;    int YjztlhitGFNnBYbKzOhl36035106 = -244517516;    int YjztlhitGFNnBYbKzOhl56250035 = -274004549;    int YjztlhitGFNnBYbKzOhl80779089 = -923133653;    int YjztlhitGFNnBYbKzOhl88837909 = -940327932;    int YjztlhitGFNnBYbKzOhl89886132 = -370856044;    int YjztlhitGFNnBYbKzOhl41703465 = 2834424;    int YjztlhitGFNnBYbKzOhl65929010 = -392141059;    int YjztlhitGFNnBYbKzOhl95985329 = -676027273;    int YjztlhitGFNnBYbKzOhl10722167 = -129428762;    int YjztlhitGFNnBYbKzOhl26974718 = -268789662;    int YjztlhitGFNnBYbKzOhl19502407 = -195112896;    int YjztlhitGFNnBYbKzOhl15519186 = 90575462;    int YjztlhitGFNnBYbKzOhl41214954 = -970907153;    int YjztlhitGFNnBYbKzOhl87151640 = -817478942;    int YjztlhitGFNnBYbKzOhl71401379 = -875605758;    int YjztlhitGFNnBYbKzOhl35603994 = -747081288;    int YjztlhitGFNnBYbKzOhl57386165 = -130683337;    int YjztlhitGFNnBYbKzOhl5735079 = -942416538;    int YjztlhitGFNnBYbKzOhl89146690 = -192456800;    int YjztlhitGFNnBYbKzOhl9814890 = 39707908;    int YjztlhitGFNnBYbKzOhl69132839 = -492417888;    int YjztlhitGFNnBYbKzOhl46230369 = -802814402;    int YjztlhitGFNnBYbKzOhl341567 = -268835105;    int YjztlhitGFNnBYbKzOhl22978189 = -611211060;    int YjztlhitGFNnBYbKzOhl99856730 = -856737604;    int YjztlhitGFNnBYbKzOhl6303836 = -288119386;    int YjztlhitGFNnBYbKzOhl71022190 = -431938013;    int YjztlhitGFNnBYbKzOhl53291670 = -880535681;    int YjztlhitGFNnBYbKzOhl84602565 = 97670;    int YjztlhitGFNnBYbKzOhl94249703 = -160980798;    int YjztlhitGFNnBYbKzOhl77111154 = -421955604;    int YjztlhitGFNnBYbKzOhl53751169 = -961406976;    int YjztlhitGFNnBYbKzOhl56731036 = -194971225;     YjztlhitGFNnBYbKzOhl2138483 = YjztlhitGFNnBYbKzOhl83868525;     YjztlhitGFNnBYbKzOhl83868525 = YjztlhitGFNnBYbKzOhl40921524;     YjztlhitGFNnBYbKzOhl40921524 = YjztlhitGFNnBYbKzOhl30400738;     YjztlhitGFNnBYbKzOhl30400738 = YjztlhitGFNnBYbKzOhl4477877;     YjztlhitGFNnBYbKzOhl4477877 = YjztlhitGFNnBYbKzOhl75878906;     YjztlhitGFNnBYbKzOhl75878906 = YjztlhitGFNnBYbKzOhl44785977;     YjztlhitGFNnBYbKzOhl44785977 = YjztlhitGFNnBYbKzOhl52163171;     YjztlhitGFNnBYbKzOhl52163171 = YjztlhitGFNnBYbKzOhl62351270;     YjztlhitGFNnBYbKzOhl62351270 = YjztlhitGFNnBYbKzOhl38595602;     YjztlhitGFNnBYbKzOhl38595602 = YjztlhitGFNnBYbKzOhl74516520;     YjztlhitGFNnBYbKzOhl74516520 = YjztlhitGFNnBYbKzOhl69857515;     YjztlhitGFNnBYbKzOhl69857515 = YjztlhitGFNnBYbKzOhl22584830;     YjztlhitGFNnBYbKzOhl22584830 = YjztlhitGFNnBYbKzOhl27142643;     YjztlhitGFNnBYbKzOhl27142643 = YjztlhitGFNnBYbKzOhl91081778;     YjztlhitGFNnBYbKzOhl91081778 = YjztlhitGFNnBYbKzOhl31682201;     YjztlhitGFNnBYbKzOhl31682201 = YjztlhitGFNnBYbKzOhl71435027;     YjztlhitGFNnBYbKzOhl71435027 = YjztlhitGFNnBYbKzOhl23210822;     YjztlhitGFNnBYbKzOhl23210822 = YjztlhitGFNnBYbKzOhl10305176;     YjztlhitGFNnBYbKzOhl10305176 = YjztlhitGFNnBYbKzOhl94646551;     YjztlhitGFNnBYbKzOhl94646551 = YjztlhitGFNnBYbKzOhl13548295;     YjztlhitGFNnBYbKzOhl13548295 = YjztlhitGFNnBYbKzOhl31587442;     YjztlhitGFNnBYbKzOhl31587442 = YjztlhitGFNnBYbKzOhl96544025;     YjztlhitGFNnBYbKzOhl96544025 = YjztlhitGFNnBYbKzOhl97933963;     YjztlhitGFNnBYbKzOhl97933963 = YjztlhitGFNnBYbKzOhl55155678;     YjztlhitGFNnBYbKzOhl55155678 = YjztlhitGFNnBYbKzOhl93992709;     YjztlhitGFNnBYbKzOhl93992709 = YjztlhitGFNnBYbKzOhl84794410;     YjztlhitGFNnBYbKzOhl84794410 = YjztlhitGFNnBYbKzOhl30727321;     YjztlhitGFNnBYbKzOhl30727321 = YjztlhitGFNnBYbKzOhl43586747;     YjztlhitGFNnBYbKzOhl43586747 = YjztlhitGFNnBYbKzOhl34849701;     YjztlhitGFNnBYbKzOhl34849701 = YjztlhitGFNnBYbKzOhl15305153;     YjztlhitGFNnBYbKzOhl15305153 = YjztlhitGFNnBYbKzOhl48832779;     YjztlhitGFNnBYbKzOhl48832779 = YjztlhitGFNnBYbKzOhl29101226;     YjztlhitGFNnBYbKzOhl29101226 = YjztlhitGFNnBYbKzOhl86549724;     YjztlhitGFNnBYbKzOhl86549724 = YjztlhitGFNnBYbKzOhl70892608;     YjztlhitGFNnBYbKzOhl70892608 = YjztlhitGFNnBYbKzOhl10302690;     YjztlhitGFNnBYbKzOhl10302690 = YjztlhitGFNnBYbKzOhl42844291;     YjztlhitGFNnBYbKzOhl42844291 = YjztlhitGFNnBYbKzOhl81548895;     YjztlhitGFNnBYbKzOhl81548895 = YjztlhitGFNnBYbKzOhl81507357;     YjztlhitGFNnBYbKzOhl81507357 = YjztlhitGFNnBYbKzOhl44376165;     YjztlhitGFNnBYbKzOhl44376165 = YjztlhitGFNnBYbKzOhl98661222;     YjztlhitGFNnBYbKzOhl98661222 = YjztlhitGFNnBYbKzOhl2826128;     YjztlhitGFNnBYbKzOhl2826128 = YjztlhitGFNnBYbKzOhl4612724;     YjztlhitGFNnBYbKzOhl4612724 = YjztlhitGFNnBYbKzOhl77041618;     YjztlhitGFNnBYbKzOhl77041618 = YjztlhitGFNnBYbKzOhl82414777;     YjztlhitGFNnBYbKzOhl82414777 = YjztlhitGFNnBYbKzOhl13940724;     YjztlhitGFNnBYbKzOhl13940724 = YjztlhitGFNnBYbKzOhl6841070;     YjztlhitGFNnBYbKzOhl6841070 = YjztlhitGFNnBYbKzOhl13393032;     YjztlhitGFNnBYbKzOhl13393032 = YjztlhitGFNnBYbKzOhl95123326;     YjztlhitGFNnBYbKzOhl95123326 = YjztlhitGFNnBYbKzOhl86200581;     YjztlhitGFNnBYbKzOhl86200581 = YjztlhitGFNnBYbKzOhl29114623;     YjztlhitGFNnBYbKzOhl29114623 = YjztlhitGFNnBYbKzOhl26158462;     YjztlhitGFNnBYbKzOhl26158462 = YjztlhitGFNnBYbKzOhl39017890;     YjztlhitGFNnBYbKzOhl39017890 = YjztlhitGFNnBYbKzOhl59968386;     YjztlhitGFNnBYbKzOhl59968386 = YjztlhitGFNnBYbKzOhl40319355;     YjztlhitGFNnBYbKzOhl40319355 = YjztlhitGFNnBYbKzOhl70551041;     YjztlhitGFNnBYbKzOhl70551041 = YjztlhitGFNnBYbKzOhl87324500;     YjztlhitGFNnBYbKzOhl87324500 = YjztlhitGFNnBYbKzOhl42987561;     YjztlhitGFNnBYbKzOhl42987561 = YjztlhitGFNnBYbKzOhl75245060;     YjztlhitGFNnBYbKzOhl75245060 = YjztlhitGFNnBYbKzOhl10485167;     YjztlhitGFNnBYbKzOhl10485167 = YjztlhitGFNnBYbKzOhl91084495;     YjztlhitGFNnBYbKzOhl91084495 = YjztlhitGFNnBYbKzOhl14058657;     YjztlhitGFNnBYbKzOhl14058657 = YjztlhitGFNnBYbKzOhl8576424;     YjztlhitGFNnBYbKzOhl8576424 = YjztlhitGFNnBYbKzOhl27501569;     YjztlhitGFNnBYbKzOhl27501569 = YjztlhitGFNnBYbKzOhl23290450;     YjztlhitGFNnBYbKzOhl23290450 = YjztlhitGFNnBYbKzOhl25683741;     YjztlhitGFNnBYbKzOhl25683741 = YjztlhitGFNnBYbKzOhl40756290;     YjztlhitGFNnBYbKzOhl40756290 = YjztlhitGFNnBYbKzOhl36035106;     YjztlhitGFNnBYbKzOhl36035106 = YjztlhitGFNnBYbKzOhl56250035;     YjztlhitGFNnBYbKzOhl56250035 = YjztlhitGFNnBYbKzOhl80779089;     YjztlhitGFNnBYbKzOhl80779089 = YjztlhitGFNnBYbKzOhl88837909;     YjztlhitGFNnBYbKzOhl88837909 = YjztlhitGFNnBYbKzOhl89886132;     YjztlhitGFNnBYbKzOhl89886132 = YjztlhitGFNnBYbKzOhl41703465;     YjztlhitGFNnBYbKzOhl41703465 = YjztlhitGFNnBYbKzOhl65929010;     YjztlhitGFNnBYbKzOhl65929010 = YjztlhitGFNnBYbKzOhl95985329;     YjztlhitGFNnBYbKzOhl95985329 = YjztlhitGFNnBYbKzOhl10722167;     YjztlhitGFNnBYbKzOhl10722167 = YjztlhitGFNnBYbKzOhl26974718;     YjztlhitGFNnBYbKzOhl26974718 = YjztlhitGFNnBYbKzOhl19502407;     YjztlhitGFNnBYbKzOhl19502407 = YjztlhitGFNnBYbKzOhl15519186;     YjztlhitGFNnBYbKzOhl15519186 = YjztlhitGFNnBYbKzOhl41214954;     YjztlhitGFNnBYbKzOhl41214954 = YjztlhitGFNnBYbKzOhl87151640;     YjztlhitGFNnBYbKzOhl87151640 = YjztlhitGFNnBYbKzOhl71401379;     YjztlhitGFNnBYbKzOhl71401379 = YjztlhitGFNnBYbKzOhl35603994;     YjztlhitGFNnBYbKzOhl35603994 = YjztlhitGFNnBYbKzOhl57386165;     YjztlhitGFNnBYbKzOhl57386165 = YjztlhitGFNnBYbKzOhl5735079;     YjztlhitGFNnBYbKzOhl5735079 = YjztlhitGFNnBYbKzOhl89146690;     YjztlhitGFNnBYbKzOhl89146690 = YjztlhitGFNnBYbKzOhl9814890;     YjztlhitGFNnBYbKzOhl9814890 = YjztlhitGFNnBYbKzOhl69132839;     YjztlhitGFNnBYbKzOhl69132839 = YjztlhitGFNnBYbKzOhl46230369;     YjztlhitGFNnBYbKzOhl46230369 = YjztlhitGFNnBYbKzOhl341567;     YjztlhitGFNnBYbKzOhl341567 = YjztlhitGFNnBYbKzOhl22978189;     YjztlhitGFNnBYbKzOhl22978189 = YjztlhitGFNnBYbKzOhl99856730;     YjztlhitGFNnBYbKzOhl99856730 = YjztlhitGFNnBYbKzOhl6303836;     YjztlhitGFNnBYbKzOhl6303836 = YjztlhitGFNnBYbKzOhl71022190;     YjztlhitGFNnBYbKzOhl71022190 = YjztlhitGFNnBYbKzOhl53291670;     YjztlhitGFNnBYbKzOhl53291670 = YjztlhitGFNnBYbKzOhl84602565;     YjztlhitGFNnBYbKzOhl84602565 = YjztlhitGFNnBYbKzOhl94249703;     YjztlhitGFNnBYbKzOhl94249703 = YjztlhitGFNnBYbKzOhl77111154;     YjztlhitGFNnBYbKzOhl77111154 = YjztlhitGFNnBYbKzOhl53751169;     YjztlhitGFNnBYbKzOhl53751169 = YjztlhitGFNnBYbKzOhl56731036;     YjztlhitGFNnBYbKzOhl56731036 = YjztlhitGFNnBYbKzOhl2138483;}
// Junk Finished

// Junk Code By Peatreat & Thaisen's Gen
void GICVnHBpXfUVYqTKGDiI30209967() {     int YsldyjPJyVawfCjpQCaM34399291 = -870618987;    int YsldyjPJyVawfCjpQCaM85090961 = -894751284;    int YsldyjPJyVawfCjpQCaM74198104 = -474286421;    int YsldyjPJyVawfCjpQCaM71908852 = -662449100;    int YsldyjPJyVawfCjpQCaM89595395 = -578744162;    int YsldyjPJyVawfCjpQCaM9975619 = -536461869;    int YsldyjPJyVawfCjpQCaM42278278 = -255436863;    int YsldyjPJyVawfCjpQCaM74918466 = 69828762;    int YsldyjPJyVawfCjpQCaM35702714 = -172489782;    int YsldyjPJyVawfCjpQCaM26103517 = -847297742;    int YsldyjPJyVawfCjpQCaM35906561 = -8864694;    int YsldyjPJyVawfCjpQCaM91010956 = 74885874;    int YsldyjPJyVawfCjpQCaM51246878 = 95670667;    int YsldyjPJyVawfCjpQCaM31338541 = -55216704;    int YsldyjPJyVawfCjpQCaM29742684 = -985687980;    int YsldyjPJyVawfCjpQCaM51758371 = -364773395;    int YsldyjPJyVawfCjpQCaM77296199 = -152933295;    int YsldyjPJyVawfCjpQCaM7831526 = -445800555;    int YsldyjPJyVawfCjpQCaM90672415 = -429260290;    int YsldyjPJyVawfCjpQCaM5838587 = -229174792;    int YsldyjPJyVawfCjpQCaM26508999 = -12504858;    int YsldyjPJyVawfCjpQCaM97321077 = -383811724;    int YsldyjPJyVawfCjpQCaM66598930 = -881768573;    int YsldyjPJyVawfCjpQCaM16512653 = -500975334;    int YsldyjPJyVawfCjpQCaM43810737 = -442238284;    int YsldyjPJyVawfCjpQCaM63504739 = -589227523;    int YsldyjPJyVawfCjpQCaM9916497 = -78652236;    int YsldyjPJyVawfCjpQCaM13468396 = 48929620;    int YsldyjPJyVawfCjpQCaM89270310 = -443047321;    int YsldyjPJyVawfCjpQCaM96217800 = -920683075;    int YsldyjPJyVawfCjpQCaM56132555 = -573452512;    int YsldyjPJyVawfCjpQCaM7007057 = -602747731;    int YsldyjPJyVawfCjpQCaM1170855 = -505854719;    int YsldyjPJyVawfCjpQCaM22099767 = -686006051;    int YsldyjPJyVawfCjpQCaM11525438 = -665085045;    int YsldyjPJyVawfCjpQCaM98764552 = -832563524;    int YsldyjPJyVawfCjpQCaM36050435 = 39710163;    int YsldyjPJyVawfCjpQCaM10817714 = -767708901;    int YsldyjPJyVawfCjpQCaM19282472 = 66674433;    int YsldyjPJyVawfCjpQCaM20049738 = -499943799;    int YsldyjPJyVawfCjpQCaM13718920 = -645707766;    int YsldyjPJyVawfCjpQCaM36690056 = -539429358;    int YsldyjPJyVawfCjpQCaM50346074 = -355457374;    int YsldyjPJyVawfCjpQCaM45823797 = -950315467;    int YsldyjPJyVawfCjpQCaM58433626 = -72215837;    int YsldyjPJyVawfCjpQCaM1602013 = -91888142;    int YsldyjPJyVawfCjpQCaM38715176 = -133655845;    int YsldyjPJyVawfCjpQCaM67605247 = 65132282;    int YsldyjPJyVawfCjpQCaM61664577 = 10797951;    int YsldyjPJyVawfCjpQCaM54003922 = -315329835;    int YsldyjPJyVawfCjpQCaM8618316 = -913067294;    int YsldyjPJyVawfCjpQCaM56236612 = -992738553;    int YsldyjPJyVawfCjpQCaM67879837 = -351266939;    int YsldyjPJyVawfCjpQCaM67347869 = -936444023;    int YsldyjPJyVawfCjpQCaM3700968 = -562619801;    int YsldyjPJyVawfCjpQCaM37078214 = -386807263;    int YsldyjPJyVawfCjpQCaM18492031 = 87017289;    int YsldyjPJyVawfCjpQCaM57685451 = -973311088;    int YsldyjPJyVawfCjpQCaM28098115 = -120210816;    int YsldyjPJyVawfCjpQCaM26090656 = -989516639;    int YsldyjPJyVawfCjpQCaM59123 = -357809633;    int YsldyjPJyVawfCjpQCaM28809883 = -204366484;    int YsldyjPJyVawfCjpQCaM85648156 = -487123917;    int YsldyjPJyVawfCjpQCaM39484913 = -251806708;    int YsldyjPJyVawfCjpQCaM69970962 = -173845231;    int YsldyjPJyVawfCjpQCaM28899505 = -406116964;    int YsldyjPJyVawfCjpQCaM89840102 = -419259407;    int YsldyjPJyVawfCjpQCaM29147111 = -218323283;    int YsldyjPJyVawfCjpQCaM19813104 = -390131660;    int YsldyjPJyVawfCjpQCaM30978132 = -53124457;    int YsldyjPJyVawfCjpQCaM15707937 = -304483558;    int YsldyjPJyVawfCjpQCaM66478486 = -385224394;    int YsldyjPJyVawfCjpQCaM88549054 = -412474988;    int YsldyjPJyVawfCjpQCaM70622677 = -929316492;    int YsldyjPJyVawfCjpQCaM92119667 = -583467026;    int YsldyjPJyVawfCjpQCaM89818943 = -473075500;    int YsldyjPJyVawfCjpQCaM46975004 = 71645649;    int YsldyjPJyVawfCjpQCaM20775134 = -931453107;    int YsldyjPJyVawfCjpQCaM58079026 = -328759498;    int YsldyjPJyVawfCjpQCaM42208725 = -250350143;    int YsldyjPJyVawfCjpQCaM24789563 = -355571678;    int YsldyjPJyVawfCjpQCaM42311249 = -43784519;    int YsldyjPJyVawfCjpQCaM51803818 = -961868331;    int YsldyjPJyVawfCjpQCaM35266389 = -27717487;    int YsldyjPJyVawfCjpQCaM87599485 = 92384219;    int YsldyjPJyVawfCjpQCaM99895942 = -580713959;    int YsldyjPJyVawfCjpQCaM39127219 = -151480792;    int YsldyjPJyVawfCjpQCaM33822986 = -569410696;    int YsldyjPJyVawfCjpQCaM18398800 = -23386250;    int YsldyjPJyVawfCjpQCaM74447224 = -178277782;    int YsldyjPJyVawfCjpQCaM80272521 = -819580813;    int YsldyjPJyVawfCjpQCaM78364984 = 13021250;    int YsldyjPJyVawfCjpQCaM82719598 = -547498085;    int YsldyjPJyVawfCjpQCaM93191815 = 56191071;    int YsldyjPJyVawfCjpQCaM19990616 = -42134167;    int YsldyjPJyVawfCjpQCaM84909037 = -341341283;    int YsldyjPJyVawfCjpQCaM51041899 = 47694559;    int YsldyjPJyVawfCjpQCaM10861161 = -3650666;    int YsldyjPJyVawfCjpQCaM75852835 = -676470237;    int YsldyjPJyVawfCjpQCaM29534122 = -870618987;     YsldyjPJyVawfCjpQCaM34399291 = YsldyjPJyVawfCjpQCaM85090961;     YsldyjPJyVawfCjpQCaM85090961 = YsldyjPJyVawfCjpQCaM74198104;     YsldyjPJyVawfCjpQCaM74198104 = YsldyjPJyVawfCjpQCaM71908852;     YsldyjPJyVawfCjpQCaM71908852 = YsldyjPJyVawfCjpQCaM89595395;     YsldyjPJyVawfCjpQCaM89595395 = YsldyjPJyVawfCjpQCaM9975619;     YsldyjPJyVawfCjpQCaM9975619 = YsldyjPJyVawfCjpQCaM42278278;     YsldyjPJyVawfCjpQCaM42278278 = YsldyjPJyVawfCjpQCaM74918466;     YsldyjPJyVawfCjpQCaM74918466 = YsldyjPJyVawfCjpQCaM35702714;     YsldyjPJyVawfCjpQCaM35702714 = YsldyjPJyVawfCjpQCaM26103517;     YsldyjPJyVawfCjpQCaM26103517 = YsldyjPJyVawfCjpQCaM35906561;     YsldyjPJyVawfCjpQCaM35906561 = YsldyjPJyVawfCjpQCaM91010956;     YsldyjPJyVawfCjpQCaM91010956 = YsldyjPJyVawfCjpQCaM51246878;     YsldyjPJyVawfCjpQCaM51246878 = YsldyjPJyVawfCjpQCaM31338541;     YsldyjPJyVawfCjpQCaM31338541 = YsldyjPJyVawfCjpQCaM29742684;     YsldyjPJyVawfCjpQCaM29742684 = YsldyjPJyVawfCjpQCaM51758371;     YsldyjPJyVawfCjpQCaM51758371 = YsldyjPJyVawfCjpQCaM77296199;     YsldyjPJyVawfCjpQCaM77296199 = YsldyjPJyVawfCjpQCaM7831526;     YsldyjPJyVawfCjpQCaM7831526 = YsldyjPJyVawfCjpQCaM90672415;     YsldyjPJyVawfCjpQCaM90672415 = YsldyjPJyVawfCjpQCaM5838587;     YsldyjPJyVawfCjpQCaM5838587 = YsldyjPJyVawfCjpQCaM26508999;     YsldyjPJyVawfCjpQCaM26508999 = YsldyjPJyVawfCjpQCaM97321077;     YsldyjPJyVawfCjpQCaM97321077 = YsldyjPJyVawfCjpQCaM66598930;     YsldyjPJyVawfCjpQCaM66598930 = YsldyjPJyVawfCjpQCaM16512653;     YsldyjPJyVawfCjpQCaM16512653 = YsldyjPJyVawfCjpQCaM43810737;     YsldyjPJyVawfCjpQCaM43810737 = YsldyjPJyVawfCjpQCaM63504739;     YsldyjPJyVawfCjpQCaM63504739 = YsldyjPJyVawfCjpQCaM9916497;     YsldyjPJyVawfCjpQCaM9916497 = YsldyjPJyVawfCjpQCaM13468396;     YsldyjPJyVawfCjpQCaM13468396 = YsldyjPJyVawfCjpQCaM89270310;     YsldyjPJyVawfCjpQCaM89270310 = YsldyjPJyVawfCjpQCaM96217800;     YsldyjPJyVawfCjpQCaM96217800 = YsldyjPJyVawfCjpQCaM56132555;     YsldyjPJyVawfCjpQCaM56132555 = YsldyjPJyVawfCjpQCaM7007057;     YsldyjPJyVawfCjpQCaM7007057 = YsldyjPJyVawfCjpQCaM1170855;     YsldyjPJyVawfCjpQCaM1170855 = YsldyjPJyVawfCjpQCaM22099767;     YsldyjPJyVawfCjpQCaM22099767 = YsldyjPJyVawfCjpQCaM11525438;     YsldyjPJyVawfCjpQCaM11525438 = YsldyjPJyVawfCjpQCaM98764552;     YsldyjPJyVawfCjpQCaM98764552 = YsldyjPJyVawfCjpQCaM36050435;     YsldyjPJyVawfCjpQCaM36050435 = YsldyjPJyVawfCjpQCaM10817714;     YsldyjPJyVawfCjpQCaM10817714 = YsldyjPJyVawfCjpQCaM19282472;     YsldyjPJyVawfCjpQCaM19282472 = YsldyjPJyVawfCjpQCaM20049738;     YsldyjPJyVawfCjpQCaM20049738 = YsldyjPJyVawfCjpQCaM13718920;     YsldyjPJyVawfCjpQCaM13718920 = YsldyjPJyVawfCjpQCaM36690056;     YsldyjPJyVawfCjpQCaM36690056 = YsldyjPJyVawfCjpQCaM50346074;     YsldyjPJyVawfCjpQCaM50346074 = YsldyjPJyVawfCjpQCaM45823797;     YsldyjPJyVawfCjpQCaM45823797 = YsldyjPJyVawfCjpQCaM58433626;     YsldyjPJyVawfCjpQCaM58433626 = YsldyjPJyVawfCjpQCaM1602013;     YsldyjPJyVawfCjpQCaM1602013 = YsldyjPJyVawfCjpQCaM38715176;     YsldyjPJyVawfCjpQCaM38715176 = YsldyjPJyVawfCjpQCaM67605247;     YsldyjPJyVawfCjpQCaM67605247 = YsldyjPJyVawfCjpQCaM61664577;     YsldyjPJyVawfCjpQCaM61664577 = YsldyjPJyVawfCjpQCaM54003922;     YsldyjPJyVawfCjpQCaM54003922 = YsldyjPJyVawfCjpQCaM8618316;     YsldyjPJyVawfCjpQCaM8618316 = YsldyjPJyVawfCjpQCaM56236612;     YsldyjPJyVawfCjpQCaM56236612 = YsldyjPJyVawfCjpQCaM67879837;     YsldyjPJyVawfCjpQCaM67879837 = YsldyjPJyVawfCjpQCaM67347869;     YsldyjPJyVawfCjpQCaM67347869 = YsldyjPJyVawfCjpQCaM3700968;     YsldyjPJyVawfCjpQCaM3700968 = YsldyjPJyVawfCjpQCaM37078214;     YsldyjPJyVawfCjpQCaM37078214 = YsldyjPJyVawfCjpQCaM18492031;     YsldyjPJyVawfCjpQCaM18492031 = YsldyjPJyVawfCjpQCaM57685451;     YsldyjPJyVawfCjpQCaM57685451 = YsldyjPJyVawfCjpQCaM28098115;     YsldyjPJyVawfCjpQCaM28098115 = YsldyjPJyVawfCjpQCaM26090656;     YsldyjPJyVawfCjpQCaM26090656 = YsldyjPJyVawfCjpQCaM59123;     YsldyjPJyVawfCjpQCaM59123 = YsldyjPJyVawfCjpQCaM28809883;     YsldyjPJyVawfCjpQCaM28809883 = YsldyjPJyVawfCjpQCaM85648156;     YsldyjPJyVawfCjpQCaM85648156 = YsldyjPJyVawfCjpQCaM39484913;     YsldyjPJyVawfCjpQCaM39484913 = YsldyjPJyVawfCjpQCaM69970962;     YsldyjPJyVawfCjpQCaM69970962 = YsldyjPJyVawfCjpQCaM28899505;     YsldyjPJyVawfCjpQCaM28899505 = YsldyjPJyVawfCjpQCaM89840102;     YsldyjPJyVawfCjpQCaM89840102 = YsldyjPJyVawfCjpQCaM29147111;     YsldyjPJyVawfCjpQCaM29147111 = YsldyjPJyVawfCjpQCaM19813104;     YsldyjPJyVawfCjpQCaM19813104 = YsldyjPJyVawfCjpQCaM30978132;     YsldyjPJyVawfCjpQCaM30978132 = YsldyjPJyVawfCjpQCaM15707937;     YsldyjPJyVawfCjpQCaM15707937 = YsldyjPJyVawfCjpQCaM66478486;     YsldyjPJyVawfCjpQCaM66478486 = YsldyjPJyVawfCjpQCaM88549054;     YsldyjPJyVawfCjpQCaM88549054 = YsldyjPJyVawfCjpQCaM70622677;     YsldyjPJyVawfCjpQCaM70622677 = YsldyjPJyVawfCjpQCaM92119667;     YsldyjPJyVawfCjpQCaM92119667 = YsldyjPJyVawfCjpQCaM89818943;     YsldyjPJyVawfCjpQCaM89818943 = YsldyjPJyVawfCjpQCaM46975004;     YsldyjPJyVawfCjpQCaM46975004 = YsldyjPJyVawfCjpQCaM20775134;     YsldyjPJyVawfCjpQCaM20775134 = YsldyjPJyVawfCjpQCaM58079026;     YsldyjPJyVawfCjpQCaM58079026 = YsldyjPJyVawfCjpQCaM42208725;     YsldyjPJyVawfCjpQCaM42208725 = YsldyjPJyVawfCjpQCaM24789563;     YsldyjPJyVawfCjpQCaM24789563 = YsldyjPJyVawfCjpQCaM42311249;     YsldyjPJyVawfCjpQCaM42311249 = YsldyjPJyVawfCjpQCaM51803818;     YsldyjPJyVawfCjpQCaM51803818 = YsldyjPJyVawfCjpQCaM35266389;     YsldyjPJyVawfCjpQCaM35266389 = YsldyjPJyVawfCjpQCaM87599485;     YsldyjPJyVawfCjpQCaM87599485 = YsldyjPJyVawfCjpQCaM99895942;     YsldyjPJyVawfCjpQCaM99895942 = YsldyjPJyVawfCjpQCaM39127219;     YsldyjPJyVawfCjpQCaM39127219 = YsldyjPJyVawfCjpQCaM33822986;     YsldyjPJyVawfCjpQCaM33822986 = YsldyjPJyVawfCjpQCaM18398800;     YsldyjPJyVawfCjpQCaM18398800 = YsldyjPJyVawfCjpQCaM74447224;     YsldyjPJyVawfCjpQCaM74447224 = YsldyjPJyVawfCjpQCaM80272521;     YsldyjPJyVawfCjpQCaM80272521 = YsldyjPJyVawfCjpQCaM78364984;     YsldyjPJyVawfCjpQCaM78364984 = YsldyjPJyVawfCjpQCaM82719598;     YsldyjPJyVawfCjpQCaM82719598 = YsldyjPJyVawfCjpQCaM93191815;     YsldyjPJyVawfCjpQCaM93191815 = YsldyjPJyVawfCjpQCaM19990616;     YsldyjPJyVawfCjpQCaM19990616 = YsldyjPJyVawfCjpQCaM84909037;     YsldyjPJyVawfCjpQCaM84909037 = YsldyjPJyVawfCjpQCaM51041899;     YsldyjPJyVawfCjpQCaM51041899 = YsldyjPJyVawfCjpQCaM10861161;     YsldyjPJyVawfCjpQCaM10861161 = YsldyjPJyVawfCjpQCaM75852835;     YsldyjPJyVawfCjpQCaM75852835 = YsldyjPJyVawfCjpQCaM29534122;     YsldyjPJyVawfCjpQCaM29534122 = YsldyjPJyVawfCjpQCaM34399291;}
// Junk Finished

// Junk Code By Peatreat & Thaisen's Gen
void QCtGfxmOhEqDsaFrdsjH54309752() {     int jjHmpHdVhNzHdqDlTfdS37318238 = -91891738;    int jjHmpHdVhNzHdqDlTfdS16414598 = -297416342;    int jjHmpHdVhNzHdqDlTfdS86130390 = 37688350;    int jjHmpHdVhNzHdqDlTfdS68268391 = -852282369;    int jjHmpHdVhNzHdqDlTfdS87323133 = -543528747;    int jjHmpHdVhNzHdqDlTfdS99266661 = -506585478;    int jjHmpHdVhNzHdqDlTfdS89602138 = -734117939;    int jjHmpHdVhNzHdqDlTfdS85302091 = -306959916;    int jjHmpHdVhNzHdqDlTfdS72179048 = -428494442;    int jjHmpHdVhNzHdqDlTfdS39938378 = -584453029;    int jjHmpHdVhNzHdqDlTfdS19225157 = -672498795;    int jjHmpHdVhNzHdqDlTfdS43419292 = -176556715;    int jjHmpHdVhNzHdqDlTfdS27883399 = -98689376;    int jjHmpHdVhNzHdqDlTfdS65537253 = -40639735;    int jjHmpHdVhNzHdqDlTfdS5951500 = -315081902;    int jjHmpHdVhNzHdqDlTfdS29798635 = -283249003;    int jjHmpHdVhNzHdqDlTfdS21157438 = -258438433;    int jjHmpHdVhNzHdqDlTfdS89745190 = -46788528;    int jjHmpHdVhNzHdqDlTfdS32319167 = -187157655;    int jjHmpHdVhNzHdqDlTfdS3743569 = -864272790;    int jjHmpHdVhNzHdqDlTfdS14936035 = -497779841;    int jjHmpHdVhNzHdqDlTfdS46154213 = -376774824;    int jjHmpHdVhNzHdqDlTfdS1719248 = -760274547;    int jjHmpHdVhNzHdqDlTfdS25290772 = -328424199;    int jjHmpHdVhNzHdqDlTfdS68147494 = -869497299;    int jjHmpHdVhNzHdqDlTfdS47040272 = -247326529;    int jjHmpHdVhNzHdqDlTfdS73077785 = -171087798;    int jjHmpHdVhNzHdqDlTfdS68588171 = -675791554;    int jjHmpHdVhNzHdqDlTfdS54417914 = -773393295;    int jjHmpHdVhNzHdqDlTfdS20668126 = -749540247;    int jjHmpHdVhNzHdqDlTfdS70619275 = -789442571;    int jjHmpHdVhNzHdqDlTfdS24968937 = -690470067;    int jjHmpHdVhNzHdqDlTfdS70733421 = -479990447;    int jjHmpHdVhNzHdqDlTfdS22731947 = -705529694;    int jjHmpHdVhNzHdqDlTfdS47824466 = -666138661;    int jjHmpHdVhNzHdqDlTfdS4391485 = -844390292;    int jjHmpHdVhNzHdqDlTfdS61106696 = -266361714;    int jjHmpHdVhNzHdqDlTfdS22961340 = -558125557;    int jjHmpHdVhNzHdqDlTfdS277278 = -969956774;    int jjHmpHdVhNzHdqDlTfdS18953717 = -639636731;    int jjHmpHdVhNzHdqDlTfdS994234 = -639099137;    int jjHmpHdVhNzHdqDlTfdS13339314 = -58441823;    int jjHmpHdVhNzHdqDlTfdS84763025 = -295186160;    int jjHmpHdVhNzHdqDlTfdS61882377 = -498606455;    int jjHmpHdVhNzHdqDlTfdS46388482 = -704236351;    int jjHmpHdVhNzHdqDlTfdS55241167 = -836785816;    int jjHmpHdVhNzHdqDlTfdS69022693 = -798372775;    int jjHmpHdVhNzHdqDlTfdS12048092 = -608115394;    int jjHmpHdVhNzHdqDlTfdS14988892 = 75020491;    int jjHmpHdVhNzHdqDlTfdS10189325 = -696337749;    int jjHmpHdVhNzHdqDlTfdS43051963 = -861778640;    int jjHmpHdVhNzHdqDlTfdS13639009 = 53795024;    int jjHmpHdVhNzHdqDlTfdS76369094 = -347069209;    int jjHmpHdVhNzHdqDlTfdS54704385 = -117531196;    int jjHmpHdVhNzHdqDlTfdS39373718 = -928765281;    int jjHmpHdVhNzHdqDlTfdS91164025 = -715116914;    int jjHmpHdVhNzHdqDlTfdS14695351 = -537141796;    int jjHmpHdVhNzHdqDlTfdS60839619 = -633887451;    int jjHmpHdVhNzHdqDlTfdS120897 = -982785070;    int jjHmpHdVhNzHdqDlTfdS40282861 = -196202219;    int jjHmpHdVhNzHdqDlTfdS26188876 = -235497681;    int jjHmpHdVhNzHdqDlTfdS21013968 = 41673614;    int jjHmpHdVhNzHdqDlTfdS30884178 = -533566622;    int jjHmpHdVhNzHdqDlTfdS51510922 = -678954196;    int jjHmpHdVhNzHdqDlTfdS69319103 = -795010458;    int jjHmpHdVhNzHdqDlTfdS94256220 = -982028728;    int jjHmpHdVhNzHdqDlTfdS72685870 = -696566268;    int jjHmpHdVhNzHdqDlTfdS5151452 = -393159683;    int jjHmpHdVhNzHdqDlTfdS17712787 = -374501075;    int jjHmpHdVhNzHdqDlTfdS1560016 = -470691611;    int jjHmpHdVhNzHdqDlTfdS68691938 = 83112710;    int jjHmpHdVhNzHdqDlTfdS98196097 = -700312876;    int jjHmpHdVhNzHdqDlTfdS89467912 = -76831754;    int jjHmpHdVhNzHdqDlTfdS13365451 = -547520924;    int jjHmpHdVhNzHdqDlTfdS2749335 = -125173653;    int jjHmpHdVhNzHdqDlTfdS1596721 = -339338018;    int jjHmpHdVhNzHdqDlTfdS61391188 = 18411335;    int jjHmpHdVhNzHdqDlTfdS39836870 = -161668092;    int jjHmpHdVhNzHdqDlTfdS78902289 = -624187848;    int jjHmpHdVhNzHdqDlTfdS12906328 = 67288516;    int jjHmpHdVhNzHdqDlTfdS78017579 = -448953754;    int jjHmpHdVhNzHdqDlTfdS61029694 = -562972404;    int jjHmpHdVhNzHdqDlTfdS53599280 = -650812046;    int jjHmpHdVhNzHdqDlTfdS44228589 = 22944454;    int jjHmpHdVhNzHdqDlTfdS77616163 = -887761607;    int jjHmpHdVhNzHdqDlTfdS56980266 = -743237595;    int jjHmpHdVhNzHdqDlTfdS48599842 = -243400859;    int jjHmpHdVhNzHdqDlTfdS16029037 = -262459252;    int jjHmpHdVhNzHdqDlTfdS83358229 = -776764414;    int jjHmpHdVhNzHdqDlTfdS56660441 = -951021748;    int jjHmpHdVhNzHdqDlTfdS89696133 = -207248496;    int jjHmpHdVhNzHdqDlTfdS267078 = -632474263;    int jjHmpHdVhNzHdqDlTfdS22840443 = -575340488;    int jjHmpHdVhNzHdqDlTfdS59994417 = -673754556;    int jjHmpHdVhNzHdqDlTfdS92764840 = -304139051;    int jjHmpHdVhNzHdqDlTfdS79980266 = -580772752;    int jjHmpHdVhNzHdqDlTfdS82455136 = -524875201;    int jjHmpHdVhNzHdqDlTfdS33252104 = -616231965;    int jjHmpHdVhNzHdqDlTfdS92563274 = -703595997;    int jjHmpHdVhNzHdqDlTfdS52132262 = -91891738;     jjHmpHdVhNzHdqDlTfdS37318238 = jjHmpHdVhNzHdqDlTfdS16414598;     jjHmpHdVhNzHdqDlTfdS16414598 = jjHmpHdVhNzHdqDlTfdS86130390;     jjHmpHdVhNzHdqDlTfdS86130390 = jjHmpHdVhNzHdqDlTfdS68268391;     jjHmpHdVhNzHdqDlTfdS68268391 = jjHmpHdVhNzHdqDlTfdS87323133;     jjHmpHdVhNzHdqDlTfdS87323133 = jjHmpHdVhNzHdqDlTfdS99266661;     jjHmpHdVhNzHdqDlTfdS99266661 = jjHmpHdVhNzHdqDlTfdS89602138;     jjHmpHdVhNzHdqDlTfdS89602138 = jjHmpHdVhNzHdqDlTfdS85302091;     jjHmpHdVhNzHdqDlTfdS85302091 = jjHmpHdVhNzHdqDlTfdS72179048;     jjHmpHdVhNzHdqDlTfdS72179048 = jjHmpHdVhNzHdqDlTfdS39938378;     jjHmpHdVhNzHdqDlTfdS39938378 = jjHmpHdVhNzHdqDlTfdS19225157;     jjHmpHdVhNzHdqDlTfdS19225157 = jjHmpHdVhNzHdqDlTfdS43419292;     jjHmpHdVhNzHdqDlTfdS43419292 = jjHmpHdVhNzHdqDlTfdS27883399;     jjHmpHdVhNzHdqDlTfdS27883399 = jjHmpHdVhNzHdqDlTfdS65537253;     jjHmpHdVhNzHdqDlTfdS65537253 = jjHmpHdVhNzHdqDlTfdS5951500;     jjHmpHdVhNzHdqDlTfdS5951500 = jjHmpHdVhNzHdqDlTfdS29798635;     jjHmpHdVhNzHdqDlTfdS29798635 = jjHmpHdVhNzHdqDlTfdS21157438;     jjHmpHdVhNzHdqDlTfdS21157438 = jjHmpHdVhNzHdqDlTfdS89745190;     jjHmpHdVhNzHdqDlTfdS89745190 = jjHmpHdVhNzHdqDlTfdS32319167;     jjHmpHdVhNzHdqDlTfdS32319167 = jjHmpHdVhNzHdqDlTfdS3743569;     jjHmpHdVhNzHdqDlTfdS3743569 = jjHmpHdVhNzHdqDlTfdS14936035;     jjHmpHdVhNzHdqDlTfdS14936035 = jjHmpHdVhNzHdqDlTfdS46154213;     jjHmpHdVhNzHdqDlTfdS46154213 = jjHmpHdVhNzHdqDlTfdS1719248;     jjHmpHdVhNzHdqDlTfdS1719248 = jjHmpHdVhNzHdqDlTfdS25290772;     jjHmpHdVhNzHdqDlTfdS25290772 = jjHmpHdVhNzHdqDlTfdS68147494;     jjHmpHdVhNzHdqDlTfdS68147494 = jjHmpHdVhNzHdqDlTfdS47040272;     jjHmpHdVhNzHdqDlTfdS47040272 = jjHmpHdVhNzHdqDlTfdS73077785;     jjHmpHdVhNzHdqDlTfdS73077785 = jjHmpHdVhNzHdqDlTfdS68588171;     jjHmpHdVhNzHdqDlTfdS68588171 = jjHmpHdVhNzHdqDlTfdS54417914;     jjHmpHdVhNzHdqDlTfdS54417914 = jjHmpHdVhNzHdqDlTfdS20668126;     jjHmpHdVhNzHdqDlTfdS20668126 = jjHmpHdVhNzHdqDlTfdS70619275;     jjHmpHdVhNzHdqDlTfdS70619275 = jjHmpHdVhNzHdqDlTfdS24968937;     jjHmpHdVhNzHdqDlTfdS24968937 = jjHmpHdVhNzHdqDlTfdS70733421;     jjHmpHdVhNzHdqDlTfdS70733421 = jjHmpHdVhNzHdqDlTfdS22731947;     jjHmpHdVhNzHdqDlTfdS22731947 = jjHmpHdVhNzHdqDlTfdS47824466;     jjHmpHdVhNzHdqDlTfdS47824466 = jjHmpHdVhNzHdqDlTfdS4391485;     jjHmpHdVhNzHdqDlTfdS4391485 = jjHmpHdVhNzHdqDlTfdS61106696;     jjHmpHdVhNzHdqDlTfdS61106696 = jjHmpHdVhNzHdqDlTfdS22961340;     jjHmpHdVhNzHdqDlTfdS22961340 = jjHmpHdVhNzHdqDlTfdS277278;     jjHmpHdVhNzHdqDlTfdS277278 = jjHmpHdVhNzHdqDlTfdS18953717;     jjHmpHdVhNzHdqDlTfdS18953717 = jjHmpHdVhNzHdqDlTfdS994234;     jjHmpHdVhNzHdqDlTfdS994234 = jjHmpHdVhNzHdqDlTfdS13339314;     jjHmpHdVhNzHdqDlTfdS13339314 = jjHmpHdVhNzHdqDlTfdS84763025;     jjHmpHdVhNzHdqDlTfdS84763025 = jjHmpHdVhNzHdqDlTfdS61882377;     jjHmpHdVhNzHdqDlTfdS61882377 = jjHmpHdVhNzHdqDlTfdS46388482;     jjHmpHdVhNzHdqDlTfdS46388482 = jjHmpHdVhNzHdqDlTfdS55241167;     jjHmpHdVhNzHdqDlTfdS55241167 = jjHmpHdVhNzHdqDlTfdS69022693;     jjHmpHdVhNzHdqDlTfdS69022693 = jjHmpHdVhNzHdqDlTfdS12048092;     jjHmpHdVhNzHdqDlTfdS12048092 = jjHmpHdVhNzHdqDlTfdS14988892;     jjHmpHdVhNzHdqDlTfdS14988892 = jjHmpHdVhNzHdqDlTfdS10189325;     jjHmpHdVhNzHdqDlTfdS10189325 = jjHmpHdVhNzHdqDlTfdS43051963;     jjHmpHdVhNzHdqDlTfdS43051963 = jjHmpHdVhNzHdqDlTfdS13639009;     jjHmpHdVhNzHdqDlTfdS13639009 = jjHmpHdVhNzHdqDlTfdS76369094;     jjHmpHdVhNzHdqDlTfdS76369094 = jjHmpHdVhNzHdqDlTfdS54704385;     jjHmpHdVhNzHdqDlTfdS54704385 = jjHmpHdVhNzHdqDlTfdS39373718;     jjHmpHdVhNzHdqDlTfdS39373718 = jjHmpHdVhNzHdqDlTfdS91164025;     jjHmpHdVhNzHdqDlTfdS91164025 = jjHmpHdVhNzHdqDlTfdS14695351;     jjHmpHdVhNzHdqDlTfdS14695351 = jjHmpHdVhNzHdqDlTfdS60839619;     jjHmpHdVhNzHdqDlTfdS60839619 = jjHmpHdVhNzHdqDlTfdS120897;     jjHmpHdVhNzHdqDlTfdS120897 = jjHmpHdVhNzHdqDlTfdS40282861;     jjHmpHdVhNzHdqDlTfdS40282861 = jjHmpHdVhNzHdqDlTfdS26188876;     jjHmpHdVhNzHdqDlTfdS26188876 = jjHmpHdVhNzHdqDlTfdS21013968;     jjHmpHdVhNzHdqDlTfdS21013968 = jjHmpHdVhNzHdqDlTfdS30884178;     jjHmpHdVhNzHdqDlTfdS30884178 = jjHmpHdVhNzHdqDlTfdS51510922;     jjHmpHdVhNzHdqDlTfdS51510922 = jjHmpHdVhNzHdqDlTfdS69319103;     jjHmpHdVhNzHdqDlTfdS69319103 = jjHmpHdVhNzHdqDlTfdS94256220;     jjHmpHdVhNzHdqDlTfdS94256220 = jjHmpHdVhNzHdqDlTfdS72685870;     jjHmpHdVhNzHdqDlTfdS72685870 = jjHmpHdVhNzHdqDlTfdS5151452;     jjHmpHdVhNzHdqDlTfdS5151452 = jjHmpHdVhNzHdqDlTfdS17712787;     jjHmpHdVhNzHdqDlTfdS17712787 = jjHmpHdVhNzHdqDlTfdS1560016;     jjHmpHdVhNzHdqDlTfdS1560016 = jjHmpHdVhNzHdqDlTfdS68691938;     jjHmpHdVhNzHdqDlTfdS68691938 = jjHmpHdVhNzHdqDlTfdS98196097;     jjHmpHdVhNzHdqDlTfdS98196097 = jjHmpHdVhNzHdqDlTfdS89467912;     jjHmpHdVhNzHdqDlTfdS89467912 = jjHmpHdVhNzHdqDlTfdS13365451;     jjHmpHdVhNzHdqDlTfdS13365451 = jjHmpHdVhNzHdqDlTfdS2749335;     jjHmpHdVhNzHdqDlTfdS2749335 = jjHmpHdVhNzHdqDlTfdS1596721;     jjHmpHdVhNzHdqDlTfdS1596721 = jjHmpHdVhNzHdqDlTfdS61391188;     jjHmpHdVhNzHdqDlTfdS61391188 = jjHmpHdVhNzHdqDlTfdS39836870;     jjHmpHdVhNzHdqDlTfdS39836870 = jjHmpHdVhNzHdqDlTfdS78902289;     jjHmpHdVhNzHdqDlTfdS78902289 = jjHmpHdVhNzHdqDlTfdS12906328;     jjHmpHdVhNzHdqDlTfdS12906328 = jjHmpHdVhNzHdqDlTfdS78017579;     jjHmpHdVhNzHdqDlTfdS78017579 = jjHmpHdVhNzHdqDlTfdS61029694;     jjHmpHdVhNzHdqDlTfdS61029694 = jjHmpHdVhNzHdqDlTfdS53599280;     jjHmpHdVhNzHdqDlTfdS53599280 = jjHmpHdVhNzHdqDlTfdS44228589;     jjHmpHdVhNzHdqDlTfdS44228589 = jjHmpHdVhNzHdqDlTfdS77616163;     jjHmpHdVhNzHdqDlTfdS77616163 = jjHmpHdVhNzHdqDlTfdS56980266;     jjHmpHdVhNzHdqDlTfdS56980266 = jjHmpHdVhNzHdqDlTfdS48599842;     jjHmpHdVhNzHdqDlTfdS48599842 = jjHmpHdVhNzHdqDlTfdS16029037;     jjHmpHdVhNzHdqDlTfdS16029037 = jjHmpHdVhNzHdqDlTfdS83358229;     jjHmpHdVhNzHdqDlTfdS83358229 = jjHmpHdVhNzHdqDlTfdS56660441;     jjHmpHdVhNzHdqDlTfdS56660441 = jjHmpHdVhNzHdqDlTfdS89696133;     jjHmpHdVhNzHdqDlTfdS89696133 = jjHmpHdVhNzHdqDlTfdS267078;     jjHmpHdVhNzHdqDlTfdS267078 = jjHmpHdVhNzHdqDlTfdS22840443;     jjHmpHdVhNzHdqDlTfdS22840443 = jjHmpHdVhNzHdqDlTfdS59994417;     jjHmpHdVhNzHdqDlTfdS59994417 = jjHmpHdVhNzHdqDlTfdS92764840;     jjHmpHdVhNzHdqDlTfdS92764840 = jjHmpHdVhNzHdqDlTfdS79980266;     jjHmpHdVhNzHdqDlTfdS79980266 = jjHmpHdVhNzHdqDlTfdS82455136;     jjHmpHdVhNzHdqDlTfdS82455136 = jjHmpHdVhNzHdqDlTfdS33252104;     jjHmpHdVhNzHdqDlTfdS33252104 = jjHmpHdVhNzHdqDlTfdS92563274;     jjHmpHdVhNzHdqDlTfdS92563274 = jjHmpHdVhNzHdqDlTfdS52132262;     jjHmpHdVhNzHdqDlTfdS52132262 = jjHmpHdVhNzHdqDlTfdS37318238;}
// Junk Finished

// Junk Code By Peatreat & Thaisen's Gen
void kEPzMcVukNgtrFvxTKNE30652070() {     int WovdVrfYJiGcCcZmfbmO69579047 = -767539500;    int WovdVrfYJiGcCcZmfbmO17637033 = -971033227;    int WovdVrfYJiGcCcZmfbmO19406971 = -65171033;    int WovdVrfYJiGcCcZmfbmO9776505 = -672518078;    int WovdVrfYJiGcCcZmfbmO72440651 = -93262306;    int WovdVrfYJiGcCcZmfbmO33363374 = -474560748;    int WovdVrfYJiGcCcZmfbmO87094439 = -918559773;    int WovdVrfYJiGcCcZmfbmO8057387 = -41108822;    int WovdVrfYJiGcCcZmfbmO45530491 = -304797843;    int WovdVrfYJiGcCcZmfbmO27446293 = -757319836;    int WovdVrfYJiGcCcZmfbmO80615197 = -160703038;    int WovdVrfYJiGcCcZmfbmO64572733 = -947713873;    int WovdVrfYJiGcCcZmfbmO56545447 = -405170836;    int WovdVrfYJiGcCcZmfbmO69733152 = -570187608;    int WovdVrfYJiGcCcZmfbmO44612405 = -557438672;    int WovdVrfYJiGcCcZmfbmO49874805 = -964536676;    int WovdVrfYJiGcCcZmfbmO27018609 = -274373012;    int WovdVrfYJiGcCcZmfbmO74365894 = -55681926;    int WovdVrfYJiGcCcZmfbmO12686407 = -955849344;    int WovdVrfYJiGcCcZmfbmO14935604 = -469028934;    int WovdVrfYJiGcCcZmfbmO27896739 = -784842057;    int WovdVrfYJiGcCcZmfbmO11887850 = -548444502;    int WovdVrfYJiGcCcZmfbmO71774152 = -529895218;    int WovdVrfYJiGcCcZmfbmO43869461 = -444392681;    int WovdVrfYJiGcCcZmfbmO56802553 = -947545480;    int WovdVrfYJiGcCcZmfbmO16552302 = -815347018;    int WovdVrfYJiGcCcZmfbmO98199871 = -169145297;    int WovdVrfYJiGcCcZmfbmO51329246 = -404355949;    int WovdVrfYJiGcCcZmfbmO101478 = -355451366;    int WovdVrfYJiGcCcZmfbmO82036225 = -795433722;    int WovdVrfYJiGcCcZmfbmO11446677 = -544092179;    int WovdVrfYJiGcCcZmfbmO83143213 = -841717003;    int WovdVrfYJiGcCcZmfbmO42803051 = -709108783;    int WovdVrfYJiGcCcZmfbmO58281989 = 61794614;    int WovdVrfYJiGcCcZmfbmO88457296 = 20440577;    int WovdVrfYJiGcCcZmfbmO92853346 = -856756258;    int WovdVrfYJiGcCcZmfbmO54312840 = -483493761;    int WovdVrfYJiGcCcZmfbmO52230157 = -559691785;    int WovdVrfYJiGcCcZmfbmO38052392 = -563540760;    int WovdVrfYJiGcCcZmfbmO94627289 = -871152987;    int WovdVrfYJiGcCcZmfbmO16051932 = -336415527;    int WovdVrfYJiGcCcZmfbmO47203242 = -1857301;    int WovdVrfYJiGcCcZmfbmO30496376 = -807291148;    int WovdVrfYJiGcCcZmfbmO30664556 = -631886915;    int WovdVrfYJiGcCcZmfbmO22407331 = -400869873;    int WovdVrfYJiGcCcZmfbmO42902455 = -535391006;    int WovdVrfYJiGcCcZmfbmO896801 = -728300529;    int WovdVrfYJiGcCcZmfbmO66260307 = -337994132;    int WovdVrfYJiGcCcZmfbmO81530142 = -538756860;    int WovdVrfYJiGcCcZmfbmO77992665 = -381361670;    int WovdVrfYJiGcCcZmfbmO22555656 = -842472872;    int WovdVrfYJiGcCcZmfbmO43717159 = -412597425;    int WovdVrfYJiGcCcZmfbmO5231043 = -307127444;    int WovdVrfYJiGcCcZmfbmO62083868 = -269656723;    int WovdVrfYJiGcCcZmfbmO2755331 = -940869125;    int WovdVrfYJiGcCcZmfbmO57691197 = -119094998;    int WovdVrfYJiGcCcZmfbmO45862881 = -341138010;    int WovdVrfYJiGcCcZmfbmO75537509 = -620778353;    int WovdVrfYJiGcCcZmfbmO52973952 = -724972599;    int WovdVrfYJiGcCcZmfbmO55888349 = -277915289;    int WovdVrfYJiGcCcZmfbmO35163503 = -205415452;    int WovdVrfYJiGcCcZmfbmO35765193 = -414203824;    int WovdVrfYJiGcCcZmfbmO7955910 = -685657457;    int WovdVrfYJiGcCcZmfbmO63494265 = -509364122;    int WovdVrfYJiGcCcZmfbmO15999616 = -113227658;    int WovdVrfYJiGcCcZmfbmO97471983 = -318986036;    int WovdVrfYJiGcCcZmfbmO21769683 = -138605091;    int WovdVrfYJiGcCcZmfbmO98263457 = -366965450;    int WovdVrfYJiGcCcZmfbmO81275855 = -490628185;    int WovdVrfYJiGcCcZmfbmO51759058 = -700682415;    int WovdVrfYJiGcCcZmfbmO95561965 = -381042915;    int WovdVrfYJiGcCcZmfbmO74788451 = -714681227;    int WovdVrfYJiGcCcZmfbmO36313502 = -492141166;    int WovdVrfYJiGcCcZmfbmO18059118 = 15303643;    int WovdVrfYJiGcCcZmfbmO98883672 = -32613407;    int WovdVrfYJiGcCcZmfbmO80693497 = -682984756;    int WovdVrfYJiGcCcZmfbmO81391473 = -741153355;    int WovdVrfYJiGcCcZmfbmO41109597 = -898008303;    int WovdVrfYJiGcCcZmfbmO21462131 = 56477192;    int WovdVrfYJiGcCcZmfbmO13900098 = -312154475;    int WovdVrfYJiGcCcZmfbmO15655502 = 12953510;    int WovdVrfYJiGcCcZmfbmO31939564 = -831151165;    int WovdVrfYJiGcCcZmfbmO69799103 = -865599090;    int WovdVrfYJiGcCcZmfbmO22108813 = -974089696;    int WovdVrfYJiGcCcZmfbmO59480569 = -952960850;    int WovdVrfYJiGcCcZmfbmO67729518 = -31494754;    int WovdVrfYJiGcCcZmfbmO77912170 = -434589559;    int WovdVrfYJiGcCcZmfbmO80719182 = -339452060;    int WovdVrfYJiGcCcZmfbmO55526659 = 2663738;    int WovdVrfYJiGcCcZmfbmO30766099 = -860464425;    int WovdVrfYJiGcCcZmfbmO46990466 = -415618249;    int WovdVrfYJiGcCcZmfbmO78775330 = -862715409;    int WovdVrfYJiGcCcZmfbmO99256205 = -834719187;    int WovdVrfYJiGcCcZmfbmO82164042 = -185625471;    int WovdVrfYJiGcCcZmfbmO59463787 = -565737536;    int WovdVrfYJiGcCcZmfbmO80286738 = -922211704;    int WovdVrfYJiGcCcZmfbmO39247332 = -316199845;    int WovdVrfYJiGcCcZmfbmO67002110 = -197927027;    int WovdVrfYJiGcCcZmfbmO14664941 = -418659258;    int WovdVrfYJiGcCcZmfbmO24935347 = -767539500;     WovdVrfYJiGcCcZmfbmO69579047 = WovdVrfYJiGcCcZmfbmO17637033;     WovdVrfYJiGcCcZmfbmO17637033 = WovdVrfYJiGcCcZmfbmO19406971;     WovdVrfYJiGcCcZmfbmO19406971 = WovdVrfYJiGcCcZmfbmO9776505;     WovdVrfYJiGcCcZmfbmO9776505 = WovdVrfYJiGcCcZmfbmO72440651;     WovdVrfYJiGcCcZmfbmO72440651 = WovdVrfYJiGcCcZmfbmO33363374;     WovdVrfYJiGcCcZmfbmO33363374 = WovdVrfYJiGcCcZmfbmO87094439;     WovdVrfYJiGcCcZmfbmO87094439 = WovdVrfYJiGcCcZmfbmO8057387;     WovdVrfYJiGcCcZmfbmO8057387 = WovdVrfYJiGcCcZmfbmO45530491;     WovdVrfYJiGcCcZmfbmO45530491 = WovdVrfYJiGcCcZmfbmO27446293;     WovdVrfYJiGcCcZmfbmO27446293 = WovdVrfYJiGcCcZmfbmO80615197;     WovdVrfYJiGcCcZmfbmO80615197 = WovdVrfYJiGcCcZmfbmO64572733;     WovdVrfYJiGcCcZmfbmO64572733 = WovdVrfYJiGcCcZmfbmO56545447;     WovdVrfYJiGcCcZmfbmO56545447 = WovdVrfYJiGcCcZmfbmO69733152;     WovdVrfYJiGcCcZmfbmO69733152 = WovdVrfYJiGcCcZmfbmO44612405;     WovdVrfYJiGcCcZmfbmO44612405 = WovdVrfYJiGcCcZmfbmO49874805;     WovdVrfYJiGcCcZmfbmO49874805 = WovdVrfYJiGcCcZmfbmO27018609;     WovdVrfYJiGcCcZmfbmO27018609 = WovdVrfYJiGcCcZmfbmO74365894;     WovdVrfYJiGcCcZmfbmO74365894 = WovdVrfYJiGcCcZmfbmO12686407;     WovdVrfYJiGcCcZmfbmO12686407 = WovdVrfYJiGcCcZmfbmO14935604;     WovdVrfYJiGcCcZmfbmO14935604 = WovdVrfYJiGcCcZmfbmO27896739;     WovdVrfYJiGcCcZmfbmO27896739 = WovdVrfYJiGcCcZmfbmO11887850;     WovdVrfYJiGcCcZmfbmO11887850 = WovdVrfYJiGcCcZmfbmO71774152;     WovdVrfYJiGcCcZmfbmO71774152 = WovdVrfYJiGcCcZmfbmO43869461;     WovdVrfYJiGcCcZmfbmO43869461 = WovdVrfYJiGcCcZmfbmO56802553;     WovdVrfYJiGcCcZmfbmO56802553 = WovdVrfYJiGcCcZmfbmO16552302;     WovdVrfYJiGcCcZmfbmO16552302 = WovdVrfYJiGcCcZmfbmO98199871;     WovdVrfYJiGcCcZmfbmO98199871 = WovdVrfYJiGcCcZmfbmO51329246;     WovdVrfYJiGcCcZmfbmO51329246 = WovdVrfYJiGcCcZmfbmO101478;     WovdVrfYJiGcCcZmfbmO101478 = WovdVrfYJiGcCcZmfbmO82036225;     WovdVrfYJiGcCcZmfbmO82036225 = WovdVrfYJiGcCcZmfbmO11446677;     WovdVrfYJiGcCcZmfbmO11446677 = WovdVrfYJiGcCcZmfbmO83143213;     WovdVrfYJiGcCcZmfbmO83143213 = WovdVrfYJiGcCcZmfbmO42803051;     WovdVrfYJiGcCcZmfbmO42803051 = WovdVrfYJiGcCcZmfbmO58281989;     WovdVrfYJiGcCcZmfbmO58281989 = WovdVrfYJiGcCcZmfbmO88457296;     WovdVrfYJiGcCcZmfbmO88457296 = WovdVrfYJiGcCcZmfbmO92853346;     WovdVrfYJiGcCcZmfbmO92853346 = WovdVrfYJiGcCcZmfbmO54312840;     WovdVrfYJiGcCcZmfbmO54312840 = WovdVrfYJiGcCcZmfbmO52230157;     WovdVrfYJiGcCcZmfbmO52230157 = WovdVrfYJiGcCcZmfbmO38052392;     WovdVrfYJiGcCcZmfbmO38052392 = WovdVrfYJiGcCcZmfbmO94627289;     WovdVrfYJiGcCcZmfbmO94627289 = WovdVrfYJiGcCcZmfbmO16051932;     WovdVrfYJiGcCcZmfbmO16051932 = WovdVrfYJiGcCcZmfbmO47203242;     WovdVrfYJiGcCcZmfbmO47203242 = WovdVrfYJiGcCcZmfbmO30496376;     WovdVrfYJiGcCcZmfbmO30496376 = WovdVrfYJiGcCcZmfbmO30664556;     WovdVrfYJiGcCcZmfbmO30664556 = WovdVrfYJiGcCcZmfbmO22407331;     WovdVrfYJiGcCcZmfbmO22407331 = WovdVrfYJiGcCcZmfbmO42902455;     WovdVrfYJiGcCcZmfbmO42902455 = WovdVrfYJiGcCcZmfbmO896801;     WovdVrfYJiGcCcZmfbmO896801 = WovdVrfYJiGcCcZmfbmO66260307;     WovdVrfYJiGcCcZmfbmO66260307 = WovdVrfYJiGcCcZmfbmO81530142;     WovdVrfYJiGcCcZmfbmO81530142 = WovdVrfYJiGcCcZmfbmO77992665;     WovdVrfYJiGcCcZmfbmO77992665 = WovdVrfYJiGcCcZmfbmO22555656;     WovdVrfYJiGcCcZmfbmO22555656 = WovdVrfYJiGcCcZmfbmO43717159;     WovdVrfYJiGcCcZmfbmO43717159 = WovdVrfYJiGcCcZmfbmO5231043;     WovdVrfYJiGcCcZmfbmO5231043 = WovdVrfYJiGcCcZmfbmO62083868;     WovdVrfYJiGcCcZmfbmO62083868 = WovdVrfYJiGcCcZmfbmO2755331;     WovdVrfYJiGcCcZmfbmO2755331 = WovdVrfYJiGcCcZmfbmO57691197;     WovdVrfYJiGcCcZmfbmO57691197 = WovdVrfYJiGcCcZmfbmO45862881;     WovdVrfYJiGcCcZmfbmO45862881 = WovdVrfYJiGcCcZmfbmO75537509;     WovdVrfYJiGcCcZmfbmO75537509 = WovdVrfYJiGcCcZmfbmO52973952;     WovdVrfYJiGcCcZmfbmO52973952 = WovdVrfYJiGcCcZmfbmO55888349;     WovdVrfYJiGcCcZmfbmO55888349 = WovdVrfYJiGcCcZmfbmO35163503;     WovdVrfYJiGcCcZmfbmO35163503 = WovdVrfYJiGcCcZmfbmO35765193;     WovdVrfYJiGcCcZmfbmO35765193 = WovdVrfYJiGcCcZmfbmO7955910;     WovdVrfYJiGcCcZmfbmO7955910 = WovdVrfYJiGcCcZmfbmO63494265;     WovdVrfYJiGcCcZmfbmO63494265 = WovdVrfYJiGcCcZmfbmO15999616;     WovdVrfYJiGcCcZmfbmO15999616 = WovdVrfYJiGcCcZmfbmO97471983;     WovdVrfYJiGcCcZmfbmO97471983 = WovdVrfYJiGcCcZmfbmO21769683;     WovdVrfYJiGcCcZmfbmO21769683 = WovdVrfYJiGcCcZmfbmO98263457;     WovdVrfYJiGcCcZmfbmO98263457 = WovdVrfYJiGcCcZmfbmO81275855;     WovdVrfYJiGcCcZmfbmO81275855 = WovdVrfYJiGcCcZmfbmO51759058;     WovdVrfYJiGcCcZmfbmO51759058 = WovdVrfYJiGcCcZmfbmO95561965;     WovdVrfYJiGcCcZmfbmO95561965 = WovdVrfYJiGcCcZmfbmO74788451;     WovdVrfYJiGcCcZmfbmO74788451 = WovdVrfYJiGcCcZmfbmO36313502;     WovdVrfYJiGcCcZmfbmO36313502 = WovdVrfYJiGcCcZmfbmO18059118;     WovdVrfYJiGcCcZmfbmO18059118 = WovdVrfYJiGcCcZmfbmO98883672;     WovdVrfYJiGcCcZmfbmO98883672 = WovdVrfYJiGcCcZmfbmO80693497;     WovdVrfYJiGcCcZmfbmO80693497 = WovdVrfYJiGcCcZmfbmO81391473;     WovdVrfYJiGcCcZmfbmO81391473 = WovdVrfYJiGcCcZmfbmO41109597;     WovdVrfYJiGcCcZmfbmO41109597 = WovdVrfYJiGcCcZmfbmO21462131;     WovdVrfYJiGcCcZmfbmO21462131 = WovdVrfYJiGcCcZmfbmO13900098;     WovdVrfYJiGcCcZmfbmO13900098 = WovdVrfYJiGcCcZmfbmO15655502;     WovdVrfYJiGcCcZmfbmO15655502 = WovdVrfYJiGcCcZmfbmO31939564;     WovdVrfYJiGcCcZmfbmO31939564 = WovdVrfYJiGcCcZmfbmO69799103;     WovdVrfYJiGcCcZmfbmO69799103 = WovdVrfYJiGcCcZmfbmO22108813;     WovdVrfYJiGcCcZmfbmO22108813 = WovdVrfYJiGcCcZmfbmO59480569;     WovdVrfYJiGcCcZmfbmO59480569 = WovdVrfYJiGcCcZmfbmO67729518;     WovdVrfYJiGcCcZmfbmO67729518 = WovdVrfYJiGcCcZmfbmO77912170;     WovdVrfYJiGcCcZmfbmO77912170 = WovdVrfYJiGcCcZmfbmO80719182;     WovdVrfYJiGcCcZmfbmO80719182 = WovdVrfYJiGcCcZmfbmO55526659;     WovdVrfYJiGcCcZmfbmO55526659 = WovdVrfYJiGcCcZmfbmO30766099;     WovdVrfYJiGcCcZmfbmO30766099 = WovdVrfYJiGcCcZmfbmO46990466;     WovdVrfYJiGcCcZmfbmO46990466 = WovdVrfYJiGcCcZmfbmO78775330;     WovdVrfYJiGcCcZmfbmO78775330 = WovdVrfYJiGcCcZmfbmO99256205;     WovdVrfYJiGcCcZmfbmO99256205 = WovdVrfYJiGcCcZmfbmO82164042;     WovdVrfYJiGcCcZmfbmO82164042 = WovdVrfYJiGcCcZmfbmO59463787;     WovdVrfYJiGcCcZmfbmO59463787 = WovdVrfYJiGcCcZmfbmO80286738;     WovdVrfYJiGcCcZmfbmO80286738 = WovdVrfYJiGcCcZmfbmO39247332;     WovdVrfYJiGcCcZmfbmO39247332 = WovdVrfYJiGcCcZmfbmO67002110;     WovdVrfYJiGcCcZmfbmO67002110 = WovdVrfYJiGcCcZmfbmO14664941;     WovdVrfYJiGcCcZmfbmO14664941 = WovdVrfYJiGcCcZmfbmO24935347;     WovdVrfYJiGcCcZmfbmO24935347 = WovdVrfYJiGcCcZmfbmO69579047;}
// Junk Finished

// Junk Code By Peatreat & Thaisen's Gen
void UVzWJoaboIUaXbzJVwSR54751855() {     int FyfIwESXtXKgLOkaADSM72497994 = 11187749;    int FyfIwESXtXKgLOkaADSM48960670 = -373698285;    int FyfIwESXtXKgLOkaADSM31339257 = -653196262;    int FyfIwESXtXKgLOkaADSM6136045 = -862351347;    int FyfIwESXtXKgLOkaADSM70168389 = -58046892;    int FyfIwESXtXKgLOkaADSM22654417 = -444684358;    int FyfIwESXtXKgLOkaADSM34418300 = -297240849;    int FyfIwESXtXKgLOkaADSM18441013 = -417897500;    int FyfIwESXtXKgLOkaADSM82006825 = -560802504;    int FyfIwESXtXKgLOkaADSM41281154 = -494475124;    int FyfIwESXtXKgLOkaADSM63933793 = -824337139;    int FyfIwESXtXKgLOkaADSM16981069 = -99156461;    int FyfIwESXtXKgLOkaADSM33181968 = -599530879;    int FyfIwESXtXKgLOkaADSM3931864 = -555610639;    int FyfIwESXtXKgLOkaADSM20821221 = -986832594;    int FyfIwESXtXKgLOkaADSM27915069 = -883012284;    int FyfIwESXtXKgLOkaADSM70879847 = -379878150;    int FyfIwESXtXKgLOkaADSM56279559 = -756669899;    int FyfIwESXtXKgLOkaADSM54333159 = -713746709;    int FyfIwESXtXKgLOkaADSM12840585 = -4126931;    int FyfIwESXtXKgLOkaADSM16323774 = -170117040;    int FyfIwESXtXKgLOkaADSM60720985 = -541407602;    int FyfIwESXtXKgLOkaADSM6894470 = -408401191;    int FyfIwESXtXKgLOkaADSM52647580 = -271841546;    int FyfIwESXtXKgLOkaADSM81139311 = -274804495;    int FyfIwESXtXKgLOkaADSM87836 = -473446023;    int FyfIwESXtXKgLOkaADSM61361161 = -261580858;    int FyfIwESXtXKgLOkaADSM6449021 = -29077124;    int FyfIwESXtXKgLOkaADSM65249081 = -685797339;    int FyfIwESXtXKgLOkaADSM6486552 = -624290894;    int FyfIwESXtXKgLOkaADSM25933397 = -760082238;    int FyfIwESXtXKgLOkaADSM1105094 = -929439339;    int FyfIwESXtXKgLOkaADSM12365618 = -683244511;    int FyfIwESXtXKgLOkaADSM58914170 = 42270970;    int FyfIwESXtXKgLOkaADSM24756325 = 19386961;    int FyfIwESXtXKgLOkaADSM98480278 = -868583026;    int FyfIwESXtXKgLOkaADSM79369101 = -789565638;    int FyfIwESXtXKgLOkaADSM64373784 = -350108442;    int FyfIwESXtXKgLOkaADSM19047199 = -500171967;    int FyfIwESXtXKgLOkaADSM93531268 = 89154080;    int FyfIwESXtXKgLOkaADSM3327245 = -329806898;    int FyfIwESXtXKgLOkaADSM23852500 = -620869766;    int FyfIwESXtXKgLOkaADSM64913327 = -747019934;    int FyfIwESXtXKgLOkaADSM46723136 = -180177903;    int FyfIwESXtXKgLOkaADSM10362187 = 67109612;    int FyfIwESXtXKgLOkaADSM96541610 = -180288680;    int FyfIwESXtXKgLOkaADSM31204318 = -293017459;    int FyfIwESXtXKgLOkaADSM10703152 = 88758192;    int FyfIwESXtXKgLOkaADSM34854456 = -474534320;    int FyfIwESXtXKgLOkaADSM34178068 = -762369584;    int FyfIwESXtXKgLOkaADSM56989303 = -791184218;    int FyfIwESXtXKgLOkaADSM1119556 = -466063848;    int FyfIwESXtXKgLOkaADSM13720300 = -302929713;    int FyfIwESXtXKgLOkaADSM49440385 = -550743895;    int FyfIwESXtXKgLOkaADSM38428081 = -207014605;    int FyfIwESXtXKgLOkaADSM11777010 = -447404649;    int FyfIwESXtXKgLOkaADSM42066200 = -965297095;    int FyfIwESXtXKgLOkaADSM78691677 = -281354716;    int FyfIwESXtXKgLOkaADSM24996734 = -487546852;    int FyfIwESXtXKgLOkaADSM70080554 = -584600869;    int FyfIwESXtXKgLOkaADSM61293256 = -83103500;    int FyfIwESXtXKgLOkaADSM27969279 = -168163725;    int FyfIwESXtXKgLOkaADSM53191931 = -732100162;    int FyfIwESXtXKgLOkaADSM75520274 = -936511610;    int FyfIwESXtXKgLOkaADSM15347757 = -734392886;    int FyfIwESXtXKgLOkaADSM62828699 = -894897801;    int FyfIwESXtXKgLOkaADSM4615451 = -415911951;    int FyfIwESXtXKgLOkaADSM74267798 = -541801849;    int FyfIwESXtXKgLOkaADSM79175539 = -474997600;    int FyfIwESXtXKgLOkaADSM22340943 = -18249568;    int FyfIwESXtXKgLOkaADSM48545967 = 6553353;    int FyfIwESXtXKgLOkaADSM6506064 = 70230291;    int FyfIwESXtXKgLOkaADSM37232360 = -156497932;    int FyfIwESXtXKgLOkaADSM60801890 = -702900789;    int FyfIwESXtXKgLOkaADSM9513340 = -674320034;    int FyfIwESXtXKgLOkaADSM92471274 = -549247274;    int FyfIwESXtXKgLOkaADSM95807658 = -794387669;    int FyfIwESXtXKgLOkaADSM60171333 = -128223288;    int FyfIwESXtXKgLOkaADSM42285393 = -238951159;    int FyfIwESXtXKgLOkaADSM84597701 = 5484184;    int FyfIwESXtXKgLOkaADSM68883517 = -80428565;    int FyfIwESXtXKgLOkaADSM50658009 = -250339050;    int FyfIwESXtXKgLOkaADSM71594565 = -554542804;    int FyfIwESXtXKgLOkaADSM31071013 = -923427755;    int FyfIwESXtXKgLOkaADSM49497248 = -833106676;    int FyfIwESXtXKgLOkaADSM24813842 = -194018391;    int FyfIwESXtXKgLOkaADSM87384794 = -526509626;    int FyfIwESXtXKgLOkaADSM62925233 = -32500616;    int FyfIwESXtXKgLOkaADSM20486089 = -750714426;    int FyfIwESXtXKgLOkaADSM12979316 = -533208391;    int FyfIwESXtXKgLOkaADSM56414078 = -903285932;    int FyfIwESXtXKgLOkaADSM677424 = -408210922;    int FyfIwESXtXKgLOkaADSM39377050 = -862561590;    int FyfIwESXtXKgLOkaADSM48966644 = -915571098;    int FyfIwESXtXKgLOkaADSM32238012 = -827742420;    int FyfIwESXtXKgLOkaADSM75357966 = -61643173;    int FyfIwESXtXKgLOkaADSM70660568 = -888769605;    int FyfIwESXtXKgLOkaADSM89393052 = -810508325;    int FyfIwESXtXKgLOkaADSM31375380 = -445785018;    int FyfIwESXtXKgLOkaADSM47533487 = 11187749;     FyfIwESXtXKgLOkaADSM72497994 = FyfIwESXtXKgLOkaADSM48960670;     FyfIwESXtXKgLOkaADSM48960670 = FyfIwESXtXKgLOkaADSM31339257;     FyfIwESXtXKgLOkaADSM31339257 = FyfIwESXtXKgLOkaADSM6136045;     FyfIwESXtXKgLOkaADSM6136045 = FyfIwESXtXKgLOkaADSM70168389;     FyfIwESXtXKgLOkaADSM70168389 = FyfIwESXtXKgLOkaADSM22654417;     FyfIwESXtXKgLOkaADSM22654417 = FyfIwESXtXKgLOkaADSM34418300;     FyfIwESXtXKgLOkaADSM34418300 = FyfIwESXtXKgLOkaADSM18441013;     FyfIwESXtXKgLOkaADSM18441013 = FyfIwESXtXKgLOkaADSM82006825;     FyfIwESXtXKgLOkaADSM82006825 = FyfIwESXtXKgLOkaADSM41281154;     FyfIwESXtXKgLOkaADSM41281154 = FyfIwESXtXKgLOkaADSM63933793;     FyfIwESXtXKgLOkaADSM63933793 = FyfIwESXtXKgLOkaADSM16981069;     FyfIwESXtXKgLOkaADSM16981069 = FyfIwESXtXKgLOkaADSM33181968;     FyfIwESXtXKgLOkaADSM33181968 = FyfIwESXtXKgLOkaADSM3931864;     FyfIwESXtXKgLOkaADSM3931864 = FyfIwESXtXKgLOkaADSM20821221;     FyfIwESXtXKgLOkaADSM20821221 = FyfIwESXtXKgLOkaADSM27915069;     FyfIwESXtXKgLOkaADSM27915069 = FyfIwESXtXKgLOkaADSM70879847;     FyfIwESXtXKgLOkaADSM70879847 = FyfIwESXtXKgLOkaADSM56279559;     FyfIwESXtXKgLOkaADSM56279559 = FyfIwESXtXKgLOkaADSM54333159;     FyfIwESXtXKgLOkaADSM54333159 = FyfIwESXtXKgLOkaADSM12840585;     FyfIwESXtXKgLOkaADSM12840585 = FyfIwESXtXKgLOkaADSM16323774;     FyfIwESXtXKgLOkaADSM16323774 = FyfIwESXtXKgLOkaADSM60720985;     FyfIwESXtXKgLOkaADSM60720985 = FyfIwESXtXKgLOkaADSM6894470;     FyfIwESXtXKgLOkaADSM6894470 = FyfIwESXtXKgLOkaADSM52647580;     FyfIwESXtXKgLOkaADSM52647580 = FyfIwESXtXKgLOkaADSM81139311;     FyfIwESXtXKgLOkaADSM81139311 = FyfIwESXtXKgLOkaADSM87836;     FyfIwESXtXKgLOkaADSM87836 = FyfIwESXtXKgLOkaADSM61361161;     FyfIwESXtXKgLOkaADSM61361161 = FyfIwESXtXKgLOkaADSM6449021;     FyfIwESXtXKgLOkaADSM6449021 = FyfIwESXtXKgLOkaADSM65249081;     FyfIwESXtXKgLOkaADSM65249081 = FyfIwESXtXKgLOkaADSM6486552;     FyfIwESXtXKgLOkaADSM6486552 = FyfIwESXtXKgLOkaADSM25933397;     FyfIwESXtXKgLOkaADSM25933397 = FyfIwESXtXKgLOkaADSM1105094;     FyfIwESXtXKgLOkaADSM1105094 = FyfIwESXtXKgLOkaADSM12365618;     FyfIwESXtXKgLOkaADSM12365618 = FyfIwESXtXKgLOkaADSM58914170;     FyfIwESXtXKgLOkaADSM58914170 = FyfIwESXtXKgLOkaADSM24756325;     FyfIwESXtXKgLOkaADSM24756325 = FyfIwESXtXKgLOkaADSM98480278;     FyfIwESXtXKgLOkaADSM98480278 = FyfIwESXtXKgLOkaADSM79369101;     FyfIwESXtXKgLOkaADSM79369101 = FyfIwESXtXKgLOkaADSM64373784;     FyfIwESXtXKgLOkaADSM64373784 = FyfIwESXtXKgLOkaADSM19047199;     FyfIwESXtXKgLOkaADSM19047199 = FyfIwESXtXKgLOkaADSM93531268;     FyfIwESXtXKgLOkaADSM93531268 = FyfIwESXtXKgLOkaADSM3327245;     FyfIwESXtXKgLOkaADSM3327245 = FyfIwESXtXKgLOkaADSM23852500;     FyfIwESXtXKgLOkaADSM23852500 = FyfIwESXtXKgLOkaADSM64913327;     FyfIwESXtXKgLOkaADSM64913327 = FyfIwESXtXKgLOkaADSM46723136;     FyfIwESXtXKgLOkaADSM46723136 = FyfIwESXtXKgLOkaADSM10362187;     FyfIwESXtXKgLOkaADSM10362187 = FyfIwESXtXKgLOkaADSM96541610;     FyfIwESXtXKgLOkaADSM96541610 = FyfIwESXtXKgLOkaADSM31204318;     FyfIwESXtXKgLOkaADSM31204318 = FyfIwESXtXKgLOkaADSM10703152;     FyfIwESXtXKgLOkaADSM10703152 = FyfIwESXtXKgLOkaADSM34854456;     FyfIwESXtXKgLOkaADSM34854456 = FyfIwESXtXKgLOkaADSM34178068;     FyfIwESXtXKgLOkaADSM34178068 = FyfIwESXtXKgLOkaADSM56989303;     FyfIwESXtXKgLOkaADSM56989303 = FyfIwESXtXKgLOkaADSM1119556;     FyfIwESXtXKgLOkaADSM1119556 = FyfIwESXtXKgLOkaADSM13720300;     FyfIwESXtXKgLOkaADSM13720300 = FyfIwESXtXKgLOkaADSM49440385;     FyfIwESXtXKgLOkaADSM49440385 = FyfIwESXtXKgLOkaADSM38428081;     FyfIwESXtXKgLOkaADSM38428081 = FyfIwESXtXKgLOkaADSM11777010;     FyfIwESXtXKgLOkaADSM11777010 = FyfIwESXtXKgLOkaADSM42066200;     FyfIwESXtXKgLOkaADSM42066200 = FyfIwESXtXKgLOkaADSM78691677;     FyfIwESXtXKgLOkaADSM78691677 = FyfIwESXtXKgLOkaADSM24996734;     FyfIwESXtXKgLOkaADSM24996734 = FyfIwESXtXKgLOkaADSM70080554;     FyfIwESXtXKgLOkaADSM70080554 = FyfIwESXtXKgLOkaADSM61293256;     FyfIwESXtXKgLOkaADSM61293256 = FyfIwESXtXKgLOkaADSM27969279;     FyfIwESXtXKgLOkaADSM27969279 = FyfIwESXtXKgLOkaADSM53191931;     FyfIwESXtXKgLOkaADSM53191931 = FyfIwESXtXKgLOkaADSM75520274;     FyfIwESXtXKgLOkaADSM75520274 = FyfIwESXtXKgLOkaADSM15347757;     FyfIwESXtXKgLOkaADSM15347757 = FyfIwESXtXKgLOkaADSM62828699;     FyfIwESXtXKgLOkaADSM62828699 = FyfIwESXtXKgLOkaADSM4615451;     FyfIwESXtXKgLOkaADSM4615451 = FyfIwESXtXKgLOkaADSM74267798;     FyfIwESXtXKgLOkaADSM74267798 = FyfIwESXtXKgLOkaADSM79175539;     FyfIwESXtXKgLOkaADSM79175539 = FyfIwESXtXKgLOkaADSM22340943;     FyfIwESXtXKgLOkaADSM22340943 = FyfIwESXtXKgLOkaADSM48545967;     FyfIwESXtXKgLOkaADSM48545967 = FyfIwESXtXKgLOkaADSM6506064;     FyfIwESXtXKgLOkaADSM6506064 = FyfIwESXtXKgLOkaADSM37232360;     FyfIwESXtXKgLOkaADSM37232360 = FyfIwESXtXKgLOkaADSM60801890;     FyfIwESXtXKgLOkaADSM60801890 = FyfIwESXtXKgLOkaADSM9513340;     FyfIwESXtXKgLOkaADSM9513340 = FyfIwESXtXKgLOkaADSM92471274;     FyfIwESXtXKgLOkaADSM92471274 = FyfIwESXtXKgLOkaADSM95807658;     FyfIwESXtXKgLOkaADSM95807658 = FyfIwESXtXKgLOkaADSM60171333;     FyfIwESXtXKgLOkaADSM60171333 = FyfIwESXtXKgLOkaADSM42285393;     FyfIwESXtXKgLOkaADSM42285393 = FyfIwESXtXKgLOkaADSM84597701;     FyfIwESXtXKgLOkaADSM84597701 = FyfIwESXtXKgLOkaADSM68883517;     FyfIwESXtXKgLOkaADSM68883517 = FyfIwESXtXKgLOkaADSM50658009;     FyfIwESXtXKgLOkaADSM50658009 = FyfIwESXtXKgLOkaADSM71594565;     FyfIwESXtXKgLOkaADSM71594565 = FyfIwESXtXKgLOkaADSM31071013;     FyfIwESXtXKgLOkaADSM31071013 = FyfIwESXtXKgLOkaADSM49497248;     FyfIwESXtXKgLOkaADSM49497248 = FyfIwESXtXKgLOkaADSM24813842;     FyfIwESXtXKgLOkaADSM24813842 = FyfIwESXtXKgLOkaADSM87384794;     FyfIwESXtXKgLOkaADSM87384794 = FyfIwESXtXKgLOkaADSM62925233;     FyfIwESXtXKgLOkaADSM62925233 = FyfIwESXtXKgLOkaADSM20486089;     FyfIwESXtXKgLOkaADSM20486089 = FyfIwESXtXKgLOkaADSM12979316;     FyfIwESXtXKgLOkaADSM12979316 = FyfIwESXtXKgLOkaADSM56414078;     FyfIwESXtXKgLOkaADSM56414078 = FyfIwESXtXKgLOkaADSM677424;     FyfIwESXtXKgLOkaADSM677424 = FyfIwESXtXKgLOkaADSM39377050;     FyfIwESXtXKgLOkaADSM39377050 = FyfIwESXtXKgLOkaADSM48966644;     FyfIwESXtXKgLOkaADSM48966644 = FyfIwESXtXKgLOkaADSM32238012;     FyfIwESXtXKgLOkaADSM32238012 = FyfIwESXtXKgLOkaADSM75357966;     FyfIwESXtXKgLOkaADSM75357966 = FyfIwESXtXKgLOkaADSM70660568;     FyfIwESXtXKgLOkaADSM70660568 = FyfIwESXtXKgLOkaADSM89393052;     FyfIwESXtXKgLOkaADSM89393052 = FyfIwESXtXKgLOkaADSM31375380;     FyfIwESXtXKgLOkaADSM31375380 = FyfIwESXtXKgLOkaADSM47533487;     FyfIwESXtXKgLOkaADSM47533487 = FyfIwESXtXKgLOkaADSM72497994;}
// Junk Finished
